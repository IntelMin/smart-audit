"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@walletconnect+legacy-modal@2.0.0";
exports.ids = ["vendor-chunks/@walletconnect+legacy-modal@2.0.0"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/@walletconnect+legacy-modal@2.0.0/node_modules/@walletconnect/legacy-modal/dist/cjs/index.js":
/*!*************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@walletconnect+legacy-modal@2.0.0/node_modules/@walletconnect/legacy-modal/dist/cjs/index.js ***!
  \*************************************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nfunction _interopDefault(ex) {\n    return ex && typeof ex === \"object\" && \"default\" in ex ? ex[\"default\"] : ex;\n}\nvar legacyUtils = __webpack_require__(/*! @walletconnect/legacy-utils */ \"(ssr)/./node_modules/.pnpm/@walletconnect+legacy-utils@2.0.0/node_modules/@walletconnect/legacy-utils/dist/cjs/index.js\");\nvar QRCode = _interopDefault(__webpack_require__(/*! qrcode */ \"(ssr)/./node_modules/.pnpm/qrcode@1.5.3/node_modules/qrcode/lib/index.js\"));\nvar copy = _interopDefault(__webpack_require__(/*! copy-to-clipboard */ \"(ssr)/./node_modules/.pnpm/copy-to-clipboard@3.3.3/node_modules/copy-to-clipboard/index.js\"));\nvar React = __webpack_require__(/*! preact/compat */ \"(ssr)/./node_modules/.pnpm/preact@10.19.5/node_modules/preact/compat/dist/compat.js\");\nfunction open(uri) {\n    QRCode.toString(uri, {\n        type: \"terminal\"\n    }).then(console.log);\n}\nvar WALLETCONNECT_STYLE_SHEET = ':root {\\n  --animation-duration: 300ms;\\n}\\n\\n@keyframes fadeIn {\\n  from {\\n    opacity: 0;\\n  }\\n  to {\\n    opacity: 1;\\n  }\\n}\\n\\n@keyframes fadeOut {\\n  from {\\n    opacity: 1;\\n  }\\n  to {\\n    opacity: 0;\\n  }\\n}\\n\\n.animated {\\n  animation-duration: var(--animation-duration);\\n  animation-fill-mode: both;\\n}\\n\\n.fadeIn {\\n  animation-name: fadeIn;\\n}\\n\\n.fadeOut {\\n  animation-name: fadeOut;\\n}\\n\\n#walletconnect-wrapper {\\n  -webkit-user-select: none;\\n  align-items: center;\\n  display: flex;\\n  height: 100%;\\n  justify-content: center;\\n  left: 0;\\n  pointer-events: none;\\n  position: fixed;\\n  top: 0;\\n  user-select: none;\\n  width: 100%;\\n  z-index: 99999999999999;\\n}\\n\\n.walletconnect-modal__headerLogo {\\n  height: 21px;\\n}\\n\\n.walletconnect-modal__header p {\\n  color: #ffffff;\\n  font-size: 20px;\\n  font-weight: 600;\\n  margin: 0;\\n  align-items: flex-start;\\n  display: flex;\\n  flex: 1;\\n  margin-left: 5px;\\n}\\n\\n.walletconnect-modal__close__wrapper {\\n  position: absolute;\\n  top: 0px;\\n  right: 0px;\\n  z-index: 10000;\\n  background: white;\\n  border-radius: 26px;\\n  padding: 6px;\\n  box-sizing: border-box;\\n  width: 26px;\\n  height: 26px;\\n  cursor: pointer;\\n}\\n\\n.walletconnect-modal__close__icon {\\n  position: relative;\\n  top: 7px;\\n  right: 0;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  transform: rotate(45deg);\\n}\\n\\n.walletconnect-modal__close__line1 {\\n  position: absolute;\\n  width: 100%;\\n  border: 1px solid rgb(48, 52, 59);\\n}\\n\\n.walletconnect-modal__close__line2 {\\n  position: absolute;\\n  width: 100%;\\n  border: 1px solid rgb(48, 52, 59);\\n  transform: rotate(90deg);\\n}\\n\\n.walletconnect-qrcode__base {\\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\\n  background: rgba(37, 41, 46, 0.95);\\n  height: 100%;\\n  left: 0;\\n  pointer-events: auto;\\n  position: fixed;\\n  top: 0;\\n  transition: 0.4s cubic-bezier(0.19, 1, 0.22, 1);\\n  width: 100%;\\n  will-change: opacity;\\n  padding: 40px;\\n  box-sizing: border-box;\\n}\\n\\n.walletconnect-qrcode__text {\\n  color: rgba(60, 66, 82, 0.6);\\n  font-size: 16px;\\n  font-weight: 600;\\n  letter-spacing: 0;\\n  line-height: 1.1875em;\\n  margin: 10px 0 20px 0;\\n  text-align: center;\\n  width: 100%;\\n}\\n\\n@media only screen and (max-width: 768px) {\\n  .walletconnect-qrcode__text {\\n    font-size: 4vw;\\n  }\\n}\\n\\n@media only screen and (max-width: 320px) {\\n  .walletconnect-qrcode__text {\\n    font-size: 14px;\\n  }\\n}\\n\\n.walletconnect-qrcode__image {\\n  width: calc(100% - 30px);\\n  box-sizing: border-box;\\n  cursor: none;\\n  margin: 0 auto;\\n}\\n\\n.walletconnect-qrcode__notification {\\n  position: absolute;\\n  bottom: 0;\\n  left: 0;\\n  right: 0;\\n  font-size: 16px;\\n  padding: 16px 20px;\\n  border-radius: 16px;\\n  text-align: center;\\n  transition: all 0.1s ease-in-out;\\n  background: white;\\n  color: black;\\n  margin-bottom: -60px;\\n  opacity: 0;\\n}\\n\\n.walletconnect-qrcode__notification.notification__show {\\n  opacity: 1;\\n}\\n\\n@media only screen and (max-width: 768px) {\\n  .walletconnect-modal__header {\\n    height: 130px;\\n  }\\n  .walletconnect-modal__base {\\n    overflow: auto;\\n  }\\n}\\n\\n@media only screen and (min-device-width: 415px) and (max-width: 768px) {\\n  #content {\\n    max-width: 768px;\\n    box-sizing: border-box;\\n  }\\n}\\n\\n@media only screen and (min-width: 375px) and (max-width: 415px) {\\n  #content {\\n    max-width: 414px;\\n    box-sizing: border-box;\\n  }\\n}\\n\\n@media only screen and (min-width: 320px) and (max-width: 375px) {\\n  #content {\\n    max-width: 375px;\\n    box-sizing: border-box;\\n  }\\n}\\n\\n@media only screen and (max-width: 320px) {\\n  #content {\\n    max-width: 320px;\\n    box-sizing: border-box;\\n  }\\n}\\n\\n.walletconnect-modal__base {\\n  -webkit-font-smoothing: antialiased;\\n  background: #ffffff;\\n  border-radius: 24px;\\n  box-shadow: 0 10px 50px 5px rgba(0, 0, 0, 0.4);\\n  font-family: ui-rounded, \"SF Pro Rounded\", \"SF Pro Text\", medium-content-sans-serif-font,\\n    -apple-system, BlinkMacSystemFont, ui-sans-serif, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell,\\n    \"Open Sans\", \"Helvetica Neue\", sans-serif;\\n  margin-top: 41px;\\n  padding: 24px 24px 22px;\\n  pointer-events: auto;\\n  position: relative;\\n  text-align: center;\\n  transition: 0.4s cubic-bezier(0.19, 1, 0.22, 1);\\n  will-change: transform;\\n  overflow: visible;\\n  transform: translateY(-50%);\\n  top: 50%;\\n  max-width: 500px;\\n  margin: auto;\\n}\\n\\n@media only screen and (max-width: 320px) {\\n  .walletconnect-modal__base {\\n    padding: 24px 12px;\\n  }\\n}\\n\\n.walletconnect-modal__base .hidden {\\n  transform: translateY(150%);\\n  transition: 0.125s cubic-bezier(0.4, 0, 1, 1);\\n}\\n\\n.walletconnect-modal__header {\\n  align-items: center;\\n  display: flex;\\n  height: 26px;\\n  left: 0;\\n  justify-content: space-between;\\n  position: absolute;\\n  top: -42px;\\n  width: 100%;\\n}\\n\\n.walletconnect-modal__base .wc-logo {\\n  align-items: center;\\n  display: flex;\\n  height: 26px;\\n  margin-top: 15px;\\n  padding-bottom: 15px;\\n  pointer-events: auto;\\n}\\n\\n.walletconnect-modal__base .wc-logo div {\\n  background-color: #3399ff;\\n  height: 21px;\\n  margin-right: 5px;\\n  mask-image: url(\"images/wc-logo.svg\") center no-repeat;\\n  width: 32px;\\n}\\n\\n.walletconnect-modal__base .wc-logo p {\\n  color: #ffffff;\\n  font-size: 20px;\\n  font-weight: 600;\\n  margin: 0;\\n}\\n\\n.walletconnect-modal__base h2 {\\n  color: rgba(60, 66, 82, 0.6);\\n  font-size: 16px;\\n  font-weight: 600;\\n  letter-spacing: 0;\\n  line-height: 1.1875em;\\n  margin: 0 0 19px 0;\\n  text-align: center;\\n  width: 100%;\\n}\\n\\n.walletconnect-modal__base__row {\\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\\n  align-items: center;\\n  border-radius: 20px;\\n  cursor: pointer;\\n  display: flex;\\n  height: 56px;\\n  justify-content: space-between;\\n  padding: 0 15px;\\n  position: relative;\\n  margin: 0px 0px 8px;\\n  text-align: left;\\n  transition: 0.15s cubic-bezier(0.25, 0.46, 0.45, 0.94);\\n  will-change: transform;\\n  text-decoration: none;\\n}\\n\\n.walletconnect-modal__base__row:hover {\\n  background: rgba(60, 66, 82, 0.06);\\n}\\n\\n.walletconnect-modal__base__row:active {\\n  background: rgba(60, 66, 82, 0.06);\\n  transform: scale(0.975);\\n  transition: 0.1s cubic-bezier(0.25, 0.46, 0.45, 0.94);\\n}\\n\\n.walletconnect-modal__base__row__h3 {\\n  color: #25292e;\\n  font-size: 20px;\\n  font-weight: 700;\\n  margin: 0;\\n  padding-bottom: 3px;\\n}\\n\\n.walletconnect-modal__base__row__right {\\n  align-items: center;\\n  display: flex;\\n  justify-content: center;\\n}\\n\\n.walletconnect-modal__base__row__right__app-icon {\\n  border-radius: 8px;\\n  height: 34px;\\n  margin: 0 11px 2px 0;\\n  width: 34px;\\n  background-size: 100%;\\n  box-shadow: 0 4px 12px 0 rgba(37, 41, 46, 0.25);\\n}\\n\\n.walletconnect-modal__base__row__right__caret {\\n  height: 18px;\\n  opacity: 0.3;\\n  transition: 0.1s cubic-bezier(0.25, 0.46, 0.45, 0.94);\\n  width: 8px;\\n  will-change: opacity;\\n}\\n\\n.walletconnect-modal__base__row:hover .caret,\\n.walletconnect-modal__base__row:active .caret {\\n  opacity: 0.6;\\n}\\n\\n.walletconnect-modal__mobile__toggle {\\n  width: 80%;\\n  display: flex;\\n  margin: 0 auto;\\n  position: relative;\\n  overflow: hidden;\\n  border-radius: 8px;\\n  margin-bottom: 18px;\\n  background: #d4d5d9;\\n}\\n\\n.walletconnect-modal__single_wallet {\\n  display: flex;\\n  justify-content: center;\\n  margin-top: 7px;\\n  margin-bottom: 18px;\\n}\\n\\n.walletconnect-modal__single_wallet a {\\n  cursor: pointer;\\n  color: rgb(64, 153, 255);\\n  font-size: 21px;\\n  font-weight: 800;\\n  text-decoration: none !important;\\n  margin: 0 auto;\\n}\\n\\n.walletconnect-modal__mobile__toggle_selector {\\n  width: calc(50% - 8px);\\n  background: white;\\n  position: absolute;\\n  border-radius: 5px;\\n  height: calc(100% - 8px);\\n  top: 4px;\\n  transition: all 0.2s ease-in-out;\\n  transform: translate3d(4px, 0, 0);\\n}\\n\\n.walletconnect-modal__mobile__toggle.right__selected .walletconnect-modal__mobile__toggle_selector {\\n  transform: translate3d(calc(100% + 12px), 0, 0);\\n}\\n\\n.walletconnect-modal__mobile__toggle a {\\n  font-size: 12px;\\n  width: 50%;\\n  text-align: center;\\n  padding: 8px;\\n  margin: 0;\\n  font-weight: 600;\\n  z-index: 1;\\n}\\n\\n.walletconnect-modal__footer {\\n  display: flex;\\n  justify-content: center;\\n  margin-top: 20px;\\n}\\n\\n@media only screen and (max-width: 768px) {\\n  .walletconnect-modal__footer {\\n    margin-top: 5vw;\\n  }\\n}\\n\\n.walletconnect-modal__footer a {\\n  cursor: pointer;\\n  color: #898d97;\\n  font-size: 15px;\\n  margin: 0 auto;\\n}\\n\\n@media only screen and (max-width: 320px) {\\n  .walletconnect-modal__footer a {\\n    font-size: 14px;\\n  }\\n}\\n\\n.walletconnect-connect__buttons__wrapper {\\n  max-height: 44vh;\\n}\\n\\n.walletconnect-connect__buttons__wrapper__android {\\n  margin: 50% 0;\\n}\\n\\n.walletconnect-connect__buttons__wrapper__wrap {\\n  display: grid;\\n  grid-template-columns: repeat(4, 1fr);\\n  margin: 10px 0;\\n}\\n\\n@media only screen and (min-width: 768px) {\\n  .walletconnect-connect__buttons__wrapper__wrap {\\n    margin-top: 40px;\\n  }\\n}\\n\\n.walletconnect-connect__button {\\n  background-color: rgb(64, 153, 255);\\n  padding: 12px;\\n  border-radius: 8px;\\n  text-decoration: none;\\n  color: rgb(255, 255, 255);\\n  font-weight: 500;\\n}\\n\\n.walletconnect-connect__button__icon_anchor {\\n  cursor: pointer;\\n  display: flex;\\n  justify-content: flex-start;\\n  align-items: center;\\n  margin: 8px;\\n  width: 42px;\\n  justify-self: center;\\n  flex-direction: column;\\n  text-decoration: none !important;\\n}\\n\\n@media only screen and (max-width: 320px) {\\n  .walletconnect-connect__button__icon_anchor {\\n    margin: 4px;\\n  }\\n}\\n\\n.walletconnect-connect__button__icon {\\n  border-radius: 10px;\\n  height: 42px;\\n  margin: 0;\\n  width: 42px;\\n  background-size: cover !important;\\n  box-shadow: 0 4px 12px 0 rgba(37, 41, 46, 0.25);\\n}\\n\\n.walletconnect-connect__button__text {\\n  color: #424952;\\n  font-size: 2.7vw;\\n  text-decoration: none !important;\\n  padding: 0;\\n  margin-top: 1.8vw;\\n  font-weight: 600;\\n}\\n\\n@media only screen and (min-width: 768px) {\\n  .walletconnect-connect__button__text {\\n    font-size: 16px;\\n    margin-top: 12px;\\n  }\\n}\\n\\n.walletconnect-search__input {\\n  border: none;\\n  background: #d4d5d9;\\n  border-style: none;\\n  padding: 8px 16px;\\n  outline: none;\\n  font-style: normal;\\n  font-stretch: normal;\\n  font-size: 16px;\\n  font-style: normal;\\n  font-stretch: normal;\\n  line-height: normal;\\n  letter-spacing: normal;\\n  text-align: left;\\n  border-radius: 8px;\\n  width: calc(100% - 16px);\\n  margin: 0;\\n  margin-bottom: 8px;\\n}\\n';\n// A type of promise-like that resolves synchronously and supports only one observer\nvar _iteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? Symbol.iterator || (Symbol.iterator = Symbol(\"Symbol.iterator\")) : \"@@iterator\";\nvar _asyncIteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? Symbol.asyncIterator || (Symbol.asyncIterator = Symbol(\"Symbol.asyncIterator\")) : \"@@asyncIterator\";\n// Asynchronously call a function and send errors to recovery continuation\nfunction _catch(body, recover) {\n    try {\n        var result = body();\n    } catch (e) {\n        return recover(e);\n    }\n    if (result && result.then) {\n        return result.then(void 0, recover);\n    }\n    return result;\n}\nvar WALLETCONNECT_LOGO_SVG_URL = \"data:image/svg+xml,%3C?xml version='1.0' encoding='UTF-8'?%3E %3Csvg width='300px' height='185px' viewBox='0 0 300 185' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E %3C!-- Generator: Sketch 49.3 (51167) - http://www.bohemiancoding.com/sketch --%3E %3Ctitle%3EWalletConnect%3C/title%3E %3Cdesc%3ECreated with Sketch.%3C/desc%3E %3Cdefs%3E%3C/defs%3E %3Cg id='Page-1' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3E %3Cg id='walletconnect-logo-alt' fill='%233B99FC' fill-rule='nonzero'%3E %3Cpath d='M61.4385429,36.2562612 C110.349767,-11.6319051 189.65053,-11.6319051 238.561752,36.2562612 L244.448297,42.0196786 C246.893858,44.4140867 246.893858,48.2961898 244.448297,50.690599 L224.311602,70.406102 C223.088821,71.6033071 221.106302,71.6033071 219.883521,70.406102 L211.782937,62.4749541 C177.661245,29.0669724 122.339051,29.0669724 88.2173582,62.4749541 L79.542302,70.9685592 C78.3195204,72.1657633 76.337001,72.1657633 75.1142214,70.9685592 L54.9775265,51.2530561 C52.5319653,48.8586469 52.5319653,44.9765439 54.9775265,42.5821357 L61.4385429,36.2562612 Z M280.206339,77.0300061 L298.128036,94.5769031 C300.573585,96.9713 300.573599,100.85338 298.128067,103.247793 L217.317896,182.368927 C214.872352,184.763353 210.907314,184.76338 208.461736,182.368989 C208.461726,182.368979 208.461714,182.368967 208.461704,182.368957 L151.107561,126.214385 C150.496171,125.615783 149.504911,125.615783 148.893521,126.214385 C148.893517,126.214389 148.893514,126.214393 148.89351,126.214396 L91.5405888,182.368927 C89.095052,184.763359 85.1300133,184.763399 82.6844276,182.369014 C82.6844133,182.369 82.684398,182.368986 82.6843827,182.36897 L1.87196327,103.246785 C-0.573596939,100.852377 -0.573596939,96.9702735 1.87196327,94.5758653 L19.7936929,77.028998 C22.2392531,74.6345898 26.2042918,74.6345898 28.6498531,77.028998 L86.0048306,133.184355 C86.6162214,133.782957 87.6074796,133.782957 88.2188704,133.184355 C88.2188796,133.184346 88.2188878,133.184338 88.2188969,133.184331 L145.571,77.028998 C148.016505,74.6345347 151.981544,74.6344449 154.427161,77.028798 C154.427195,77.0288316 154.427229,77.0288653 154.427262,77.028899 L211.782164,133.184331 C212.393554,133.782932 213.384814,133.782932 213.996204,133.184331 L271.350179,77.0300061 C273.79574,74.6355969 277.760778,74.6355969 280.206339,77.0300061 Z' id='WalletConnect'%3E%3C/path%3E %3C/g%3E %3C/g%3E %3C/svg%3E\";\nvar WALLETCONNECT_HEADER_TEXT = \"WalletConnect\";\nvar ANIMATION_DURATION = 300;\nvar DEFAULT_BUTTON_COLOR = \"rgb(64, 153, 255)\";\nvar WALLETCONNECT_WRAPPER_ID = \"walletconnect-wrapper\";\nvar WALLETCONNECT_STYLE_ID = \"walletconnect-style-sheet\";\nvar WALLETCONNECT_MODAL_ID = \"walletconnect-qrcode-modal\";\nvar WALLETCONNECT_CLOSE_BUTTON_ID = \"walletconnect-qrcode-close\";\nvar WALLETCONNECT_CTA_TEXT_ID = \"walletconnect-qrcode-text\";\nvar WALLETCONNECT_CONNECT_BUTTON_ID = \"walletconnect-connect-button\";\nfunction Header(props) {\n    return React.createElement(\"div\", {\n        className: \"walletconnect-modal__header\"\n    }, React.createElement(\"img\", {\n        src: WALLETCONNECT_LOGO_SVG_URL,\n        className: \"walletconnect-modal__headerLogo\"\n    }), React.createElement(\"p\", null, WALLETCONNECT_HEADER_TEXT), React.createElement(\"div\", {\n        className: \"walletconnect-modal__close__wrapper\",\n        onClick: props.onClose\n    }, React.createElement(\"div\", {\n        id: WALLETCONNECT_CLOSE_BUTTON_ID,\n        className: \"walletconnect-modal__close__icon\"\n    }, React.createElement(\"div\", {\n        className: \"walletconnect-modal__close__line1\"\n    }), React.createElement(\"div\", {\n        className: \"walletconnect-modal__close__line2\"\n    }))));\n}\nfunction ConnectButton(props) {\n    return React.createElement(\"a\", {\n        className: \"walletconnect-connect__button\",\n        href: props.href,\n        id: WALLETCONNECT_CONNECT_BUTTON_ID + \"-\" + props.name,\n        onClick: props.onClick,\n        rel: \"noopener noreferrer\",\n        style: {\n            backgroundColor: props.color\n        },\n        target: \"_blank\"\n    }, props.name);\n}\nvar CARET_SVG_URL = \"data:image/svg+xml,%3Csvg width='8' height='18' viewBox='0 0 8 18' fill='none' xmlns='http://www.w3.org/2000/svg'%3E %3Cpath fill-rule='evenodd' clip-rule='evenodd' d='M0.586301 0.213898C0.150354 0.552968 0.0718197 1.18124 0.41089 1.61719L5.2892 7.88931C5.57007 8.25042 5.57007 8.75608 5.2892 9.11719L0.410889 15.3893C0.071819 15.8253 0.150353 16.4535 0.586301 16.7926C1.02225 17.1317 1.65052 17.0531 1.98959 16.6172L6.86791 10.3451C7.7105 9.26174 7.7105 7.74476 6.86791 6.66143L1.98959 0.38931C1.65052 -0.0466374 1.02225 -0.125172 0.586301 0.213898Z' fill='%233C4252'/%3E %3C/svg%3E\";\nfunction WalletButton(props) {\n    var color = props.color;\n    var href = props.href;\n    var name = props.name;\n    var logo = props.logo;\n    var onClick = props.onClick;\n    return React.createElement(\"a\", {\n        className: \"walletconnect-modal__base__row\",\n        href: href,\n        onClick: onClick,\n        rel: \"noopener noreferrer\",\n        target: \"_blank\"\n    }, React.createElement(\"h3\", {\n        className: \"walletconnect-modal__base__row__h3\"\n    }, name), React.createElement(\"div\", {\n        className: \"walletconnect-modal__base__row__right\"\n    }, React.createElement(\"div\", {\n        className: \"walletconnect-modal__base__row__right__app-icon\",\n        style: {\n            background: \"url('\" + logo + \"') \" + color,\n            backgroundSize: \"100%\"\n        }\n    }), React.createElement(\"img\", {\n        src: CARET_SVG_URL,\n        className: \"walletconnect-modal__base__row__right__caret\"\n    })));\n}\nfunction WalletIcon(props) {\n    var color = props.color;\n    var href = props.href;\n    var name = props.name;\n    var logo = props.logo;\n    var onClick = props.onClick;\n    var fontSize = window.innerWidth < 768 ? (name.length > 8 ? 2.5 : 2.7) + \"vw\" : \"inherit\";\n    return React.createElement(\"a\", {\n        className: \"walletconnect-connect__button__icon_anchor\",\n        href: href,\n        onClick: onClick,\n        rel: \"noopener noreferrer\",\n        target: \"_blank\"\n    }, React.createElement(\"div\", {\n        className: \"walletconnect-connect__button__icon\",\n        style: {\n            background: \"url('\" + logo + \"') \" + color,\n            backgroundSize: \"100%\"\n        }\n    }), React.createElement(\"div\", {\n        style: {\n            fontSize: fontSize\n        },\n        className: \"walletconnect-connect__button__text\"\n    }, name));\n}\nvar GRID_MIN_COUNT = 5;\nvar LINKS_PER_PAGE = 12;\nfunction LinkDisplay(props) {\n    var android = legacyUtils.isAndroid();\n    var ref = React.useState(\"\");\n    var input = ref[0];\n    var setInput = ref[1];\n    var ref$1 = React.useState(\"\");\n    var filter = ref$1[0];\n    var setFilter = ref$1[1];\n    var ref$2 = React.useState(1);\n    var page = ref$2[0];\n    var setPage = ref$2[1];\n    var links = filter ? props.links.filter(function(link) {\n        return link.name.toLowerCase().includes(filter.toLowerCase());\n    }) : props.links;\n    var errorMessage = props.errorMessage;\n    var grid = filter || links.length > GRID_MIN_COUNT;\n    var pages = Math.ceil(links.length / LINKS_PER_PAGE);\n    var range = [\n        (page - 1) * LINKS_PER_PAGE + 1,\n        page * LINKS_PER_PAGE\n    ];\n    var pageLinks = links.length ? links.filter(function(_, index) {\n        return index + 1 >= range[0] && index + 1 <= range[1];\n    }) : [];\n    var hasPaging = !!(!android && pages > 1);\n    var filterTimeout = undefined;\n    function handleInput(e) {\n        setInput(e.target.value);\n        clearTimeout(filterTimeout);\n        if (e.target.value) {\n            filterTimeout = setTimeout(function() {\n                setFilter(e.target.value);\n                setPage(1);\n            }, 1000);\n        } else {\n            setInput(\"\");\n            setFilter(\"\");\n            setPage(1);\n        }\n    }\n    return React.createElement(\"div\", null, React.createElement(\"p\", {\n        id: WALLETCONNECT_CTA_TEXT_ID,\n        className: \"walletconnect-qrcode__text\"\n    }, android ? props.text.connect_mobile_wallet : props.text.choose_preferred_wallet), !android && React.createElement(\"input\", {\n        className: \"walletconnect-search__input\",\n        placeholder: \"Search\",\n        value: input,\n        onChange: handleInput\n    }), React.createElement(\"div\", {\n        className: \"walletconnect-connect__buttons__wrapper\" + (android ? \"__android\" : grid && links.length ? \"__wrap\" : \"\")\n    }, !android ? pageLinks.length ? pageLinks.map(function(entry) {\n        var color = entry.color;\n        var name = entry.name;\n        var shortName = entry.shortName;\n        var logo = entry.logo;\n        var href = legacyUtils.formatIOSMobile(props.uri, entry);\n        var handleClickIOS = React.useCallback(function() {\n            legacyUtils.saveMobileLinkInfo({\n                name: name,\n                href: href\n            });\n        }, [\n            pageLinks\n        ]);\n        return !grid ? React.createElement(WalletButton, {\n            color: color,\n            href: href,\n            name: name,\n            logo: logo,\n            onClick: handleClickIOS\n        }) : React.createElement(WalletIcon, {\n            color: color,\n            href: href,\n            name: shortName || name,\n            logo: logo,\n            onClick: handleClickIOS\n        });\n    }) : React.createElement(React.Fragment, null, React.createElement(\"p\", null, errorMessage.length ? props.errorMessage : !!props.links.length && !links.length ? props.text.no_wallets_found : props.text.loading)) : React.createElement(ConnectButton, {\n        name: props.text.connect,\n        color: DEFAULT_BUTTON_COLOR,\n        href: props.uri,\n        onClick: React.useCallback(function() {\n            legacyUtils.saveMobileLinkInfo({\n                name: \"Unknown\",\n                href: props.uri\n            });\n        }, [])\n    })), hasPaging && React.createElement(\"div\", {\n        className: \"walletconnect-modal__footer\"\n    }, Array(pages).fill(0).map(function(_, index) {\n        var pageNumber = index + 1;\n        var selected = page === pageNumber;\n        return React.createElement(\"a\", {\n            style: {\n                margin: \"auto 10px\",\n                fontWeight: selected ? \"bold\" : \"normal\"\n            },\n            onClick: function() {\n                return setPage(pageNumber);\n            }\n        }, pageNumber);\n    })));\n}\nfunction Notification(props) {\n    var show = !!props.message.trim();\n    return React.createElement(\"div\", {\n        className: \"walletconnect-qrcode__notification\" + (show ? \" notification__show\" : \"\")\n    }, props.message);\n}\nvar formatQRCodeImage = function(data) {\n    try {\n        var result = \"\";\n        return Promise.resolve(QRCode.toString(data, {\n            margin: 0,\n            type: \"svg\"\n        })).then(function(dataString) {\n            if (typeof dataString === \"string\") {\n                result = dataString.replace(\"<svg\", '<svg class=\"walletconnect-qrcode__image\"');\n            }\n            return result;\n        });\n    } catch (e) {\n        return Promise.reject(e);\n    }\n};\nfunction QRCodeDisplay(props) {\n    var ref = React.useState(\"\");\n    var notification = ref[0];\n    var setNotification = ref[1];\n    var ref$1 = React.useState(\"\");\n    var svg = ref$1[0];\n    var setSvg = ref$1[1];\n    React.useEffect(function() {\n        try {\n            return Promise.resolve(formatQRCodeImage(props.uri)).then(function(_formatQRCodeImage) {\n                setSvg(_formatQRCodeImage);\n            });\n        } catch (e) {\n            Promise.reject(e);\n        }\n    }, []);\n    var copyToClipboard = function() {\n        var success = copy(props.uri);\n        if (success) {\n            setNotification(props.text.copied_to_clipboard);\n            setInterval(function() {\n                return setNotification(\"\");\n            }, 1200);\n        } else {\n            setNotification(\"Error\");\n            setInterval(function() {\n                return setNotification(\"\");\n            }, 1200);\n        }\n    };\n    return React.createElement(\"div\", null, React.createElement(\"p\", {\n        id: WALLETCONNECT_CTA_TEXT_ID,\n        className: \"walletconnect-qrcode__text\"\n    }, props.text.scan_qrcode_with_wallet), React.createElement(\"div\", {\n        dangerouslySetInnerHTML: {\n            __html: svg\n        }\n    }), React.createElement(\"div\", {\n        className: \"walletconnect-modal__footer\"\n    }, React.createElement(\"a\", {\n        onClick: copyToClipboard\n    }, props.text.copy_to_clipboard)), React.createElement(Notification, {\n        message: notification\n    }));\n}\nfunction Modal(props) {\n    var android = legacyUtils.isAndroid();\n    var mobile = legacyUtils.isMobile();\n    var whitelist = mobile ? props.qrcodeModalOptions && props.qrcodeModalOptions.mobileLinks ? props.qrcodeModalOptions.mobileLinks : undefined : props.qrcodeModalOptions && props.qrcodeModalOptions.desktopLinks ? props.qrcodeModalOptions.desktopLinks : undefined;\n    var ref = React.useState(false);\n    var loading = ref[0];\n    var setLoading = ref[1];\n    var ref$1 = React.useState(false);\n    var fetched = ref$1[0];\n    var setFetched = ref$1[1];\n    var ref$2 = React.useState(!mobile);\n    var displayQRCode = ref$2[0];\n    var setDisplayQRCode = ref$2[1];\n    var displayProps = {\n        mobile: mobile,\n        text: props.text,\n        uri: props.uri,\n        qrcodeModalOptions: props.qrcodeModalOptions\n    };\n    var ref$3 = React.useState(\"\");\n    var singleLinkHref = ref$3[0];\n    var setSingleLinkHref = ref$3[1];\n    var ref$4 = React.useState(false);\n    var hasSingleLink = ref$4[0];\n    var setHasSingleLink = ref$4[1];\n    var ref$5 = React.useState([]);\n    var links = ref$5[0];\n    var setLinks = ref$5[1];\n    var ref$6 = React.useState(\"\");\n    var errorMessage = ref$6[0];\n    var setErrorMessage = ref$6[1];\n    var getLinksIfNeeded = function() {\n        if (fetched || loading || whitelist && !whitelist.length || links.length > 0) {\n            return;\n        }\n        React.useEffect(function() {\n            var initLinks = function() {\n                try {\n                    if (android) {\n                        return Promise.resolve();\n                    }\n                    setLoading(true);\n                    var _temp = _catch(function() {\n                        var url = props.qrcodeModalOptions && props.qrcodeModalOptions.registryUrl ? props.qrcodeModalOptions.registryUrl : legacyUtils.getWalletRegistryUrl();\n                        return Promise.resolve(fetch(url)).then(function(registryResponse) {\n                            return Promise.resolve(registryResponse.json()).then(function(_registryResponse$jso) {\n                                var registry = _registryResponse$jso.listings;\n                                var platform = mobile ? \"mobile\" : \"desktop\";\n                                var _links = legacyUtils.getMobileLinkRegistry(legacyUtils.formatMobileRegistry(registry, platform), whitelist);\n                                setLoading(false);\n                                setFetched(true);\n                                setErrorMessage(!_links.length ? props.text.no_supported_wallets : \"\");\n                                setLinks(_links);\n                                var hasSingleLink = _links.length === 1;\n                                if (hasSingleLink) {\n                                    setSingleLinkHref(legacyUtils.formatIOSMobile(props.uri, _links[0]));\n                                    setDisplayQRCode(true);\n                                }\n                                setHasSingleLink(hasSingleLink);\n                            });\n                        });\n                    }, function(e) {\n                        setLoading(false);\n                        setFetched(true);\n                        setErrorMessage(props.text.something_went_wrong);\n                        console.error(e);\n                    });\n                    return Promise.resolve(_temp && _temp.then ? _temp.then(function() {}) : void 0);\n                } catch (e) {\n                    return Promise.reject(e);\n                }\n            };\n            initLinks();\n        });\n    };\n    getLinksIfNeeded();\n    var rightSelected = mobile ? displayQRCode : !displayQRCode;\n    return React.createElement(\"div\", {\n        id: WALLETCONNECT_MODAL_ID,\n        className: \"walletconnect-qrcode__base animated fadeIn\"\n    }, React.createElement(\"div\", {\n        className: \"walletconnect-modal__base\"\n    }, React.createElement(Header, {\n        onClose: props.onClose\n    }), hasSingleLink && displayQRCode ? React.createElement(\"div\", {\n        className: \"walletconnect-modal__single_wallet\"\n    }, React.createElement(\"a\", {\n        onClick: function() {\n            return legacyUtils.saveMobileLinkInfo({\n                name: links[0].name,\n                href: singleLinkHref\n            });\n        },\n        href: singleLinkHref,\n        rel: \"noopener noreferrer\",\n        target: \"_blank\"\n    }, props.text.connect_with + \" \" + (hasSingleLink ? links[0].name : \"\") + \" ›\")) : android || loading || !loading && links.length ? React.createElement(\"div\", {\n        className: \"walletconnect-modal__mobile__toggle\" + (rightSelected ? \" right__selected\" : \"\")\n    }, React.createElement(\"div\", {\n        className: \"walletconnect-modal__mobile__toggle_selector\"\n    }), mobile ? React.createElement(React.Fragment, null, React.createElement(\"a\", {\n        onClick: function() {\n            return setDisplayQRCode(false), getLinksIfNeeded();\n        }\n    }, props.text.mobile), React.createElement(\"a\", {\n        onClick: function() {\n            return setDisplayQRCode(true);\n        }\n    }, props.text.qrcode)) : React.createElement(React.Fragment, null, React.createElement(\"a\", {\n        onClick: function() {\n            return setDisplayQRCode(true);\n        }\n    }, props.text.qrcode), React.createElement(\"a\", {\n        onClick: function() {\n            return setDisplayQRCode(false), getLinksIfNeeded();\n        }\n    }, props.text.desktop))) : null, React.createElement(\"div\", null, displayQRCode || !android && !loading && !links.length ? React.createElement(QRCodeDisplay, Object.assign({}, displayProps)) : React.createElement(LinkDisplay, Object.assign({}, displayProps, {\n        links: links,\n        errorMessage: errorMessage\n    })))));\n}\nvar de = {\n    choose_preferred_wallet: \"W\\xe4hle bevorzugte Wallet\",\n    connect_mobile_wallet: \"Verbinde mit Mobile Wallet\",\n    scan_qrcode_with_wallet: \"Scanne den QR-code mit einer WalletConnect kompatiblen Wallet\",\n    connect: \"Verbinden\",\n    qrcode: \"QR-Code\",\n    mobile: \"Mobile\",\n    desktop: \"Desktop\",\n    copy_to_clipboard: \"In die Zwischenablage kopieren\",\n    copied_to_clipboard: \"In die Zwischenablage kopiert!\",\n    connect_with: \"Verbinden mit Hilfe von\",\n    loading: \"Laden...\",\n    something_went_wrong: \"Etwas ist schief gelaufen\",\n    no_supported_wallets: \"Es gibt noch keine unterst\\xfctzten Wallet\",\n    no_wallets_found: \"keine Wallet gefunden\"\n};\nvar en = {\n    choose_preferred_wallet: \"Choose your preferred wallet\",\n    connect_mobile_wallet: \"Connect to Mobile Wallet\",\n    scan_qrcode_with_wallet: \"Scan QR code with a WalletConnect-compatible wallet\",\n    connect: \"Connect\",\n    qrcode: \"QR Code\",\n    mobile: \"Mobile\",\n    desktop: \"Desktop\",\n    copy_to_clipboard: \"Copy to clipboard\",\n    copied_to_clipboard: \"Copied to clipboard!\",\n    connect_with: \"Connect with\",\n    loading: \"Loading...\",\n    something_went_wrong: \"Something went wrong\",\n    no_supported_wallets: \"There are no supported wallets yet\",\n    no_wallets_found: \"No wallets found\"\n};\nvar es = {\n    choose_preferred_wallet: \"Elige tu billetera preferida\",\n    connect_mobile_wallet: \"Conectar a billetera m\\xf3vil\",\n    scan_qrcode_with_wallet: \"Escanea el c\\xf3digo QR con una billetera compatible con WalletConnect\",\n    connect: \"Conectar\",\n    qrcode: \"C\\xf3digo QR\",\n    mobile: \"M\\xf3vil\",\n    desktop: \"Desktop\",\n    copy_to_clipboard: \"Copiar\",\n    copied_to_clipboard: \"Copiado!\",\n    connect_with: \"Conectar mediante\",\n    loading: \"Cargando...\",\n    something_went_wrong: \"Algo sali\\xf3 mal\",\n    no_supported_wallets: \"Todav\\xeda no hay billeteras compatibles\",\n    no_wallets_found: \"No se encontraron billeteras\"\n};\nvar fr = {\n    choose_preferred_wallet: \"Choisissez votre portefeuille pr\\xe9f\\xe9r\\xe9\",\n    connect_mobile_wallet: \"Se connecter au portefeuille mobile\",\n    scan_qrcode_with_wallet: \"Scannez le QR code avec un portefeuille compatible WalletConnect\",\n    connect: \"Se connecter\",\n    qrcode: \"QR Code\",\n    mobile: \"Mobile\",\n    desktop: \"Desktop\",\n    copy_to_clipboard: \"Copier\",\n    copied_to_clipboard: \"Copi\\xe9!\",\n    connect_with: \"Connectez-vous \\xe0 l'aide de\",\n    loading: \"Chargement...\",\n    something_went_wrong: \"Quelque chose a mal tourn\\xe9\",\n    no_supported_wallets: \"Il n'y a pas encore de portefeuilles pris en charge\",\n    no_wallets_found: \"Aucun portefeuille trouv\\xe9\"\n};\nvar ko = {\n    choose_preferred_wallet: \"원하는 지갑을 선택하세요\",\n    connect_mobile_wallet: \"모바일 지갑과 연결\",\n    scan_qrcode_with_wallet: \"WalletConnect 지원 지갑에서 QR코드를 스캔하세요\",\n    connect: \"연결\",\n    qrcode: \"QR 코드\",\n    mobile: \"모바일\",\n    desktop: \"데스크탑\",\n    copy_to_clipboard: \"클립보드에 복사\",\n    copied_to_clipboard: \"클립보드에 복사되었습니다!\",\n    connect_with: \"와 연결하다\",\n    loading: \"로드 중...\",\n    something_went_wrong: \"문제가 발생했습니다.\",\n    no_supported_wallets: \"아직 지원되는 지갑이 없습니다\",\n    no_wallets_found: \"지갑을 찾을 수 없습니다\"\n};\nvar pt = {\n    choose_preferred_wallet: \"Escolha sua carteira preferida\",\n    connect_mobile_wallet: \"Conectar-se \\xe0 carteira m\\xf3vel\",\n    scan_qrcode_with_wallet: \"Ler o c\\xf3digo QR com uma carteira compat\\xedvel com WalletConnect\",\n    connect: \"Conectar\",\n    qrcode: \"C\\xf3digo QR\",\n    mobile: \"M\\xf3vel\",\n    desktop: \"Desktop\",\n    copy_to_clipboard: \"Copiar\",\n    copied_to_clipboard: \"Copiado!\",\n    connect_with: \"Ligar por meio de\",\n    loading: \"Carregamento...\",\n    something_went_wrong: \"Algo correu mal\",\n    no_supported_wallets: \"Ainda n\\xe3o h\\xe1 carteiras suportadas\",\n    no_wallets_found: \"Nenhuma carteira encontrada\"\n};\nvar zh = {\n    choose_preferred_wallet: \"选择你的钱包\",\n    connect_mobile_wallet: \"连接至移动端钱包\",\n    scan_qrcode_with_wallet: \"使用兼容 WalletConnect 的钱包扫描二维码\",\n    connect: \"连接\",\n    qrcode: \"二维码\",\n    mobile: \"移动\",\n    desktop: \"桌面\",\n    copy_to_clipboard: \"复制到剪贴板\",\n    copied_to_clipboard: \"复制到剪贴板成功！\",\n    connect_with: \"通过以下方式连接\",\n    loading: \"正在加载...\",\n    something_went_wrong: \"出了问题\",\n    no_supported_wallets: \"目前还没有支持的钱包\",\n    no_wallets_found: \"没有找到钱包\"\n};\nvar fa = {\n    choose_preferred_wallet: \"کیف پول مورد نظر خود را انتخاب کنید\",\n    connect_mobile_wallet: \"به کیف پول موبایل وصل شوید\",\n    scan_qrcode_with_wallet: \"کد QR را با یک کیف پول سازگار با WalletConnect اسکن کنید\",\n    connect: \"اتصال\",\n    qrcode: \"کد QR\",\n    mobile: \"سیار\",\n    desktop: \"دسکتاپ\",\n    copy_to_clipboard: \"کپی به کلیپ بورد\",\n    copied_to_clipboard: \"در کلیپ بورد کپی شد!\",\n    connect_with: \"ارتباط با\",\n    loading: \"...بارگذاری\",\n    something_went_wrong: \"مشکلی پیش آمد\",\n    no_supported_wallets: \"هنوز هیچ کیف پول پشتیبانی شده ای وجود ندارد\",\n    no_wallets_found: \"هیچ کیف پولی پیدا نشد\"\n};\nvar languages = {\n    de: de,\n    en: en,\n    es: es,\n    fr: fr,\n    ko: ko,\n    pt: pt,\n    zh: zh,\n    fa: fa\n};\nfunction injectStyleSheet() {\n    var doc = legacyUtils.getDocumentOrThrow();\n    var prev = doc.getElementById(WALLETCONNECT_STYLE_ID);\n    if (prev) {\n        doc.head.removeChild(prev);\n    }\n    var style = doc.createElement(\"style\");\n    style.setAttribute(\"id\", WALLETCONNECT_STYLE_ID);\n    style.innerText = WALLETCONNECT_STYLE_SHEET;\n    doc.head.appendChild(style);\n}\nfunction renderWrapper() {\n    var doc = legacyUtils.getDocumentOrThrow();\n    var wrapper = doc.createElement(\"div\");\n    wrapper.setAttribute(\"id\", WALLETCONNECT_WRAPPER_ID);\n    doc.body.appendChild(wrapper);\n    return wrapper;\n}\nfunction triggerCloseAnimation() {\n    var doc = legacyUtils.getDocumentOrThrow();\n    var modal = doc.getElementById(WALLETCONNECT_MODAL_ID);\n    if (modal) {\n        modal.className = modal.className.replace(\"fadeIn\", \"fadeOut\");\n        setTimeout(function() {\n            var wrapper = doc.getElementById(WALLETCONNECT_WRAPPER_ID);\n            if (wrapper) {\n                doc.body.removeChild(wrapper);\n            }\n        }, ANIMATION_DURATION);\n    }\n}\nfunction getWrappedCallback(cb) {\n    return function() {\n        triggerCloseAnimation();\n        if (cb) {\n            cb();\n        }\n    };\n}\nfunction getText() {\n    var lang = legacyUtils.getNavigatorOrThrow().language.split(\"-\")[0] || \"en\";\n    return languages[lang] || languages[\"en\"];\n}\nfunction open$1(uri, cb, qrcodeModalOptions) {\n    injectStyleSheet();\n    var wrapper = renderWrapper();\n    React.render(React.createElement(Modal, {\n        text: getText(),\n        uri: uri,\n        onClose: getWrappedCallback(cb),\n        qrcodeModalOptions: qrcodeModalOptions\n    }), wrapper);\n}\nfunction close$1() {\n    triggerCloseAnimation();\n}\nvar isNode = function() {\n    return typeof process !== \"undefined\" && typeof process.versions !== \"undefined\" && typeof process.versions.node !== \"undefined\";\n};\nfunction open$2(uri, cb, qrcodeModalOptions) {\n    console.log(uri);\n    if (isNode()) {\n        open(uri);\n    } else {\n        open$1(uri, cb, qrcodeModalOptions);\n    }\n}\nfunction close$2() {\n    if (isNode()) ;\n    else {\n        close$1();\n    }\n}\nvar index = {\n    open: open$2,\n    close: close$2\n};\nmodule.exports = index; //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@walletconnect+legacy-modal@2.0.0/node_modules/@walletconnect/legacy-modal/dist/cjs/index.js\n");

/***/ })

};
;