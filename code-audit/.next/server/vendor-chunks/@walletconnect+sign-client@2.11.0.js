"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@walletconnect+sign-client@2.11.0";
exports.ids = ["vendor-chunks/@walletconnect+sign-client@2.11.0"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/@walletconnect+sign-client@2.11.0/node_modules/@walletconnect/sign-client/dist/index.es.js":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@walletconnect+sign-client@2.11.0/node_modules/@walletconnect/sign-client/dist/index.es.js ***!
  \***********************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ENGINE_CONTEXT: () => (/* binding */ ce),\n/* harmony export */   ENGINE_QUEUE_STATES: () => (/* binding */ I),\n/* harmony export */   ENGINE_RPC_OPTS: () => (/* binding */ V),\n/* harmony export */   HISTORY_CONTEXT: () => (/* binding */ rs),\n/* harmony export */   HISTORY_EVENTS: () => (/* binding */ is),\n/* harmony export */   HISTORY_STORAGE_VERSION: () => (/* binding */ ns),\n/* harmony export */   METHODS_TO_VERIFY: () => (/* binding */ pe),\n/* harmony export */   PROPOSAL_CONTEXT: () => (/* binding */ ne),\n/* harmony export */   PROPOSAL_EXPIRY: () => (/* binding */ os),\n/* harmony export */   PROPOSAL_EXPIRY_MESSAGE: () => (/* binding */ oe),\n/* harmony export */   REQUEST_CONTEXT: () => (/* binding */ le),\n/* harmony export */   SESSION_CONTEXT: () => (/* binding */ ae),\n/* harmony export */   SESSION_EXPIRY: () => (/* binding */ A),\n/* harmony export */   SESSION_REQUEST_EXPIRY_BOUNDARIES: () => (/* binding */ U),\n/* harmony export */   SIGN_CLIENT_CONTEXT: () => (/* binding */ H),\n/* harmony export */   SIGN_CLIENT_DEFAULT: () => (/* binding */ M),\n/* harmony export */   SIGN_CLIENT_EVENTS: () => (/* binding */ ss),\n/* harmony export */   SIGN_CLIENT_PROTOCOL: () => (/* binding */ X),\n/* harmony export */   SIGN_CLIENT_STORAGE_OPTIONS: () => (/* binding */ ts),\n/* harmony export */   SIGN_CLIENT_STORAGE_PREFIX: () => (/* binding */ G),\n/* harmony export */   SIGN_CLIENT_VERSION: () => (/* binding */ F),\n/* harmony export */   SessionStore: () => (/* binding */ ms),\n/* harmony export */   SignClient: () => (/* binding */ ws),\n/* harmony export */   WALLETCONNECT_DEEPLINK_CHOICE: () => (/* binding */ W),\n/* harmony export */   \"default\": () => (/* binding */ Q)\n/* harmony export */ });\n/* harmony import */ var _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @walletconnect/core */ \"(ssr)/./node_modules/.pnpm/@walletconnect+core@2.11.0/node_modules/@walletconnect/core/dist/index.es.js\");\n/* harmony import */ var _walletconnect_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @walletconnect/logger */ \"(ssr)/./node_modules/.pnpm/@walletconnect+logger@2.0.1/node_modules/@walletconnect/logger/dist/cjs/index.js\");\n/* harmony import */ var _walletconnect_logger__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_walletconnect_logger__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _walletconnect_types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @walletconnect/types */ \"(ssr)/./node_modules/.pnpm/@walletconnect+types@2.11.0/node_modules/@walletconnect/types/dist/index.es.js\");\n/* harmony import */ var _walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @walletconnect/utils */ \"(ssr)/./node_modules/.pnpm/@walletconnect+utils@2.11.0/node_modules/@walletconnect/utils/dist/index.es.js\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! events */ \"events\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @walletconnect/time */ \"(ssr)/./node_modules/.pnpm/@walletconnect+time@1.0.2/node_modules/@walletconnect/time/dist/cjs/index.js\");\n/* harmony import */ var _walletconnect_time__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_walletconnect_time__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @walletconnect/jsonrpc-utils */ \"(ssr)/./node_modules/.pnpm/@walletconnect+jsonrpc-utils@1.0.8/node_modules/@walletconnect/jsonrpc-utils/dist/esm/index.js\");\n\n\n\n\n\n\n\nconst X = \"wc\", F = 2, H = \"client\", G = `${X}@${F}:${H}:`, M = {\n    name: H,\n    logger: \"error\",\n    controller: !1,\n    relayUrl: \"wss://relay.walletconnect.com\"\n}, ss = {\n    session_proposal: \"session_proposal\",\n    session_update: \"session_update\",\n    session_extend: \"session_extend\",\n    session_ping: \"session_ping\",\n    session_delete: \"session_delete\",\n    session_expire: \"session_expire\",\n    session_request: \"session_request\",\n    session_request_sent: \"session_request_sent\",\n    session_event: \"session_event\",\n    proposal_expire: \"proposal_expire\"\n}, ts = {\n    database: \":memory:\"\n}, W = \"WALLETCONNECT_DEEPLINK_CHOICE\", is = {\n    created: \"history_created\",\n    updated: \"history_updated\",\n    deleted: \"history_deleted\",\n    sync: \"history_sync\"\n}, rs = \"history\", ns = \"0.3\", ne = \"proposal\", os = _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.THIRTY_DAYS, oe = \"Proposal expired\", ae = \"session\", A = _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.SEVEN_DAYS, ce = \"engine\", V = {\n    wc_sessionPropose: {\n        req: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.FIVE_MINUTES,\n            prompt: !0,\n            tag: 1100\n        },\n        res: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.FIVE_MINUTES,\n            prompt: !1,\n            tag: 1101\n        }\n    },\n    wc_sessionSettle: {\n        req: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.FIVE_MINUTES,\n            prompt: !1,\n            tag: 1102\n        },\n        res: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.FIVE_MINUTES,\n            prompt: !1,\n            tag: 1103\n        }\n    },\n    wc_sessionUpdate: {\n        req: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.ONE_DAY,\n            prompt: !1,\n            tag: 1104\n        },\n        res: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.ONE_DAY,\n            prompt: !1,\n            tag: 1105\n        }\n    },\n    wc_sessionExtend: {\n        req: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.ONE_DAY,\n            prompt: !1,\n            tag: 1106\n        },\n        res: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.ONE_DAY,\n            prompt: !1,\n            tag: 1107\n        }\n    },\n    wc_sessionRequest: {\n        req: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.FIVE_MINUTES,\n            prompt: !0,\n            tag: 1108\n        },\n        res: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.FIVE_MINUTES,\n            prompt: !1,\n            tag: 1109\n        }\n    },\n    wc_sessionEvent: {\n        req: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.FIVE_MINUTES,\n            prompt: !0,\n            tag: 1110\n        },\n        res: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.FIVE_MINUTES,\n            prompt: !1,\n            tag: 1111\n        }\n    },\n    wc_sessionDelete: {\n        req: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.ONE_DAY,\n            prompt: !1,\n            tag: 1112\n        },\n        res: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.ONE_DAY,\n            prompt: !1,\n            tag: 1113\n        }\n    },\n    wc_sessionPing: {\n        req: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.THIRTY_SECONDS,\n            prompt: !1,\n            tag: 1114\n        },\n        res: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.THIRTY_SECONDS,\n            prompt: !1,\n            tag: 1115\n        }\n    }\n}, U = {\n    min: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.FIVE_MINUTES,\n    max: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.SEVEN_DAYS\n}, I = {\n    idle: \"IDLE\",\n    active: \"ACTIVE\"\n}, le = \"request\", pe = [\n    \"wc_sessionPropose\",\n    \"wc_sessionRequest\",\n    \"wc_authRequest\"\n];\nvar as = Object.defineProperty, cs = Object.defineProperties, ls = Object.getOwnPropertyDescriptors, he = Object.getOwnPropertySymbols, ps = Object.prototype.hasOwnProperty, hs = Object.prototype.propertyIsEnumerable, de = (m, r, e)=>r in m ? as(m, r, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: e\n    }) : m[r] = e, g = (m, r)=>{\n    for(var e in r || (r = {}))ps.call(r, e) && de(m, e, r[e]);\n    if (he) for (var e of he(r))hs.call(r, e) && de(m, e, r[e]);\n    return m;\n}, b = (m, r)=>cs(m, ls(r));\nclass ds extends _walletconnect_types__WEBPACK_IMPORTED_MODULE_4__.IEngine {\n    constructor(r){\n        super(r), this.name = ce, this.events = new (events__WEBPACK_IMPORTED_MODULE_1___default()), this.initialized = !1, this.ignoredPayloadTypes = [\n            _walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.TYPE_1\n        ], this.requestQueue = {\n            state: I.idle,\n            queue: []\n        }, this.sessionRequestQueue = {\n            state: I.idle,\n            queue: []\n        }, this.requestQueueDelay = _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.ONE_SECOND, this.init = async ()=>{\n            this.initialized || (await this.cleanup(), this.registerRelayerEvents(), this.registerExpirerEvents(), this.registerPairingEvents(), this.client.core.pairing.register({\n                methods: Object.keys(V)\n            }), this.initialized = !0, setTimeout(()=>{\n                this.sessionRequestQueue.queue = this.getPendingSessionRequests(), this.processSessionRequestQueue();\n            }, (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.toMiliseconds)(this.requestQueueDelay)));\n        }, this.connect = async (e)=>{\n            await this.isInitialized();\n            const s = b(g({}, e), {\n                requiredNamespaces: e.requiredNamespaces || {},\n                optionalNamespaces: e.optionalNamespaces || {}\n            });\n            await this.isValidConnect(s);\n            const { pairingTopic: t, requiredNamespaces: i, optionalNamespaces: n, sessionProperties: o, relays: a } = s;\n            let c = t, p, d = !1;\n            if (c && (d = this.client.core.pairing.pairings.get(c).active), !c || !d) {\n                const { topic: v, uri: S } = await this.client.core.pairing.create();\n                c = v, p = S;\n            }\n            const h = await this.client.core.crypto.generateKeyPair(), R = g({\n                requiredNamespaces: i,\n                optionalNamespaces: n,\n                relays: a ?? [\n                    {\n                        protocol: _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.RELAYER_DEFAULT_PROTOCOL\n                    }\n                ],\n                proposer: {\n                    publicKey: h,\n                    metadata: this.client.metadata\n                }\n            }, o && {\n                sessionProperties: o\n            }), { reject: w, resolve: T, done: K } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.createDelayedPromise)(_walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.FIVE_MINUTES, oe);\n            if (this.events.once((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_connect\"), async ({ error: v, session: S })=>{\n                if (v) w(v);\n                else if (S) {\n                    S.self.publicKey = h;\n                    const B = b(g({}, S), {\n                        requiredNamespaces: S.requiredNamespaces,\n                        optionalNamespaces: S.optionalNamespaces\n                    });\n                    await this.client.session.set(S.topic, B), await this.setExpiry(S.topic, S.expiry), c && await this.client.core.pairing.updateMetadata({\n                        topic: c,\n                        metadata: S.peer.metadata\n                    }), T(B);\n                }\n            }), !c) {\n                const { message: v } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"NO_MATCHING_KEY\", `connect() pairing topic: ${c}`);\n                throw new Error(v);\n            }\n            const L = await this.sendRequest({\n                topic: c,\n                method: \"wc_sessionPropose\",\n                params: R\n            }), ge = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.calcExpiry)(_walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.FIVE_MINUTES);\n            return await this.setProposal(L, g({\n                id: L,\n                expiry: ge\n            }, R)), {\n                uri: p,\n                approval: K\n            };\n        }, this.pair = async (e)=>(await this.isInitialized(), await this.client.core.pairing.pair(e)), this.approve = async (e)=>{\n            await this.isInitialized(), await this.isValidApprove(e);\n            const { id: s, relayProtocol: t, namespaces: i, sessionProperties: n } = e, o = this.client.proposal.get(s);\n            let { pairingTopic: a, proposer: c, requiredNamespaces: p, optionalNamespaces: d } = o;\n            a = a || \"\", (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidObject)(p) || (p = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getRequiredNamespacesFromNamespaces)(i, \"approve()\"));\n            const h = await this.client.core.crypto.generateKeyPair(), R = c.publicKey, w = await this.client.core.crypto.generateSharedKey(h, R);\n            a && s && (await this.client.core.pairing.updateMetadata({\n                topic: a,\n                metadata: c.metadata\n            }), await this.sendResult({\n                id: s,\n                topic: a,\n                result: {\n                    relay: {\n                        protocol: t ?? \"irn\"\n                    },\n                    responderPublicKey: h\n                }\n            }), await this.client.proposal.delete(s, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getSdkError)(\"USER_DISCONNECTED\")), await this.client.core.pairing.activate({\n                topic: a\n            }));\n            const T = g({\n                relay: {\n                    protocol: t ?? \"irn\"\n                },\n                namespaces: i,\n                requiredNamespaces: p,\n                optionalNamespaces: d,\n                pairingTopic: a,\n                controller: {\n                    publicKey: h,\n                    metadata: this.client.metadata\n                },\n                expiry: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.calcExpiry)(A)\n            }, n && {\n                sessionProperties: n\n            });\n            await this.client.core.relayer.subscribe(w), await this.sendRequest({\n                topic: w,\n                method: \"wc_sessionSettle\",\n                params: T,\n                throwOnFailedPublish: !0\n            });\n            const K = b(g({}, T), {\n                topic: w,\n                pairingTopic: a,\n                acknowledged: !1,\n                self: T.controller,\n                peer: {\n                    publicKey: c.publicKey,\n                    metadata: c.metadata\n                },\n                controller: h\n            });\n            return await this.client.session.set(w, K), await this.setExpiry(w, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.calcExpiry)(A)), {\n                topic: w,\n                acknowledged: ()=>new Promise((L)=>setTimeout(()=>L(this.client.session.get(w)), 500))\n            };\n        }, this.reject = async (e)=>{\n            await this.isInitialized(), await this.isValidReject(e);\n            const { id: s, reason: t } = e, { pairingTopic: i } = this.client.proposal.get(s);\n            i && (await this.sendError(s, i, t), await this.client.proposal.delete(s, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getSdkError)(\"USER_DISCONNECTED\")));\n        }, this.update = async (e)=>{\n            await this.isInitialized(), await this.isValidUpdate(e);\n            const { topic: s, namespaces: t } = e, i = await this.sendRequest({\n                topic: s,\n                method: \"wc_sessionUpdate\",\n                params: {\n                    namespaces: t\n                }\n            }), { done: n, resolve: o, reject: a } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.createDelayedPromise)();\n            return this.events.once((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_update\", i), ({ error: c })=>{\n                c ? a(c) : o();\n            }), await this.client.session.update(s, {\n                namespaces: t\n            }), {\n                acknowledged: n\n            };\n        }, this.extend = async (e)=>{\n            await this.isInitialized(), await this.isValidExtend(e);\n            const { topic: s } = e, t = await this.sendRequest({\n                topic: s,\n                method: \"wc_sessionExtend\",\n                params: {}\n            }), { done: i, resolve: n, reject: o } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.createDelayedPromise)();\n            return this.events.once((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_extend\", t), ({ error: a })=>{\n                a ? o(a) : n();\n            }), await this.setExpiry(s, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.calcExpiry)(A)), {\n                acknowledged: i\n            };\n        }, this.request = async (e)=>{\n            await this.isInitialized(), await this.isValidRequest(e);\n            const { chainId: s, request: t, topic: i, expiry: n } = e, o = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.payloadId)(), { done: a, resolve: c, reject: p } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.createDelayedPromise)(n, \"Request expired. Please try again.\");\n            return this.events.once((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_request\", o), ({ error: d, result: h })=>{\n                d ? p(d) : c(h);\n            }), await Promise.all([\n                new Promise(async (d)=>{\n                    await this.sendRequest({\n                        clientRpcId: o,\n                        topic: i,\n                        method: \"wc_sessionRequest\",\n                        params: {\n                            request: t,\n                            chainId: s\n                        },\n                        expiry: n,\n                        throwOnFailedPublish: !0\n                    }).catch((h)=>p(h)), this.client.events.emit(\"session_request_sent\", {\n                        topic: i,\n                        request: t,\n                        chainId: s,\n                        id: o\n                    }), d();\n                }),\n                new Promise(async (d)=>{\n                    const h = await (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getDeepLink)(this.client.core.storage, W);\n                    (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.handleDeeplinkRedirect)({\n                        id: o,\n                        topic: i,\n                        wcDeepLink: h\n                    }), d();\n                }),\n                a()\n            ]).then((d)=>d[2]);\n        }, this.respond = async (e)=>{\n            await this.isInitialized(), await this.isValidRespond(e);\n            const { topic: s, response: t } = e, { id: i } = t;\n            (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcResult)(t) ? await this.sendResult({\n                id: i,\n                topic: s,\n                result: t.result,\n                throwOnFailedPublish: !0\n            }) : (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcError)(t) && await this.sendError(i, s, t.error), this.cleanupAfterResponse(e);\n        }, this.ping = async (e)=>{\n            await this.isInitialized(), await this.isValidPing(e);\n            const { topic: s } = e;\n            if (this.client.session.keys.includes(s)) {\n                const t = await this.sendRequest({\n                    topic: s,\n                    method: \"wc_sessionPing\",\n                    params: {}\n                }), { done: i, resolve: n, reject: o } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.createDelayedPromise)();\n                this.events.once((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_ping\", t), ({ error: a })=>{\n                    a ? o(a) : n();\n                }), await i();\n            } else this.client.core.pairing.pairings.keys.includes(s) && await this.client.core.pairing.ping({\n                topic: s\n            });\n        }, this.emit = async (e)=>{\n            await this.isInitialized(), await this.isValidEmit(e);\n            const { topic: s, event: t, chainId: i } = e;\n            await this.sendRequest({\n                topic: s,\n                method: \"wc_sessionEvent\",\n                params: {\n                    event: t,\n                    chainId: i\n                }\n            });\n        }, this.disconnect = async (e)=>{\n            await this.isInitialized(), await this.isValidDisconnect(e);\n            const { topic: s } = e;\n            this.client.session.keys.includes(s) ? (await this.sendRequest({\n                topic: s,\n                method: \"wc_sessionDelete\",\n                params: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getSdkError)(\"USER_DISCONNECTED\"),\n                throwOnFailedPublish: !0\n            }), await this.deleteSession(s)) : await this.client.core.pairing.disconnect({\n                topic: s\n            });\n        }, this.find = (e)=>(this.isInitialized(), this.client.session.getAll().filter((s)=>(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isSessionCompatible)(s, e))), this.getPendingSessionRequests = ()=>(this.isInitialized(), this.client.pendingRequest.getAll()), this.cleanupDuplicatePairings = async (e)=>{\n            if (e.pairingTopic) try {\n                const s = this.client.core.pairing.pairings.get(e.pairingTopic), t = this.client.core.pairing.pairings.getAll().filter((i)=>{\n                    var n, o;\n                    return ((n = i.peerMetadata) == null ? void 0 : n.url) && ((o = i.peerMetadata) == null ? void 0 : o.url) === e.peer.metadata.url && i.topic && i.topic !== s.topic;\n                });\n                if (t.length === 0) return;\n                this.client.logger.info(`Cleaning up ${t.length} duplicate pairing(s)`), await Promise.all(t.map((i)=>this.client.core.pairing.disconnect({\n                        topic: i.topic\n                    }))), this.client.logger.info(\"Duplicate pairings clean up finished\");\n            } catch (s) {\n                this.client.logger.error(s);\n            }\n        }, this.deleteSession = async (e, s)=>{\n            const { self: t } = this.client.session.get(e);\n            await this.client.core.relayer.unsubscribe(e), this.client.session.delete(e, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getSdkError)(\"USER_DISCONNECTED\")), this.client.core.crypto.keychain.has(t.publicKey) && await this.client.core.crypto.deleteKeyPair(t.publicKey), this.client.core.crypto.keychain.has(e) && await this.client.core.crypto.deleteSymKey(e), s || this.client.core.expirer.del(e), this.client.core.storage.removeItem(W).catch((i)=>this.client.logger.warn(i)), this.getPendingSessionRequests().forEach((i)=>{\n                i.topic === e && this.deletePendingSessionRequest(i.id, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getSdkError)(\"USER_DISCONNECTED\"));\n            });\n        }, this.deleteProposal = async (e, s)=>{\n            await Promise.all([\n                this.client.proposal.delete(e, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getSdkError)(\"USER_DISCONNECTED\")),\n                s ? Promise.resolve() : this.client.core.expirer.del(e)\n            ]);\n        }, this.deletePendingSessionRequest = async (e, s, t = !1)=>{\n            await Promise.all([\n                this.client.pendingRequest.delete(e, s),\n                t ? Promise.resolve() : this.client.core.expirer.del(e)\n            ]), this.sessionRequestQueue.queue = this.sessionRequestQueue.queue.filter((i)=>i.id !== e), t && (this.sessionRequestQueue.state = I.idle);\n        }, this.setExpiry = async (e, s)=>{\n            this.client.session.keys.includes(e) && await this.client.session.update(e, {\n                expiry: s\n            }), this.client.core.expirer.set(e, s);\n        }, this.setProposal = async (e, s)=>{\n            await this.client.proposal.set(e, s), this.client.core.expirer.set(e, s.expiry);\n        }, this.setPendingSessionRequest = async (e)=>{\n            const s = V.wc_sessionRequest.req.ttl, { id: t, topic: i, params: n, verifyContext: o } = e;\n            await this.client.pendingRequest.set(t, {\n                id: t,\n                topic: i,\n                params: n,\n                verifyContext: o\n            }), s && this.client.core.expirer.set(t, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.calcExpiry)(s));\n        }, this.sendRequest = async (e)=>{\n            const { topic: s, method: t, params: i, expiry: n, relayRpcId: o, clientRpcId: a, throwOnFailedPublish: c } = e, p = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.formatJsonRpcRequest)(t, i, a);\n            if ((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isBrowser)() && pe.includes(t)) {\n                const R = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.hashMessage)(JSON.stringify(p));\n                this.client.core.verify.register({\n                    attestationId: R\n                });\n            }\n            const d = await this.client.core.crypto.encode(s, p), h = V[t].req;\n            return n && (h.ttl = n), o && (h.id = o), this.client.core.history.set(s, p), c ? (h.internal = b(g({}, h.internal), {\n                throwOnFailedPublish: !0\n            }), await this.client.core.relayer.publish(s, d, h)) : this.client.core.relayer.publish(s, d, h).catch((R)=>this.client.logger.error(R)), p.id;\n        }, this.sendResult = async (e)=>{\n            const { id: s, topic: t, result: i, throwOnFailedPublish: n } = e, o = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.formatJsonRpcResult)(s, i), a = await this.client.core.crypto.encode(t, o), c = await this.client.core.history.get(t, s), p = V[c.request.method].res;\n            n ? (p.internal = b(g({}, p.internal), {\n                throwOnFailedPublish: !0\n            }), await this.client.core.relayer.publish(t, a, p)) : this.client.core.relayer.publish(t, a, p).catch((d)=>this.client.logger.error(d)), await this.client.core.history.resolve(o);\n        }, this.sendError = async (e, s, t)=>{\n            const i = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.formatJsonRpcError)(e, t), n = await this.client.core.crypto.encode(s, i), o = await this.client.core.history.get(s, e), a = V[o.request.method].res;\n            this.client.core.relayer.publish(s, n, a), await this.client.core.history.resolve(i);\n        }, this.cleanup = async ()=>{\n            const e = [], s = [];\n            this.client.session.getAll().forEach((t)=>{\n                (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isExpired)(t.expiry) && e.push(t.topic);\n            }), this.client.proposal.getAll().forEach((t)=>{\n                (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isExpired)(t.expiry) && s.push(t.id);\n            }), await Promise.all([\n                ...e.map((t)=>this.deleteSession(t)),\n                ...s.map((t)=>this.deleteProposal(t))\n            ]);\n        }, this.onRelayEventRequest = async (e)=>{\n            this.requestQueue.queue.push(e), await this.processRequestsQueue();\n        }, this.processRequestsQueue = async ()=>{\n            if (this.requestQueue.state === I.active) {\n                this.client.logger.info(\"Request queue already active, skipping...\");\n                return;\n            }\n            for(this.client.logger.info(`Request queue starting with ${this.requestQueue.queue.length} requests`); this.requestQueue.queue.length > 0;){\n                this.requestQueue.state = I.active;\n                const e = this.requestQueue.queue.shift();\n                if (e) try {\n                    this.processRequest(e), await new Promise((s)=>setTimeout(s, 300));\n                } catch (s) {\n                    this.client.logger.warn(s);\n                }\n            }\n            this.requestQueue.state = I.idle;\n        }, this.processRequest = (e)=>{\n            const { topic: s, payload: t } = e, i = t.method;\n            switch(i){\n                case \"wc_sessionPropose\":\n                    return this.onSessionProposeRequest(s, t);\n                case \"wc_sessionSettle\":\n                    return this.onSessionSettleRequest(s, t);\n                case \"wc_sessionUpdate\":\n                    return this.onSessionUpdateRequest(s, t);\n                case \"wc_sessionExtend\":\n                    return this.onSessionExtendRequest(s, t);\n                case \"wc_sessionPing\":\n                    return this.onSessionPingRequest(s, t);\n                case \"wc_sessionDelete\":\n                    return this.onSessionDeleteRequest(s, t);\n                case \"wc_sessionRequest\":\n                    return this.onSessionRequest(s, t);\n                case \"wc_sessionEvent\":\n                    return this.onSessionEventRequest(s, t);\n                default:\n                    return this.client.logger.info(`Unsupported request method ${i}`);\n            }\n        }, this.onRelayEventResponse = async (e)=>{\n            const { topic: s, payload: t } = e, i = (await this.client.core.history.get(s, t.id)).request.method;\n            switch(i){\n                case \"wc_sessionPropose\":\n                    return this.onSessionProposeResponse(s, t);\n                case \"wc_sessionSettle\":\n                    return this.onSessionSettleResponse(s, t);\n                case \"wc_sessionUpdate\":\n                    return this.onSessionUpdateResponse(s, t);\n                case \"wc_sessionExtend\":\n                    return this.onSessionExtendResponse(s, t);\n                case \"wc_sessionPing\":\n                    return this.onSessionPingResponse(s, t);\n                case \"wc_sessionRequest\":\n                    return this.onSessionRequestResponse(s, t);\n                default:\n                    return this.client.logger.info(`Unsupported response method ${i}`);\n            }\n        }, this.onRelayEventUnknownPayload = (e)=>{\n            const { topic: s } = e, { message: t } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `Decoded payload on topic ${s} is not identifiable as a JSON-RPC request or a response.`);\n            throw new Error(t);\n        }, this.onSessionProposeRequest = async (e, s)=>{\n            const { params: t, id: i } = s;\n            try {\n                this.isValidConnect(g({}, s.params));\n                const n = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.calcExpiry)(_walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.FIVE_MINUTES), o = g({\n                    id: i,\n                    pairingTopic: e,\n                    expiry: n\n                }, t);\n                await this.setProposal(i, o);\n                const a = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.hashMessage)(JSON.stringify(s)), c = await this.getVerifyContext(a, o.proposer.metadata);\n                this.client.events.emit(\"session_proposal\", {\n                    id: i,\n                    params: o,\n                    verifyContext: c\n                });\n            } catch (n) {\n                await this.sendError(i, e, n), this.client.logger.error(n);\n            }\n        }, this.onSessionProposeResponse = async (e, s)=>{\n            const { id: t } = s;\n            if ((0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcResult)(s)) {\n                const { result: i } = s;\n                this.client.logger.trace({\n                    type: \"method\",\n                    method: \"onSessionProposeResponse\",\n                    result: i\n                });\n                const n = this.client.proposal.get(t);\n                this.client.logger.trace({\n                    type: \"method\",\n                    method: \"onSessionProposeResponse\",\n                    proposal: n\n                });\n                const o = n.proposer.publicKey;\n                this.client.logger.trace({\n                    type: \"method\",\n                    method: \"onSessionProposeResponse\",\n                    selfPublicKey: o\n                });\n                const a = i.responderPublicKey;\n                this.client.logger.trace({\n                    type: \"method\",\n                    method: \"onSessionProposeResponse\",\n                    peerPublicKey: a\n                });\n                const c = await this.client.core.crypto.generateSharedKey(o, a);\n                this.client.logger.trace({\n                    type: \"method\",\n                    method: \"onSessionProposeResponse\",\n                    sessionTopic: c\n                });\n                const p = await this.client.core.relayer.subscribe(c);\n                this.client.logger.trace({\n                    type: \"method\",\n                    method: \"onSessionProposeResponse\",\n                    subscriptionId: p\n                }), await this.client.core.pairing.activate({\n                    topic: e\n                });\n            } else (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcError)(s) && (await this.client.proposal.delete(t, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getSdkError)(\"USER_DISCONNECTED\")), this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_connect\"), {\n                error: s.error\n            }));\n        }, this.onSessionSettleRequest = async (e, s)=>{\n            const { id: t, params: i } = s;\n            try {\n                this.isValidSessionSettleRequest(i);\n                const { relay: n, controller: o, expiry: a, namespaces: c, requiredNamespaces: p, optionalNamespaces: d, sessionProperties: h, pairingTopic: R } = s.params, w = g({\n                    topic: e,\n                    relay: n,\n                    expiry: a,\n                    namespaces: c,\n                    acknowledged: !0,\n                    pairingTopic: R,\n                    requiredNamespaces: p,\n                    optionalNamespaces: d,\n                    controller: o.publicKey,\n                    self: {\n                        publicKey: \"\",\n                        metadata: this.client.metadata\n                    },\n                    peer: {\n                        publicKey: o.publicKey,\n                        metadata: o.metadata\n                    }\n                }, h && {\n                    sessionProperties: h\n                });\n                await this.sendResult({\n                    id: s.id,\n                    topic: e,\n                    result: !0\n                }), this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_connect\"), {\n                    session: w\n                }), this.cleanupDuplicatePairings(w);\n            } catch (n) {\n                await this.sendError(t, e, n), this.client.logger.error(n);\n            }\n        }, this.onSessionSettleResponse = async (e, s)=>{\n            const { id: t } = s;\n            (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcResult)(s) ? (await this.client.session.update(e, {\n                acknowledged: !0\n            }), this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_approve\", t), {})) : (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcError)(s) && (await this.client.session.delete(e, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getSdkError)(\"USER_DISCONNECTED\")), this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_approve\", t), {\n                error: s.error\n            }));\n        }, this.onSessionUpdateRequest = async (e, s)=>{\n            const { params: t, id: i } = s;\n            try {\n                const n = `${e}_session_update`, o = _walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.MemoryStore.get(n);\n                if (o && this.isRequestOutOfSync(o, i)) {\n                    this.client.logger.info(`Discarding out of sync request - ${i}`);\n                    return;\n                }\n                this.isValidUpdate(g({\n                    topic: e\n                }, t)), await this.client.session.update(e, {\n                    namespaces: t.namespaces\n                }), await this.sendResult({\n                    id: i,\n                    topic: e,\n                    result: !0\n                }), this.client.events.emit(\"session_update\", {\n                    id: i,\n                    topic: e,\n                    params: t\n                }), _walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.MemoryStore.set(n, i);\n            } catch (n) {\n                await this.sendError(i, e, n), this.client.logger.error(n);\n            }\n        }, this.isRequestOutOfSync = (e, s)=>parseInt(s.toString().slice(0, -3)) <= parseInt(e.toString().slice(0, -3)), this.onSessionUpdateResponse = (e, s)=>{\n            const { id: t } = s;\n            (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcResult)(s) ? this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_update\", t), {}) : (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcError)(s) && this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_update\", t), {\n                error: s.error\n            });\n        }, this.onSessionExtendRequest = async (e, s)=>{\n            const { id: t } = s;\n            try {\n                this.isValidExtend({\n                    topic: e\n                }), await this.setExpiry(e, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.calcExpiry)(A)), await this.sendResult({\n                    id: t,\n                    topic: e,\n                    result: !0\n                }), this.client.events.emit(\"session_extend\", {\n                    id: t,\n                    topic: e\n                });\n            } catch (i) {\n                await this.sendError(t, e, i), this.client.logger.error(i);\n            }\n        }, this.onSessionExtendResponse = (e, s)=>{\n            const { id: t } = s;\n            (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcResult)(s) ? this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_extend\", t), {}) : (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcError)(s) && this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_extend\", t), {\n                error: s.error\n            });\n        }, this.onSessionPingRequest = async (e, s)=>{\n            const { id: t } = s;\n            try {\n                this.isValidPing({\n                    topic: e\n                }), await this.sendResult({\n                    id: t,\n                    topic: e,\n                    result: !0\n                }), this.client.events.emit(\"session_ping\", {\n                    id: t,\n                    topic: e\n                });\n            } catch (i) {\n                await this.sendError(t, e, i), this.client.logger.error(i);\n            }\n        }, this.onSessionPingResponse = (e, s)=>{\n            const { id: t } = s;\n            setTimeout(()=>{\n                (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcResult)(s) ? this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_ping\", t), {}) : (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcError)(s) && this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_ping\", t), {\n                    error: s.error\n                });\n            }, 500);\n        }, this.onSessionDeleteRequest = async (e, s)=>{\n            const { id: t } = s;\n            try {\n                this.isValidDisconnect({\n                    topic: e,\n                    reason: s.params\n                }), await Promise.all([\n                    new Promise((i)=>{\n                        this.client.core.relayer.once(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.RELAYER_EVENTS.publish, async ()=>{\n                            i(await this.deleteSession(e));\n                        });\n                    }),\n                    this.sendResult({\n                        id: t,\n                        topic: e,\n                        result: !0\n                    })\n                ]), this.client.events.emit(\"session_delete\", {\n                    id: t,\n                    topic: e\n                });\n            } catch (i) {\n                this.client.logger.error(i);\n            }\n        }, this.onSessionRequest = async (e, s)=>{\n            const { id: t, params: i } = s;\n            try {\n                this.isValidRequest(g({\n                    topic: e\n                }, i));\n                const n = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.hashMessage)(JSON.stringify((0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.formatJsonRpcRequest)(\"wc_sessionRequest\", i, t))), o = this.client.session.get(e), a = await this.getVerifyContext(n, o.peer.metadata), c = {\n                    id: t,\n                    topic: e,\n                    params: i,\n                    verifyContext: a\n                };\n                await this.setPendingSessionRequest(c), this.addSessionRequestToSessionRequestQueue(c), this.processSessionRequestQueue();\n            } catch (n) {\n                await this.sendError(t, e, n), this.client.logger.error(n);\n            }\n        }, this.onSessionRequestResponse = (e, s)=>{\n            const { id: t } = s;\n            (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcResult)(s) ? this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_request\", t), {\n                result: s.result\n            }) : (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcError)(s) && this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_request\", t), {\n                error: s.error\n            });\n        }, this.onSessionEventRequest = async (e, s)=>{\n            const { id: t, params: i } = s;\n            try {\n                const n = `${e}_session_event_${i.event.name}`, o = _walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.MemoryStore.get(n);\n                if (o && this.isRequestOutOfSync(o, t)) {\n                    this.client.logger.info(`Discarding out of sync request - ${t}`);\n                    return;\n                }\n                this.isValidEmit(g({\n                    topic: e\n                }, i)), this.client.events.emit(\"session_event\", {\n                    id: t,\n                    topic: e,\n                    params: i\n                }), _walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.MemoryStore.set(n, t);\n            } catch (n) {\n                await this.sendError(t, e, n), this.client.logger.error(n);\n            }\n        }, this.addSessionRequestToSessionRequestQueue = (e)=>{\n            this.sessionRequestQueue.queue.push(e);\n        }, this.cleanupAfterResponse = (e)=>{\n            this.deletePendingSessionRequest(e.response.id, {\n                message: \"fulfilled\",\n                code: 0\n            }), setTimeout(()=>{\n                this.sessionRequestQueue.state = I.idle, this.processSessionRequestQueue();\n            }, (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.toMiliseconds)(this.requestQueueDelay));\n        }, this.processSessionRequestQueue = ()=>{\n            if (this.sessionRequestQueue.state === I.active) {\n                this.client.logger.info(\"session request queue is already active.\");\n                return;\n            }\n            const e = this.sessionRequestQueue.queue[0];\n            if (!e) {\n                this.client.logger.info(\"session request queue is empty.\");\n                return;\n            }\n            try {\n                this.sessionRequestQueue.state = I.active, this.client.events.emit(\"session_request\", e);\n            } catch (s) {\n                this.client.logger.error(s);\n            }\n        }, this.onPairingCreated = (e)=>{\n            if (e.active) return;\n            const s = this.client.proposal.getAll().find((t)=>t.pairingTopic === e.topic);\n            s && this.onSessionProposeRequest(e.topic, (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.formatJsonRpcRequest)(\"wc_sessionPropose\", {\n                requiredNamespaces: s.requiredNamespaces,\n                optionalNamespaces: s.optionalNamespaces,\n                relays: s.relays,\n                proposer: s.proposer,\n                sessionProperties: s.sessionProperties\n            }, s.id));\n        }, this.isValidConnect = async (e)=>{\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidParams)(e)) {\n                const { message: a } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `connect() params: ${JSON.stringify(e)}`);\n                throw new Error(a);\n            }\n            const { pairingTopic: s, requiredNamespaces: t, optionalNamespaces: i, sessionProperties: n, relays: o } = e;\n            if ((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isUndefined)(s) || await this.isValidPairingTopic(s), !(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidRelays)(o, !0)) {\n                const { message: a } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `connect() relays: ${o}`);\n                throw new Error(a);\n            }\n            !(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isUndefined)(t) && (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidObject)(t) !== 0 && this.validateNamespaces(t, \"requiredNamespaces\"), !(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isUndefined)(i) && (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidObject)(i) !== 0 && this.validateNamespaces(i, \"optionalNamespaces\"), (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isUndefined)(n) || this.validateSessionProps(n, \"sessionProperties\");\n        }, this.validateNamespaces = (e, s)=>{\n            const t = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidRequiredNamespaces)(e, \"connect()\", s);\n            if (t) throw new Error(t.message);\n        }, this.isValidApprove = async (e)=>{\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidParams)(e)) throw new Error((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `approve() params: ${e}`).message);\n            const { id: s, namespaces: t, relayProtocol: i, sessionProperties: n } = e;\n            await this.isValidProposalId(s);\n            const o = this.client.proposal.get(s), a = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidNamespaces)(t, \"approve()\");\n            if (a) throw new Error(a.message);\n            const c = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isConformingNamespaces)(o.requiredNamespaces, t, \"approve()\");\n            if (c) throw new Error(c.message);\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidString)(i, !0)) {\n                const { message: p } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `approve() relayProtocol: ${i}`);\n                throw new Error(p);\n            }\n            (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isUndefined)(n) || this.validateSessionProps(n, \"sessionProperties\");\n        }, this.isValidReject = async (e)=>{\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidParams)(e)) {\n                const { message: i } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `reject() params: ${e}`);\n                throw new Error(i);\n            }\n            const { id: s, reason: t } = e;\n            if (await this.isValidProposalId(s), !(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidErrorReason)(t)) {\n                const { message: i } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `reject() reason: ${JSON.stringify(t)}`);\n                throw new Error(i);\n            }\n        }, this.isValidSessionSettleRequest = (e)=>{\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidParams)(e)) {\n                const { message: c } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `onSessionSettleRequest() params: ${e}`);\n                throw new Error(c);\n            }\n            const { relay: s, controller: t, namespaces: i, expiry: n } = e;\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidRelay)(s)) {\n                const { message: c } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", \"onSessionSettleRequest() relay protocol should be a string\");\n                throw new Error(c);\n            }\n            const o = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidController)(t, \"onSessionSettleRequest()\");\n            if (o) throw new Error(o.message);\n            const a = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidNamespaces)(i, \"onSessionSettleRequest()\");\n            if (a) throw new Error(a.message);\n            if ((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isExpired)(n)) {\n                const { message: c } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"EXPIRED\", \"onSessionSettleRequest()\");\n                throw new Error(c);\n            }\n        }, this.isValidUpdate = async (e)=>{\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidParams)(e)) {\n                const { message: a } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `update() params: ${e}`);\n                throw new Error(a);\n            }\n            const { topic: s, namespaces: t } = e;\n            await this.isValidSessionTopic(s);\n            const i = this.client.session.get(s), n = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidNamespaces)(t, \"update()\");\n            if (n) throw new Error(n.message);\n            const o = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isConformingNamespaces)(i.requiredNamespaces, t, \"update()\");\n            if (o) throw new Error(o.message);\n        }, this.isValidExtend = async (e)=>{\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidParams)(e)) {\n                const { message: t } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `extend() params: ${e}`);\n                throw new Error(t);\n            }\n            const { topic: s } = e;\n            await this.isValidSessionTopic(s);\n        }, this.isValidRequest = async (e)=>{\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidParams)(e)) {\n                const { message: a } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `request() params: ${e}`);\n                throw new Error(a);\n            }\n            const { topic: s, request: t, chainId: i, expiry: n } = e;\n            await this.isValidSessionTopic(s);\n            const { namespaces: o } = this.client.session.get(s);\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidNamespacesChainId)(o, i)) {\n                const { message: a } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `request() chainId: ${i}`);\n                throw new Error(a);\n            }\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidRequest)(t)) {\n                const { message: a } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `request() ${JSON.stringify(t)}`);\n                throw new Error(a);\n            }\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidNamespacesRequest)(o, i, t.method)) {\n                const { message: a } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `request() method: ${t.method}`);\n                throw new Error(a);\n            }\n            if (n && !(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidRequestExpiry)(n, U)) {\n                const { message: a } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `request() expiry: ${n}. Expiry must be a number (in seconds) between ${U.min} and ${U.max}`);\n                throw new Error(a);\n            }\n        }, this.isValidRespond = async (e)=>{\n            var s;\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidParams)(e)) {\n                const { message: n } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `respond() params: ${e}`);\n                throw new Error(n);\n            }\n            const { topic: t, response: i } = e;\n            try {\n                await this.isValidSessionTopic(t);\n            } catch (n) {\n                throw (s = e?.response) != null && s.id && this.cleanupAfterResponse(e), n;\n            }\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidResponse)(i)) {\n                const { message: n } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `respond() response: ${JSON.stringify(i)}`);\n                throw new Error(n);\n            }\n        }, this.isValidPing = async (e)=>{\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidParams)(e)) {\n                const { message: t } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `ping() params: ${e}`);\n                throw new Error(t);\n            }\n            const { topic: s } = e;\n            await this.isValidSessionOrPairingTopic(s);\n        }, this.isValidEmit = async (e)=>{\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidParams)(e)) {\n                const { message: o } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `emit() params: ${e}`);\n                throw new Error(o);\n            }\n            const { topic: s, event: t, chainId: i } = e;\n            await this.isValidSessionTopic(s);\n            const { namespaces: n } = this.client.session.get(s);\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidNamespacesChainId)(n, i)) {\n                const { message: o } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `emit() chainId: ${i}`);\n                throw new Error(o);\n            }\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidEvent)(t)) {\n                const { message: o } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `emit() event: ${JSON.stringify(t)}`);\n                throw new Error(o);\n            }\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidNamespacesEvent)(n, i, t.name)) {\n                const { message: o } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `emit() event: ${JSON.stringify(t)}`);\n                throw new Error(o);\n            }\n        }, this.isValidDisconnect = async (e)=>{\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidParams)(e)) {\n                const { message: t } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `disconnect() params: ${e}`);\n                throw new Error(t);\n            }\n            const { topic: s } = e;\n            await this.isValidSessionOrPairingTopic(s);\n        }, this.getVerifyContext = async (e, s)=>{\n            const t = {\n                verified: {\n                    verifyUrl: s.verifyUrl || _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.VERIFY_SERVER,\n                    validation: \"UNKNOWN\",\n                    origin: s.url || \"\"\n                }\n            };\n            try {\n                const i = await this.client.core.verify.resolve({\n                    attestationId: e,\n                    verifyUrl: s.verifyUrl\n                });\n                i && (t.verified.origin = i.origin, t.verified.isScam = i.isScam, t.verified.validation = i.origin === new URL(s.url).origin ? \"VALID\" : \"INVALID\");\n            } catch (i) {\n                this.client.logger.info(i);\n            }\n            return this.client.logger.info(`Verify context: ${JSON.stringify(t)}`), t;\n        }, this.validateSessionProps = (e, s)=>{\n            Object.values(e).forEach((t)=>{\n                if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidString)(t, !1)) {\n                    const { message: i } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `${s} must be in Record<string, string> format. Received: ${JSON.stringify(t)}`);\n                    throw new Error(i);\n                }\n            });\n        };\n    }\n    async isInitialized() {\n        if (!this.initialized) {\n            const { message: r } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"NOT_INITIALIZED\", this.name);\n            throw new Error(r);\n        }\n        await this.client.core.relayer.confirmOnlineStateOrThrow();\n    }\n    registerRelayerEvents() {\n        this.client.core.relayer.on(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.RELAYER_EVENTS.message, async (r)=>{\n            const { topic: e, message: s } = r;\n            if (this.ignoredPayloadTypes.includes(this.client.core.crypto.getPayloadType(s))) return;\n            const t = await this.client.core.crypto.decode(e, s);\n            try {\n                (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcRequest)(t) ? (this.client.core.history.set(e, t), this.onRelayEventRequest({\n                    topic: e,\n                    payload: t\n                })) : (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcResponse)(t) ? (await this.client.core.history.resolve(t), await this.onRelayEventResponse({\n                    topic: e,\n                    payload: t\n                }), this.client.core.history.delete(e, t.id)) : this.onRelayEventUnknownPayload({\n                    topic: e,\n                    payload: t\n                });\n            } catch (i) {\n                this.client.logger.error(i);\n            }\n        });\n    }\n    registerExpirerEvents() {\n        this.client.core.expirer.on(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EXPIRER_EVENTS.expired, async (r)=>{\n            const { topic: e, id: s } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.parseExpirerTarget)(r.target);\n            if (s && this.client.pendingRequest.keys.includes(s)) return await this.deletePendingSessionRequest(s, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"EXPIRED\"), !0);\n            e ? this.client.session.keys.includes(e) && (await this.deleteSession(e, !0), this.client.events.emit(\"session_expire\", {\n                topic: e\n            })) : s && (await this.deleteProposal(s, !0), this.client.events.emit(\"proposal_expire\", {\n                id: s\n            }));\n        });\n    }\n    registerPairingEvents() {\n        this.client.core.pairing.events.on(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.PAIRING_EVENTS.create, (r)=>this.onPairingCreated(r));\n    }\n    isValidPairingTopic(r) {\n        if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidString)(r, !1)) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `pairing topic should be a string: ${r}`);\n            throw new Error(e);\n        }\n        if (!this.client.core.pairing.pairings.keys.includes(r)) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"NO_MATCHING_KEY\", `pairing topic doesn't exist: ${r}`);\n            throw new Error(e);\n        }\n        if ((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isExpired)(this.client.core.pairing.pairings.get(r).expiry)) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"EXPIRED\", `pairing topic: ${r}`);\n            throw new Error(e);\n        }\n    }\n    async isValidSessionTopic(r) {\n        if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidString)(r, !1)) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `session topic should be a string: ${r}`);\n            throw new Error(e);\n        }\n        if (!this.client.session.keys.includes(r)) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"NO_MATCHING_KEY\", `session topic doesn't exist: ${r}`);\n            throw new Error(e);\n        }\n        if ((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isExpired)(this.client.session.get(r).expiry)) {\n            await this.deleteSession(r);\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"EXPIRED\", `session topic: ${r}`);\n            throw new Error(e);\n        }\n    }\n    async isValidSessionOrPairingTopic(r) {\n        if (this.client.session.keys.includes(r)) await this.isValidSessionTopic(r);\n        else if (this.client.core.pairing.pairings.keys.includes(r)) this.isValidPairingTopic(r);\n        else if ((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidString)(r, !1)) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"NO_MATCHING_KEY\", `session or pairing topic doesn't exist: ${r}`);\n            throw new Error(e);\n        } else {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `session or pairing topic should be a string: ${r}`);\n            throw new Error(e);\n        }\n    }\n    async isValidProposalId(r) {\n        if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidId)(r)) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `proposal id should be a number: ${r}`);\n            throw new Error(e);\n        }\n        if (!this.client.proposal.keys.includes(r)) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"NO_MATCHING_KEY\", `proposal id doesn't exist: ${r}`);\n            throw new Error(e);\n        }\n        if ((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isExpired)(this.client.proposal.get(r).expiry)) {\n            await this.deleteProposal(r);\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"EXPIRED\", `proposal id: ${r}`);\n            throw new Error(e);\n        }\n    }\n}\nclass us extends _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.Store {\n    constructor(r, e){\n        super(r, e, ne, G), this.core = r, this.logger = e;\n    }\n}\nclass ue extends _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.Store {\n    constructor(r, e){\n        super(r, e, ae, G), this.core = r, this.logger = e;\n    }\n}\nclass gs extends _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.Store {\n    constructor(r, e){\n        super(r, e, le, G, (s)=>s.id), this.core = r, this.logger = e;\n    }\n}\nclass Q extends _walletconnect_types__WEBPACK_IMPORTED_MODULE_4__.ISignClient {\n    constructor(r){\n        super(r), this.protocol = X, this.version = F, this.name = M.name, this.events = new events__WEBPACK_IMPORTED_MODULE_1__.EventEmitter, this.on = (s, t)=>this.events.on(s, t), this.once = (s, t)=>this.events.once(s, t), this.off = (s, t)=>this.events.off(s, t), this.removeListener = (s, t)=>this.events.removeListener(s, t), this.removeAllListeners = (s)=>this.events.removeAllListeners(s), this.connect = async (s)=>{\n            try {\n                return await this.engine.connect(s);\n            } catch (t) {\n                throw this.logger.error(t.message), t;\n            }\n        }, this.pair = async (s)=>{\n            try {\n                return await this.engine.pair(s);\n            } catch (t) {\n                throw this.logger.error(t.message), t;\n            }\n        }, this.approve = async (s)=>{\n            try {\n                return await this.engine.approve(s);\n            } catch (t) {\n                throw this.logger.error(t.message), t;\n            }\n        }, this.reject = async (s)=>{\n            try {\n                return await this.engine.reject(s);\n            } catch (t) {\n                throw this.logger.error(t.message), t;\n            }\n        }, this.update = async (s)=>{\n            try {\n                return await this.engine.update(s);\n            } catch (t) {\n                throw this.logger.error(t.message), t;\n            }\n        }, this.extend = async (s)=>{\n            try {\n                return await this.engine.extend(s);\n            } catch (t) {\n                throw this.logger.error(t.message), t;\n            }\n        }, this.request = async (s)=>{\n            try {\n                return await this.engine.request(s);\n            } catch (t) {\n                throw this.logger.error(t.message), t;\n            }\n        }, this.respond = async (s)=>{\n            try {\n                return await this.engine.respond(s);\n            } catch (t) {\n                throw this.logger.error(t.message), t;\n            }\n        }, this.ping = async (s)=>{\n            try {\n                return await this.engine.ping(s);\n            } catch (t) {\n                throw this.logger.error(t.message), t;\n            }\n        }, this.emit = async (s)=>{\n            try {\n                return await this.engine.emit(s);\n            } catch (t) {\n                throw this.logger.error(t.message), t;\n            }\n        }, this.disconnect = async (s)=>{\n            try {\n                return await this.engine.disconnect(s);\n            } catch (t) {\n                throw this.logger.error(t.message), t;\n            }\n        }, this.find = (s)=>{\n            try {\n                return this.engine.find(s);\n            } catch (t) {\n                throw this.logger.error(t.message), t;\n            }\n        }, this.getPendingSessionRequests = ()=>{\n            try {\n                return this.engine.getPendingSessionRequests();\n            } catch (s) {\n                throw this.logger.error(s.message), s;\n            }\n        }, this.name = r?.name || M.name, this.metadata = r?.metadata || (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getAppMetadata)();\n        const e = typeof r?.logger < \"u\" && typeof r?.logger != \"string\" ? r.logger : (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_0__.pino)((0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_0__.getDefaultLoggerOptions)({\n            level: r?.logger || M.logger\n        }));\n        this.core = r?.core || new _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.Core(r), this.logger = (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_0__.generateChildLogger)(e, this.name), this.session = new ue(this.core, this.logger), this.proposal = new us(this.core, this.logger), this.pendingRequest = new gs(this.core, this.logger), this.engine = new ds(this);\n    }\n    static async init(r) {\n        const e = new Q(r);\n        return await e.initialize(), e;\n    }\n    get context() {\n        return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_0__.getLoggerContext)(this.logger);\n    }\n    get pairing() {\n        return this.core.pairing.pairings;\n    }\n    async initialize() {\n        this.logger.trace(\"Initialized\");\n        try {\n            await this.core.start(), await this.session.init(), await this.proposal.init(), await this.pendingRequest.init(), await this.engine.init(), this.core.verify.init({\n                verifyUrl: this.metadata.verifyUrl\n            }), this.logger.info(\"SignClient Initialization Success\");\n        } catch (r) {\n            throw this.logger.info(\"SignClient Initialization Failure\"), this.logger.error(r.message), r;\n        }\n    }\n}\nconst ms = ue, ws = Q;\n //# sourceMappingURL=index.es.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@walletconnect+sign-client@2.11.0/node_modules/@walletconnect/sign-client/dist/index.es.js\n");

/***/ })

};
;