"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@walletconnect+universal-provider@2.11.0";
exports.ids = ["vendor-chunks/@walletconnect+universal-provider@2.11.0"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/@walletconnect+universal-provider@2.11.0/node_modules/@walletconnect/universal-provider/dist/index.es.js":
/*!*************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@walletconnect+universal-provider@2.11.0/node_modules/@walletconnect/universal-provider/dist/index.es.js ***!
  \*************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   UniversalProvider: () => (/* binding */ hv),\n/* harmony export */   \"default\": () => (/* binding */ lr)\n/* harmony export */ });\n/* harmony import */ var _walletconnect_sign_client__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @walletconnect/sign-client */ \"(ssr)/./node_modules/.pnpm/@walletconnect+sign-client@2.11.0/node_modules/@walletconnect/sign-client/dist/index.es.js\");\n/* harmony import */ var _walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @walletconnect/utils */ \"(ssr)/./node_modules/.pnpm/@walletconnect+utils@2.11.0/node_modules/@walletconnect/utils/dist/index.es.js\");\n/* harmony import */ var _walletconnect_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @walletconnect/logger */ \"(ssr)/./node_modules/.pnpm/@walletconnect+logger@2.0.1/node_modules/@walletconnect/logger/dist/cjs/index.js\");\n/* harmony import */ var _walletconnect_logger__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_walletconnect_logger__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _walletconnect_jsonrpc_http_connection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @walletconnect/jsonrpc-http-connection */ \"(ssr)/./node_modules/.pnpm/@walletconnect+jsonrpc-http-connection@1.0.7/node_modules/@walletconnect/jsonrpc-http-connection/dist/esm/index.js\");\n/* harmony import */ var _walletconnect_jsonrpc_provider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @walletconnect/jsonrpc-provider */ \"(ssr)/./node_modules/.pnpm/@walletconnect+jsonrpc-provider@1.0.13/node_modules/@walletconnect/jsonrpc-provider/dist/esm/index.js\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! events */ \"events\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @walletconnect/jsonrpc-utils */ \"(ssr)/./node_modules/.pnpm/@walletconnect+jsonrpc-utils@1.0.8/node_modules/@walletconnect/jsonrpc-utils/dist/esm/index.js\");\n\n\n\n\n\n\n\nconst Ia = \"error\", Wg = \"wss://relay.walletconnect.com\", Fg = \"wc\", Mg = \"universal_provider\", xa = `${Fg}@2:${Mg}:`, qg = \"https://rpc.walletconnect.com/v1/\", Vn = {\n    DEFAULT_CHAIN_CHANGED: \"default_chain_changed\"\n};\nvar ge = typeof globalThis < \"u\" ? globalThis :  false ? 0 : typeof global < \"u\" ? global : typeof self < \"u\" ? self : {}, Ui = {\n    exports: {}\n}; /**\n * @license\n * Lodash <https://lodash.com/>\n * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */ \n(function(C, u) {\n    (function() {\n        var i, d = \"4.17.21\", P = 200, O = \"Unsupported core-js use. Try https://npms.io/search?q=ponyfill.\", $ = \"Expected a function\", En = \"Invalid `variable` option passed into `_.template`\", zt = \"__lodash_hash_undefined__\", pr = 500, It = \"__lodash_placeholder__\", Ln = 1, Fn = 2, xt = 4, Et = 1, ve = 2, vn = 1, ct = 2, qi = 4, Dn = 8, yt = 16, Hn = 32, St = 64, Mn = 128, Kt = 256, dr = 512, La = 30, Da = \"...\", Ha = 800, Na = 16, Bi = 1, $a = 2, Ua = 3, ht = 1 / 0, kn = 9007199254740991, Wa = 17976931348623157e292, _e = 0 / 0, Nn = 4294967295, Fa = Nn - 1, Ma = Nn >>> 1, qa = [\n            [\n                \"ary\",\n                Mn\n            ],\n            [\n                \"bind\",\n                vn\n            ],\n            [\n                \"bindKey\",\n                ct\n            ],\n            [\n                \"curry\",\n                Dn\n            ],\n            [\n                \"curryRight\",\n                yt\n            ],\n            [\n                \"flip\",\n                dr\n            ],\n            [\n                \"partial\",\n                Hn\n            ],\n            [\n                \"partialRight\",\n                St\n            ],\n            [\n                \"rearg\",\n                Kt\n            ]\n        ], Ot = \"[object Arguments]\", me = \"[object Array]\", Ba = \"[object AsyncFunction]\", Yt = \"[object Boolean]\", Zt = \"[object Date]\", Ga = \"[object DOMException]\", we = \"[object Error]\", Pe = \"[object Function]\", Gi = \"[object GeneratorFunction]\", yn = \"[object Map]\", Jt = \"[object Number]\", za = \"[object Null]\", qn = \"[object Object]\", zi = \"[object Promise]\", Ka = \"[object Proxy]\", Xt = \"[object RegExp]\", Sn = \"[object Set]\", Qt = \"[object String]\", Ae = \"[object Symbol]\", Ya = \"[object Undefined]\", Vt = \"[object WeakMap]\", Za = \"[object WeakSet]\", kt = \"[object ArrayBuffer]\", Rt = \"[object DataView]\", gr = \"[object Float32Array]\", vr = \"[object Float64Array]\", _r = \"[object Int8Array]\", mr = \"[object Int16Array]\", wr = \"[object Int32Array]\", Pr = \"[object Uint8Array]\", Ar = \"[object Uint8ClampedArray]\", Cr = \"[object Uint16Array]\", Ir = \"[object Uint32Array]\", Ja = /\\b__p \\+= '';/g, Xa = /\\b(__p \\+=) '' \\+/g, Qa = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g, Ki = /&(?:amp|lt|gt|quot|#39);/g, Yi = /[&<>\"']/g, Va = RegExp(Ki.source), ka = RegExp(Yi.source), ja = /<%-([\\s\\S]+?)%>/g, no = /<%([\\s\\S]+?)%>/g, Zi = /<%=([\\s\\S]+?)%>/g, to = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/, eo = /^\\w*$/, ro = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g, xr = /[\\\\^$.*+?()[\\]{}|]/g, io = RegExp(xr.source), Er = /^\\s+/, so = /\\s/, uo = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/, ao = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/, oo = /,? & /, fo = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g, co = /[()=,{}\\[\\]\\/\\s]/, ho = /\\\\(\\\\)?/g, lo = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g, Ji = /\\w*$/, po = /^[-+]0x[0-9a-f]+$/i, go = /^0b[01]+$/i, vo = /^\\[object .+?Constructor\\]$/, _o = /^0o[0-7]+$/i, mo = /^(?:0|[1-9]\\d*)$/, wo = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g, Ce = /($^)/, Po = /['\\n\\r\\u2028\\u2029\\\\]/g, Ie = \"\\ud800-\\udfff\", Ao = \"\\\\u0300-\\\\u036f\", Co = \"\\\\ufe20-\\\\ufe2f\", Io = \"\\\\u20d0-\\\\u20ff\", Xi = Ao + Co + Io, Qi = \"\\\\u2700-\\\\u27bf\", Vi = \"a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff\", xo = \"\\\\xac\\\\xb1\\\\xd7\\\\xf7\", Eo = \"\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf\", yo = \"\\\\u2000-\\\\u206f\", So = \" \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000\", ki = \"A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde\", ji = \"\\\\ufe0e\\\\ufe0f\", ns = xo + Eo + yo + So, yr = \"['’]\", Oo = \"[\" + Ie + \"]\", ts = \"[\" + ns + \"]\", xe = \"[\" + Xi + \"]\", es = \"\\\\d+\", Ro = \"[\" + Qi + \"]\", rs = \"[\" + Vi + \"]\", is = \"[^\" + Ie + ns + es + Qi + Vi + ki + \"]\", Sr = \"\\ud83c[\\udffb-\\udfff]\", bo = \"(?:\" + xe + \"|\" + Sr + \")\", ss = \"[^\" + Ie + \"]\", Or = \"(?:\\ud83c[\\udde6-\\uddff]){2}\", Rr = \"[\\ud800-\\udbff][\\udc00-\\udfff]\", bt = \"[\" + ki + \"]\", us = \"\\\\u200d\", as = \"(?:\" + rs + \"|\" + is + \")\", To = \"(?:\" + bt + \"|\" + is + \")\", os = \"(?:\" + yr + \"(?:d|ll|m|re|s|t|ve))?\", fs = \"(?:\" + yr + \"(?:D|LL|M|RE|S|T|VE))?\", cs = bo + \"?\", hs = \"[\" + ji + \"]?\", Lo = \"(?:\" + us + \"(?:\" + [\n            ss,\n            Or,\n            Rr\n        ].join(\"|\") + \")\" + hs + cs + \")*\", Do = \"\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])\", Ho = \"\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])\", ls = hs + cs + Lo, No = \"(?:\" + [\n            Ro,\n            Or,\n            Rr\n        ].join(\"|\") + \")\" + ls, $o = \"(?:\" + [\n            ss + xe + \"?\",\n            xe,\n            Or,\n            Rr,\n            Oo\n        ].join(\"|\") + \")\", Uo = RegExp(yr, \"g\"), Wo = RegExp(xe, \"g\"), br = RegExp(Sr + \"(?=\" + Sr + \")|\" + $o + ls, \"g\"), Fo = RegExp([\n            bt + \"?\" + rs + \"+\" + os + \"(?=\" + [\n                ts,\n                bt,\n                \"$\"\n            ].join(\"|\") + \")\",\n            To + \"+\" + fs + \"(?=\" + [\n                ts,\n                bt + as,\n                \"$\"\n            ].join(\"|\") + \")\",\n            bt + \"?\" + as + \"+\" + os,\n            bt + \"+\" + fs,\n            Ho,\n            Do,\n            es,\n            No\n        ].join(\"|\"), \"g\"), Mo = RegExp(\"[\" + us + Ie + Xi + ji + \"]\"), qo = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/, Bo = [\n            \"Array\",\n            \"Buffer\",\n            \"DataView\",\n            \"Date\",\n            \"Error\",\n            \"Float32Array\",\n            \"Float64Array\",\n            \"Function\",\n            \"Int8Array\",\n            \"Int16Array\",\n            \"Int32Array\",\n            \"Map\",\n            \"Math\",\n            \"Object\",\n            \"Promise\",\n            \"RegExp\",\n            \"Set\",\n            \"String\",\n            \"Symbol\",\n            \"TypeError\",\n            \"Uint8Array\",\n            \"Uint8ClampedArray\",\n            \"Uint16Array\",\n            \"Uint32Array\",\n            \"WeakMap\",\n            \"_\",\n            \"clearTimeout\",\n            \"isFinite\",\n            \"parseInt\",\n            \"setTimeout\"\n        ], Go = -1, B = {};\n        B[gr] = B[vr] = B[_r] = B[mr] = B[wr] = B[Pr] = B[Ar] = B[Cr] = B[Ir] = !0, B[Ot] = B[me] = B[kt] = B[Yt] = B[Rt] = B[Zt] = B[we] = B[Pe] = B[yn] = B[Jt] = B[qn] = B[Xt] = B[Sn] = B[Qt] = B[Vt] = !1;\n        var q = {};\n        q[Ot] = q[me] = q[kt] = q[Rt] = q[Yt] = q[Zt] = q[gr] = q[vr] = q[_r] = q[mr] = q[wr] = q[yn] = q[Jt] = q[qn] = q[Xt] = q[Sn] = q[Qt] = q[Ae] = q[Pr] = q[Ar] = q[Cr] = q[Ir] = !0, q[we] = q[Pe] = q[Vt] = !1;\n        var zo = {\n            À: \"A\",\n            Á: \"A\",\n            Â: \"A\",\n            Ã: \"A\",\n            Ä: \"A\",\n            Å: \"A\",\n            à: \"a\",\n            á: \"a\",\n            â: \"a\",\n            ã: \"a\",\n            ä: \"a\",\n            å: \"a\",\n            Ç: \"C\",\n            ç: \"c\",\n            Ð: \"D\",\n            ð: \"d\",\n            È: \"E\",\n            É: \"E\",\n            Ê: \"E\",\n            Ë: \"E\",\n            è: \"e\",\n            é: \"e\",\n            ê: \"e\",\n            ë: \"e\",\n            Ì: \"I\",\n            Í: \"I\",\n            Î: \"I\",\n            Ï: \"I\",\n            ì: \"i\",\n            í: \"i\",\n            î: \"i\",\n            ï: \"i\",\n            Ñ: \"N\",\n            ñ: \"n\",\n            Ò: \"O\",\n            Ó: \"O\",\n            Ô: \"O\",\n            Õ: \"O\",\n            Ö: \"O\",\n            Ø: \"O\",\n            ò: \"o\",\n            ó: \"o\",\n            ô: \"o\",\n            õ: \"o\",\n            ö: \"o\",\n            ø: \"o\",\n            Ù: \"U\",\n            Ú: \"U\",\n            Û: \"U\",\n            Ü: \"U\",\n            ù: \"u\",\n            ú: \"u\",\n            û: \"u\",\n            ü: \"u\",\n            Ý: \"Y\",\n            ý: \"y\",\n            ÿ: \"y\",\n            Æ: \"Ae\",\n            æ: \"ae\",\n            Þ: \"Th\",\n            þ: \"th\",\n            ß: \"ss\",\n            Ā: \"A\",\n            Ă: \"A\",\n            Ą: \"A\",\n            ā: \"a\",\n            ă: \"a\",\n            ą: \"a\",\n            Ć: \"C\",\n            Ĉ: \"C\",\n            Ċ: \"C\",\n            Č: \"C\",\n            ć: \"c\",\n            ĉ: \"c\",\n            ċ: \"c\",\n            č: \"c\",\n            Ď: \"D\",\n            Đ: \"D\",\n            ď: \"d\",\n            đ: \"d\",\n            Ē: \"E\",\n            Ĕ: \"E\",\n            Ė: \"E\",\n            Ę: \"E\",\n            Ě: \"E\",\n            ē: \"e\",\n            ĕ: \"e\",\n            ė: \"e\",\n            ę: \"e\",\n            ě: \"e\",\n            Ĝ: \"G\",\n            Ğ: \"G\",\n            Ġ: \"G\",\n            Ģ: \"G\",\n            ĝ: \"g\",\n            ğ: \"g\",\n            ġ: \"g\",\n            ģ: \"g\",\n            Ĥ: \"H\",\n            Ħ: \"H\",\n            ĥ: \"h\",\n            ħ: \"h\",\n            Ĩ: \"I\",\n            Ī: \"I\",\n            Ĭ: \"I\",\n            Į: \"I\",\n            İ: \"I\",\n            ĩ: \"i\",\n            ī: \"i\",\n            ĭ: \"i\",\n            į: \"i\",\n            ı: \"i\",\n            Ĵ: \"J\",\n            ĵ: \"j\",\n            Ķ: \"K\",\n            ķ: \"k\",\n            ĸ: \"k\",\n            Ĺ: \"L\",\n            Ļ: \"L\",\n            Ľ: \"L\",\n            Ŀ: \"L\",\n            Ł: \"L\",\n            ĺ: \"l\",\n            ļ: \"l\",\n            ľ: \"l\",\n            ŀ: \"l\",\n            ł: \"l\",\n            Ń: \"N\",\n            Ņ: \"N\",\n            Ň: \"N\",\n            Ŋ: \"N\",\n            ń: \"n\",\n            ņ: \"n\",\n            ň: \"n\",\n            ŋ: \"n\",\n            Ō: \"O\",\n            Ŏ: \"O\",\n            Ő: \"O\",\n            ō: \"o\",\n            ŏ: \"o\",\n            ő: \"o\",\n            Ŕ: \"R\",\n            Ŗ: \"R\",\n            Ř: \"R\",\n            ŕ: \"r\",\n            ŗ: \"r\",\n            ř: \"r\",\n            Ś: \"S\",\n            Ŝ: \"S\",\n            Ş: \"S\",\n            Š: \"S\",\n            ś: \"s\",\n            ŝ: \"s\",\n            ş: \"s\",\n            š: \"s\",\n            Ţ: \"T\",\n            Ť: \"T\",\n            Ŧ: \"T\",\n            ţ: \"t\",\n            ť: \"t\",\n            ŧ: \"t\",\n            Ũ: \"U\",\n            Ū: \"U\",\n            Ŭ: \"U\",\n            Ů: \"U\",\n            Ű: \"U\",\n            Ų: \"U\",\n            ũ: \"u\",\n            ū: \"u\",\n            ŭ: \"u\",\n            ů: \"u\",\n            ű: \"u\",\n            ų: \"u\",\n            Ŵ: \"W\",\n            ŵ: \"w\",\n            Ŷ: \"Y\",\n            ŷ: \"y\",\n            Ÿ: \"Y\",\n            Ź: \"Z\",\n            Ż: \"Z\",\n            Ž: \"Z\",\n            ź: \"z\",\n            ż: \"z\",\n            ž: \"z\",\n            Ĳ: \"IJ\",\n            ĳ: \"ij\",\n            Œ: \"Oe\",\n            œ: \"oe\",\n            ŉ: \"'n\",\n            ſ: \"s\"\n        }, Ko = {\n            \"&\": \"&amp;\",\n            \"<\": \"&lt;\",\n            \">\": \"&gt;\",\n            '\"': \"&quot;\",\n            \"'\": \"&#39;\"\n        }, Yo = {\n            \"&amp;\": \"&\",\n            \"&lt;\": \"<\",\n            \"&gt;\": \">\",\n            \"&quot;\": '\"',\n            \"&#39;\": \"'\"\n        }, Zo = {\n            \"\\\\\": \"\\\\\",\n            \"'\": \"'\",\n            \"\\n\": \"n\",\n            \"\\r\": \"r\",\n            \"\\u2028\": \"u2028\",\n            \"\\u2029\": \"u2029\"\n        }, Jo = parseFloat, Xo = parseInt, ps = typeof ge == \"object\" && ge && ge.Object === Object && ge, Qo = typeof self == \"object\" && self && self.Object === Object && self, k = ps || Qo || Function(\"return this\")(), Tr = u && !u.nodeType && u, lt = Tr && !0 && C && !C.nodeType && C, ds = lt && lt.exports === Tr, Lr = ds && ps.process, _n = function() {\n            try {\n                var h = lt && lt.require && lt.require(\"util\").types;\n                return h || Lr && Lr.binding && Lr.binding(\"util\");\n            } catch  {}\n        }(), gs = _n && _n.isArrayBuffer, vs = _n && _n.isDate, _s = _n && _n.isMap, ms = _n && _n.isRegExp, ws = _n && _n.isSet, Ps = _n && _n.isTypedArray;\n        function cn(h, g, p) {\n            switch(p.length){\n                case 0:\n                    return h.call(g);\n                case 1:\n                    return h.call(g, p[0]);\n                case 2:\n                    return h.call(g, p[0], p[1]);\n                case 3:\n                    return h.call(g, p[0], p[1], p[2]);\n            }\n            return h.apply(g, p);\n        }\n        function Vo(h, g, p, A) {\n            for(var S = -1, U = h == null ? 0 : h.length; ++S < U;){\n                var X = h[S];\n                g(A, X, p(X), h);\n            }\n            return A;\n        }\n        function mn(h, g) {\n            for(var p = -1, A = h == null ? 0 : h.length; ++p < A && g(h[p], p, h) !== !1;);\n            return h;\n        }\n        function ko(h, g) {\n            for(var p = h == null ? 0 : h.length; p-- && g(h[p], p, h) !== !1;);\n            return h;\n        }\n        function As(h, g) {\n            for(var p = -1, A = h == null ? 0 : h.length; ++p < A;)if (!g(h[p], p, h)) return !1;\n            return !0;\n        }\n        function jn(h, g) {\n            for(var p = -1, A = h == null ? 0 : h.length, S = 0, U = []; ++p < A;){\n                var X = h[p];\n                g(X, p, h) && (U[S++] = X);\n            }\n            return U;\n        }\n        function Ee(h, g) {\n            var p = h == null ? 0 : h.length;\n            return !!p && Tt(h, g, 0) > -1;\n        }\n        function Dr(h, g, p) {\n            for(var A = -1, S = h == null ? 0 : h.length; ++A < S;)if (p(g, h[A])) return !0;\n            return !1;\n        }\n        function G(h, g) {\n            for(var p = -1, A = h == null ? 0 : h.length, S = Array(A); ++p < A;)S[p] = g(h[p], p, h);\n            return S;\n        }\n        function nt(h, g) {\n            for(var p = -1, A = g.length, S = h.length; ++p < A;)h[S + p] = g[p];\n            return h;\n        }\n        function Hr(h, g, p, A) {\n            var S = -1, U = h == null ? 0 : h.length;\n            for(A && U && (p = h[++S]); ++S < U;)p = g(p, h[S], S, h);\n            return p;\n        }\n        function jo(h, g, p, A) {\n            var S = h == null ? 0 : h.length;\n            for(A && S && (p = h[--S]); S--;)p = g(p, h[S], S, h);\n            return p;\n        }\n        function Nr(h, g) {\n            for(var p = -1, A = h == null ? 0 : h.length; ++p < A;)if (g(h[p], p, h)) return !0;\n            return !1;\n        }\n        var nf = $r(\"length\");\n        function tf(h) {\n            return h.split(\"\");\n        }\n        function ef(h) {\n            return h.match(fo) || [];\n        }\n        function Cs(h, g, p) {\n            var A;\n            return p(h, function(S, U, X) {\n                if (g(S, U, X)) return A = U, !1;\n            }), A;\n        }\n        function ye(h, g, p, A) {\n            for(var S = h.length, U = p + (A ? 1 : -1); A ? U-- : ++U < S;)if (g(h[U], U, h)) return U;\n            return -1;\n        }\n        function Tt(h, g, p) {\n            return g === g ? gf(h, g, p) : ye(h, Is, p);\n        }\n        function rf(h, g, p, A) {\n            for(var S = p - 1, U = h.length; ++S < U;)if (A(h[S], g)) return S;\n            return -1;\n        }\n        function Is(h) {\n            return h !== h;\n        }\n        function xs(h, g) {\n            var p = h == null ? 0 : h.length;\n            return p ? Wr(h, g) / p : _e;\n        }\n        function $r(h) {\n            return function(g) {\n                return g == null ? i : g[h];\n            };\n        }\n        function Ur(h) {\n            return function(g) {\n                return h == null ? i : h[g];\n            };\n        }\n        function Es(h, g, p, A, S) {\n            return S(h, function(U, X, M) {\n                p = A ? (A = !1, U) : g(p, U, X, M);\n            }), p;\n        }\n        function sf(h, g) {\n            var p = h.length;\n            for(h.sort(g); p--;)h[p] = h[p].value;\n            return h;\n        }\n        function Wr(h, g) {\n            for(var p, A = -1, S = h.length; ++A < S;){\n                var U = g(h[A]);\n                U !== i && (p = p === i ? U : p + U);\n            }\n            return p;\n        }\n        function Fr(h, g) {\n            for(var p = -1, A = Array(h); ++p < h;)A[p] = g(p);\n            return A;\n        }\n        function uf(h, g) {\n            return G(g, function(p) {\n                return [\n                    p,\n                    h[p]\n                ];\n            });\n        }\n        function ys(h) {\n            return h && h.slice(0, bs(h) + 1).replace(Er, \"\");\n        }\n        function hn(h) {\n            return function(g) {\n                return h(g);\n            };\n        }\n        function Mr(h, g) {\n            return G(g, function(p) {\n                return h[p];\n            });\n        }\n        function jt(h, g) {\n            return h.has(g);\n        }\n        function Ss(h, g) {\n            for(var p = -1, A = h.length; ++p < A && Tt(g, h[p], 0) > -1;);\n            return p;\n        }\n        function Os(h, g) {\n            for(var p = h.length; p-- && Tt(g, h[p], 0) > -1;);\n            return p;\n        }\n        function af(h, g) {\n            for(var p = h.length, A = 0; p--;)h[p] === g && ++A;\n            return A;\n        }\n        var of = Ur(zo), ff = Ur(Ko);\n        function cf(h) {\n            return \"\\\\\" + Zo[h];\n        }\n        function hf(h, g) {\n            return h == null ? i : h[g];\n        }\n        function Lt(h) {\n            return Mo.test(h);\n        }\n        function lf(h) {\n            return qo.test(h);\n        }\n        function pf(h) {\n            for(var g, p = []; !(g = h.next()).done;)p.push(g.value);\n            return p;\n        }\n        function qr(h) {\n            var g = -1, p = Array(h.size);\n            return h.forEach(function(A, S) {\n                p[++g] = [\n                    S,\n                    A\n                ];\n            }), p;\n        }\n        function Rs(h, g) {\n            return function(p) {\n                return h(g(p));\n            };\n        }\n        function tt(h, g) {\n            for(var p = -1, A = h.length, S = 0, U = []; ++p < A;){\n                var X = h[p];\n                (X === g || X === It) && (h[p] = It, U[S++] = p);\n            }\n            return U;\n        }\n        function Se(h) {\n            var g = -1, p = Array(h.size);\n            return h.forEach(function(A) {\n                p[++g] = A;\n            }), p;\n        }\n        function df(h) {\n            var g = -1, p = Array(h.size);\n            return h.forEach(function(A) {\n                p[++g] = [\n                    A,\n                    A\n                ];\n            }), p;\n        }\n        function gf(h, g, p) {\n            for(var A = p - 1, S = h.length; ++A < S;)if (h[A] === g) return A;\n            return -1;\n        }\n        function vf(h, g, p) {\n            for(var A = p + 1; A--;)if (h[A] === g) return A;\n            return A;\n        }\n        function Dt(h) {\n            return Lt(h) ? mf(h) : nf(h);\n        }\n        function On(h) {\n            return Lt(h) ? wf(h) : tf(h);\n        }\n        function bs(h) {\n            for(var g = h.length; g-- && so.test(h.charAt(g)););\n            return g;\n        }\n        var _f = Ur(Yo);\n        function mf(h) {\n            for(var g = br.lastIndex = 0; br.test(h);)++g;\n            return g;\n        }\n        function wf(h) {\n            return h.match(br) || [];\n        }\n        function Pf(h) {\n            return h.match(Fo) || [];\n        }\n        var Af = function h(g) {\n            g = g == null ? k : Ht.defaults(k.Object(), g, Ht.pick(k, Bo));\n            var p = g.Array, A = g.Date, S = g.Error, U = g.Function, X = g.Math, M = g.Object, Br = g.RegExp, Cf = g.String, wn = g.TypeError, Oe = p.prototype, If = U.prototype, Nt = M.prototype, Re = g[\"__core-js_shared__\"], be = If.toString, F = Nt.hasOwnProperty, xf = 0, Ts = function() {\n                var n = /[^.]+$/.exec(Re && Re.keys && Re.keys.IE_PROTO || \"\");\n                return n ? \"Symbol(src)_1.\" + n : \"\";\n            }(), Te = Nt.toString, Ef = be.call(M), yf = k._, Sf = Br(\"^\" + be.call(F).replace(xr, \"\\\\$&\").replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, \"$1.*?\") + \"$\"), Le = ds ? g.Buffer : i, et = g.Symbol, De = g.Uint8Array, Ls = Le ? Le.allocUnsafe : i, He = Rs(M.getPrototypeOf, M), Ds = M.create, Hs = Nt.propertyIsEnumerable, Ne = Oe.splice, Ns = et ? et.isConcatSpreadable : i, ne = et ? et.iterator : i, pt = et ? et.toStringTag : i, $e = function() {\n                try {\n                    var n = mt(M, \"defineProperty\");\n                    return n({}, \"\", {}), n;\n                } catch  {}\n            }(), Of = g.clearTimeout !== k.clearTimeout && g.clearTimeout, Rf = A && A.now !== k.Date.now && A.now, bf = g.setTimeout !== k.setTimeout && g.setTimeout, Ue = X.ceil, We = X.floor, Gr = M.getOwnPropertySymbols, Tf = Le ? Le.isBuffer : i, $s = g.isFinite, Lf = Oe.join, Df = Rs(M.keys, M), Q = X.max, nn = X.min, Hf = A.now, Nf = g.parseInt, Us = X.random, $f = Oe.reverse, zr = mt(g, \"DataView\"), te = mt(g, \"Map\"), Kr = mt(g, \"Promise\"), $t = mt(g, \"Set\"), ee = mt(g, \"WeakMap\"), re = mt(M, \"create\"), Fe = ee && new ee, Ut = {}, Uf = wt(zr), Wf = wt(te), Ff = wt(Kr), Mf = wt($t), qf = wt(ee), Me = et ? et.prototype : i, ie = Me ? Me.valueOf : i, Ws = Me ? Me.toString : i;\n            function a(n) {\n                if (Y(n) && !R(n) && !(n instanceof H)) {\n                    if (n instanceof Pn) return n;\n                    if (F.call(n, \"__wrapped__\")) return Fu(n);\n                }\n                return new Pn(n);\n            }\n            var Wt = function() {\n                function n() {}\n                return function(t) {\n                    if (!K(t)) return {};\n                    if (Ds) return Ds(t);\n                    n.prototype = t;\n                    var e = new n;\n                    return n.prototype = i, e;\n                };\n            }();\n            function qe() {}\n            function Pn(n, t) {\n                this.__wrapped__ = n, this.__actions__ = [], this.__chain__ = !!t, this.__index__ = 0, this.__values__ = i;\n            }\n            a.templateSettings = {\n                escape: ja,\n                evaluate: no,\n                interpolate: Zi,\n                variable: \"\",\n                imports: {\n                    _: a\n                }\n            }, a.prototype = qe.prototype, a.prototype.constructor = a, Pn.prototype = Wt(qe.prototype), Pn.prototype.constructor = Pn;\n            function H(n) {\n                this.__wrapped__ = n, this.__actions__ = [], this.__dir__ = 1, this.__filtered__ = !1, this.__iteratees__ = [], this.__takeCount__ = Nn, this.__views__ = [];\n            }\n            function Bf() {\n                var n = new H(this.__wrapped__);\n                return n.__actions__ = un(this.__actions__), n.__dir__ = this.__dir__, n.__filtered__ = this.__filtered__, n.__iteratees__ = un(this.__iteratees__), n.__takeCount__ = this.__takeCount__, n.__views__ = un(this.__views__), n;\n            }\n            function Gf() {\n                if (this.__filtered__) {\n                    var n = new H(this);\n                    n.__dir__ = -1, n.__filtered__ = !0;\n                } else n = this.clone(), n.__dir__ *= -1;\n                return n;\n            }\n            function zf() {\n                var n = this.__wrapped__.value(), t = this.__dir__, e = R(n), r = t < 0, s = e ? n.length : 0, o = eh(0, s, this.__views__), f = o.start, c = o.end, l = c - f, v = r ? c : f - 1, _ = this.__iteratees__, m = _.length, w = 0, I = nn(l, this.__takeCount__);\n                if (!e || !r && s == l && I == l) return ou(n, this.__actions__);\n                var E = [];\n                n: for(; l-- && w < I;){\n                    v += t;\n                    for(var T = -1, y = n[v]; ++T < m;){\n                        var D = _[T], N = D.iteratee, dn = D.type, sn = N(y);\n                        if (dn == $a) y = sn;\n                        else if (!sn) {\n                            if (dn == Bi) continue n;\n                            break n;\n                        }\n                    }\n                    E[w++] = y;\n                }\n                return E;\n            }\n            H.prototype = Wt(qe.prototype), H.prototype.constructor = H;\n            function dt(n) {\n                var t = -1, e = n == null ? 0 : n.length;\n                for(this.clear(); ++t < e;){\n                    var r = n[t];\n                    this.set(r[0], r[1]);\n                }\n            }\n            function Kf() {\n                this.__data__ = re ? re(null) : {}, this.size = 0;\n            }\n            function Yf(n) {\n                var t = this.has(n) && delete this.__data__[n];\n                return this.size -= t ? 1 : 0, t;\n            }\n            function Zf(n) {\n                var t = this.__data__;\n                if (re) {\n                    var e = t[n];\n                    return e === zt ? i : e;\n                }\n                return F.call(t, n) ? t[n] : i;\n            }\n            function Jf(n) {\n                var t = this.__data__;\n                return re ? t[n] !== i : F.call(t, n);\n            }\n            function Xf(n, t) {\n                var e = this.__data__;\n                return this.size += this.has(n) ? 0 : 1, e[n] = re && t === i ? zt : t, this;\n            }\n            dt.prototype.clear = Kf, dt.prototype.delete = Yf, dt.prototype.get = Zf, dt.prototype.has = Jf, dt.prototype.set = Xf;\n            function Bn(n) {\n                var t = -1, e = n == null ? 0 : n.length;\n                for(this.clear(); ++t < e;){\n                    var r = n[t];\n                    this.set(r[0], r[1]);\n                }\n            }\n            function Qf() {\n                this.__data__ = [], this.size = 0;\n            }\n            function Vf(n) {\n                var t = this.__data__, e = Be(t, n);\n                if (e < 0) return !1;\n                var r = t.length - 1;\n                return e == r ? t.pop() : Ne.call(t, e, 1), --this.size, !0;\n            }\n            function kf(n) {\n                var t = this.__data__, e = Be(t, n);\n                return e < 0 ? i : t[e][1];\n            }\n            function jf(n) {\n                return Be(this.__data__, n) > -1;\n            }\n            function nc(n, t) {\n                var e = this.__data__, r = Be(e, n);\n                return r < 0 ? (++this.size, e.push([\n                    n,\n                    t\n                ])) : e[r][1] = t, this;\n            }\n            Bn.prototype.clear = Qf, Bn.prototype.delete = Vf, Bn.prototype.get = kf, Bn.prototype.has = jf, Bn.prototype.set = nc;\n            function Gn(n) {\n                var t = -1, e = n == null ? 0 : n.length;\n                for(this.clear(); ++t < e;){\n                    var r = n[t];\n                    this.set(r[0], r[1]);\n                }\n            }\n            function tc() {\n                this.size = 0, this.__data__ = {\n                    hash: new dt,\n                    map: new (te || Bn),\n                    string: new dt\n                };\n            }\n            function ec(n) {\n                var t = nr(this, n).delete(n);\n                return this.size -= t ? 1 : 0, t;\n            }\n            function rc(n) {\n                return nr(this, n).get(n);\n            }\n            function ic(n) {\n                return nr(this, n).has(n);\n            }\n            function sc(n, t) {\n                var e = nr(this, n), r = e.size;\n                return e.set(n, t), this.size += e.size == r ? 0 : 1, this;\n            }\n            Gn.prototype.clear = tc, Gn.prototype.delete = ec, Gn.prototype.get = rc, Gn.prototype.has = ic, Gn.prototype.set = sc;\n            function gt(n) {\n                var t = -1, e = n == null ? 0 : n.length;\n                for(this.__data__ = new Gn; ++t < e;)this.add(n[t]);\n            }\n            function uc(n) {\n                return this.__data__.set(n, zt), this;\n            }\n            function ac(n) {\n                return this.__data__.has(n);\n            }\n            gt.prototype.add = gt.prototype.push = uc, gt.prototype.has = ac;\n            function Rn(n) {\n                var t = this.__data__ = new Bn(n);\n                this.size = t.size;\n            }\n            function oc() {\n                this.__data__ = new Bn, this.size = 0;\n            }\n            function fc(n) {\n                var t = this.__data__, e = t.delete(n);\n                return this.size = t.size, e;\n            }\n            function cc(n) {\n                return this.__data__.get(n);\n            }\n            function hc(n) {\n                return this.__data__.has(n);\n            }\n            function lc(n, t) {\n                var e = this.__data__;\n                if (e instanceof Bn) {\n                    var r = e.__data__;\n                    if (!te || r.length < P - 1) return r.push([\n                        n,\n                        t\n                    ]), this.size = ++e.size, this;\n                    e = this.__data__ = new Gn(r);\n                }\n                return e.set(n, t), this.size = e.size, this;\n            }\n            Rn.prototype.clear = oc, Rn.prototype.delete = fc, Rn.prototype.get = cc, Rn.prototype.has = hc, Rn.prototype.set = lc;\n            function Fs(n, t) {\n                var e = R(n), r = !e && Pt(n), s = !e && !r && at(n), o = !e && !r && !s && Bt(n), f = e || r || s || o, c = f ? Fr(n.length, Cf) : [], l = c.length;\n                for(var v in n)(t || F.call(n, v)) && !(f && (v == \"length\" || s && (v == \"offset\" || v == \"parent\") || o && (v == \"buffer\" || v == \"byteLength\" || v == \"byteOffset\") || Zn(v, l))) && c.push(v);\n                return c;\n            }\n            function Ms(n) {\n                var t = n.length;\n                return t ? n[ei(0, t - 1)] : i;\n            }\n            function pc(n, t) {\n                return tr(un(n), vt(t, 0, n.length));\n            }\n            function dc(n) {\n                return tr(un(n));\n            }\n            function Yr(n, t, e) {\n                (e !== i && !bn(n[t], e) || e === i && !(t in n)) && zn(n, t, e);\n            }\n            function se(n, t, e) {\n                var r = n[t];\n                (!(F.call(n, t) && bn(r, e)) || e === i && !(t in n)) && zn(n, t, e);\n            }\n            function Be(n, t) {\n                for(var e = n.length; e--;)if (bn(n[e][0], t)) return e;\n                return -1;\n            }\n            function gc(n, t, e, r) {\n                return rt(n, function(s, o, f) {\n                    t(r, s, e(s), f);\n                }), r;\n            }\n            function qs(n, t) {\n                return n && Un(t, V(t), n);\n            }\n            function vc(n, t) {\n                return n && Un(t, on(t), n);\n            }\n            function zn(n, t, e) {\n                t == \"__proto__\" && $e ? $e(n, t, {\n                    configurable: !0,\n                    enumerable: !0,\n                    value: e,\n                    writable: !0\n                }) : n[t] = e;\n            }\n            function Zr(n, t) {\n                for(var e = -1, r = t.length, s = p(r), o = n == null; ++e < r;)s[e] = o ? i : Si(n, t[e]);\n                return s;\n            }\n            function vt(n, t, e) {\n                return n === n && (e !== i && (n = n <= e ? n : e), t !== i && (n = n >= t ? n : t)), n;\n            }\n            function An(n, t, e, r, s, o) {\n                var f, c = t & Ln, l = t & Fn, v = t & xt;\n                if (e && (f = s ? e(n, r, s, o) : e(n)), f !== i) return f;\n                if (!K(n)) return n;\n                var _ = R(n);\n                if (_) {\n                    if (f = ih(n), !c) return un(n, f);\n                } else {\n                    var m = tn(n), w = m == Pe || m == Gi;\n                    if (at(n)) return hu(n, c);\n                    if (m == qn || m == Ot || w && !s) {\n                        if (f = l || w ? {} : bu(n), !c) return l ? Zc(n, vc(f, n)) : Yc(n, qs(f, n));\n                    } else {\n                        if (!q[m]) return s ? n : {};\n                        f = sh(n, m, c);\n                    }\n                }\n                o || (o = new Rn);\n                var I = o.get(n);\n                if (I) return I;\n                o.set(n, f), sa(n) ? n.forEach(function(y) {\n                    f.add(An(y, t, e, y, n, o));\n                }) : ra(n) && n.forEach(function(y, D) {\n                    f.set(D, An(y, t, e, D, n, o));\n                });\n                var E = v ? l ? pi : li : l ? on : V, T = _ ? i : E(n);\n                return mn(T || n, function(y, D) {\n                    T && (D = y, y = n[D]), se(f, D, An(y, t, e, D, n, o));\n                }), f;\n            }\n            function _c(n) {\n                var t = V(n);\n                return function(e) {\n                    return Bs(e, n, t);\n                };\n            }\n            function Bs(n, t, e) {\n                var r = e.length;\n                if (n == null) return !r;\n                for(n = M(n); r--;){\n                    var s = e[r], o = t[s], f = n[s];\n                    if (f === i && !(s in n) || !o(f)) return !1;\n                }\n                return !0;\n            }\n            function Gs(n, t, e) {\n                if (typeof n != \"function\") throw new wn($);\n                return le(function() {\n                    n.apply(i, e);\n                }, t);\n            }\n            function ue(n, t, e, r) {\n                var s = -1, o = Ee, f = !0, c = n.length, l = [], v = t.length;\n                if (!c) return l;\n                e && (t = G(t, hn(e))), r ? (o = Dr, f = !1) : t.length >= P && (o = jt, f = !1, t = new gt(t));\n                n: for(; ++s < c;){\n                    var _ = n[s], m = e == null ? _ : e(_);\n                    if (_ = r || _ !== 0 ? _ : 0, f && m === m) {\n                        for(var w = v; w--;)if (t[w] === m) continue n;\n                        l.push(_);\n                    } else o(t, m, r) || l.push(_);\n                }\n                return l;\n            }\n            var rt = vu($n), zs = vu(Xr, !0);\n            function mc(n, t) {\n                var e = !0;\n                return rt(n, function(r, s, o) {\n                    return e = !!t(r, s, o), e;\n                }), e;\n            }\n            function Ge(n, t, e) {\n                for(var r = -1, s = n.length; ++r < s;){\n                    var o = n[r], f = t(o);\n                    if (f != null && (c === i ? f === f && !pn(f) : e(f, c))) var c = f, l = o;\n                }\n                return l;\n            }\n            function wc(n, t, e, r) {\n                var s = n.length;\n                for(e = b(e), e < 0 && (e = -e > s ? 0 : s + e), r = r === i || r > s ? s : b(r), r < 0 && (r += s), r = e > r ? 0 : aa(r); e < r;)n[e++] = t;\n                return n;\n            }\n            function Ks(n, t) {\n                var e = [];\n                return rt(n, function(r, s, o) {\n                    t(r, s, o) && e.push(r);\n                }), e;\n            }\n            function j(n, t, e, r, s) {\n                var o = -1, f = n.length;\n                for(e || (e = ah), s || (s = []); ++o < f;){\n                    var c = n[o];\n                    t > 0 && e(c) ? t > 1 ? j(c, t - 1, e, r, s) : nt(s, c) : r || (s[s.length] = c);\n                }\n                return s;\n            }\n            var Jr = _u(), Ys = _u(!0);\n            function $n(n, t) {\n                return n && Jr(n, t, V);\n            }\n            function Xr(n, t) {\n                return n && Ys(n, t, V);\n            }\n            function ze(n, t) {\n                return jn(t, function(e) {\n                    return Jn(n[e]);\n                });\n            }\n            function _t(n, t) {\n                t = st(t, n);\n                for(var e = 0, r = t.length; n != null && e < r;)n = n[Wn(t[e++])];\n                return e && e == r ? n : i;\n            }\n            function Zs(n, t, e) {\n                var r = t(n);\n                return R(n) ? r : nt(r, e(n));\n            }\n            function en(n) {\n                return n == null ? n === i ? Ya : za : pt && pt in M(n) ? th(n) : dh(n);\n            }\n            function Qr(n, t) {\n                return n > t;\n            }\n            function Pc(n, t) {\n                return n != null && F.call(n, t);\n            }\n            function Ac(n, t) {\n                return n != null && t in M(n);\n            }\n            function Cc(n, t, e) {\n                return n >= nn(t, e) && n < Q(t, e);\n            }\n            function Vr(n, t, e) {\n                for(var r = e ? Dr : Ee, s = n[0].length, o = n.length, f = o, c = p(o), l = 1 / 0, v = []; f--;){\n                    var _ = n[f];\n                    f && t && (_ = G(_, hn(t))), l = nn(_.length, l), c[f] = !e && (t || s >= 120 && _.length >= 120) ? new gt(f && _) : i;\n                }\n                _ = n[0];\n                var m = -1, w = c[0];\n                n: for(; ++m < s && v.length < l;){\n                    var I = _[m], E = t ? t(I) : I;\n                    if (I = e || I !== 0 ? I : 0, !(w ? jt(w, E) : r(v, E, e))) {\n                        for(f = o; --f;){\n                            var T = c[f];\n                            if (!(T ? jt(T, E) : r(n[f], E, e))) continue n;\n                        }\n                        w && w.push(E), v.push(I);\n                    }\n                }\n                return v;\n            }\n            function Ic(n, t, e, r) {\n                return $n(n, function(s, o, f) {\n                    t(r, e(s), o, f);\n                }), r;\n            }\n            function ae(n, t, e) {\n                t = st(t, n), n = Hu(n, t);\n                var r = n == null ? n : n[Wn(In(t))];\n                return r == null ? i : cn(r, n, e);\n            }\n            function Js(n) {\n                return Y(n) && en(n) == Ot;\n            }\n            function xc(n) {\n                return Y(n) && en(n) == kt;\n            }\n            function Ec(n) {\n                return Y(n) && en(n) == Zt;\n            }\n            function oe(n, t, e, r, s) {\n                return n === t ? !0 : n == null || t == null || !Y(n) && !Y(t) ? n !== n && t !== t : yc(n, t, e, r, oe, s);\n            }\n            function yc(n, t, e, r, s, o) {\n                var f = R(n), c = R(t), l = f ? me : tn(n), v = c ? me : tn(t);\n                l = l == Ot ? qn : l, v = v == Ot ? qn : v;\n                var _ = l == qn, m = v == qn, w = l == v;\n                if (w && at(n)) {\n                    if (!at(t)) return !1;\n                    f = !0, _ = !1;\n                }\n                if (w && !_) return o || (o = new Rn), f || Bt(n) ? Su(n, t, e, r, s, o) : jc(n, t, l, e, r, s, o);\n                if (!(e & Et)) {\n                    var I = _ && F.call(n, \"__wrapped__\"), E = m && F.call(t, \"__wrapped__\");\n                    if (I || E) {\n                        var T = I ? n.value() : n, y = E ? t.value() : t;\n                        return o || (o = new Rn), s(T, y, e, r, o);\n                    }\n                }\n                return w ? (o || (o = new Rn), nh(n, t, e, r, s, o)) : !1;\n            }\n            function Sc(n) {\n                return Y(n) && tn(n) == yn;\n            }\n            function kr(n, t, e, r) {\n                var s = e.length, o = s, f = !r;\n                if (n == null) return !o;\n                for(n = M(n); s--;){\n                    var c = e[s];\n                    if (f && c[2] ? c[1] !== n[c[0]] : !(c[0] in n)) return !1;\n                }\n                for(; ++s < o;){\n                    c = e[s];\n                    var l = c[0], v = n[l], _ = c[1];\n                    if (f && c[2]) {\n                        if (v === i && !(l in n)) return !1;\n                    } else {\n                        var m = new Rn;\n                        if (r) var w = r(v, _, l, n, t, m);\n                        if (!(w === i ? oe(_, v, Et | ve, r, m) : w)) return !1;\n                    }\n                }\n                return !0;\n            }\n            function Xs(n) {\n                if (!K(n) || fh(n)) return !1;\n                var t = Jn(n) ? Sf : vo;\n                return t.test(wt(n));\n            }\n            function Oc(n) {\n                return Y(n) && en(n) == Xt;\n            }\n            function Rc(n) {\n                return Y(n) && tn(n) == Sn;\n            }\n            function bc(n) {\n                return Y(n) && ar(n.length) && !!B[en(n)];\n            }\n            function Qs(n) {\n                return typeof n == \"function\" ? n : n == null ? fn : typeof n == \"object\" ? R(n) ? js(n[0], n[1]) : ks(n) : ma(n);\n            }\n            function jr(n) {\n                if (!he(n)) return Df(n);\n                var t = [];\n                for(var e in M(n))F.call(n, e) && e != \"constructor\" && t.push(e);\n                return t;\n            }\n            function Tc(n) {\n                if (!K(n)) return ph(n);\n                var t = he(n), e = [];\n                for(var r in n)r == \"constructor\" && (t || !F.call(n, r)) || e.push(r);\n                return e;\n            }\n            function ni(n, t) {\n                return n < t;\n            }\n            function Vs(n, t) {\n                var e = -1, r = an(n) ? p(n.length) : [];\n                return rt(n, function(s, o, f) {\n                    r[++e] = t(s, o, f);\n                }), r;\n            }\n            function ks(n) {\n                var t = gi(n);\n                return t.length == 1 && t[0][2] ? Lu(t[0][0], t[0][1]) : function(e) {\n                    return e === n || kr(e, n, t);\n                };\n            }\n            function js(n, t) {\n                return _i(n) && Tu(t) ? Lu(Wn(n), t) : function(e) {\n                    var r = Si(e, n);\n                    return r === i && r === t ? Oi(e, n) : oe(t, r, Et | ve);\n                };\n            }\n            function Ke(n, t, e, r, s) {\n                n !== t && Jr(t, function(o, f) {\n                    if (s || (s = new Rn), K(o)) Lc(n, t, f, e, Ke, r, s);\n                    else {\n                        var c = r ? r(wi(n, f), o, f + \"\", n, t, s) : i;\n                        c === i && (c = o), Yr(n, f, c);\n                    }\n                }, on);\n            }\n            function Lc(n, t, e, r, s, o, f) {\n                var c = wi(n, e), l = wi(t, e), v = f.get(l);\n                if (v) {\n                    Yr(n, e, v);\n                    return;\n                }\n                var _ = o ? o(c, l, e + \"\", n, t, f) : i, m = _ === i;\n                if (m) {\n                    var w = R(l), I = !w && at(l), E = !w && !I && Bt(l);\n                    _ = l, w || I || E ? R(c) ? _ = c : Z(c) ? _ = un(c) : I ? (m = !1, _ = hu(l, !0)) : E ? (m = !1, _ = lu(l, !0)) : _ = [] : pe(l) || Pt(l) ? (_ = c, Pt(c) ? _ = oa(c) : (!K(c) || Jn(c)) && (_ = bu(l))) : m = !1;\n                }\n                m && (f.set(l, _), s(_, l, r, o, f), f.delete(l)), Yr(n, e, _);\n            }\n            function nu(n, t) {\n                var e = n.length;\n                if (e) return t += t < 0 ? e : 0, Zn(t, e) ? n[t] : i;\n            }\n            function tu(n, t, e) {\n                t.length ? t = G(t, function(o) {\n                    return R(o) ? function(f) {\n                        return _t(f, o.length === 1 ? o[0] : o);\n                    } : o;\n                }) : t = [\n                    fn\n                ];\n                var r = -1;\n                t = G(t, hn(x()));\n                var s = Vs(n, function(o, f, c) {\n                    var l = G(t, function(v) {\n                        return v(o);\n                    });\n                    return {\n                        criteria: l,\n                        index: ++r,\n                        value: o\n                    };\n                });\n                return sf(s, function(o, f) {\n                    return Kc(o, f, e);\n                });\n            }\n            function Dc(n, t) {\n                return eu(n, t, function(e, r) {\n                    return Oi(n, r);\n                });\n            }\n            function eu(n, t, e) {\n                for(var r = -1, s = t.length, o = {}; ++r < s;){\n                    var f = t[r], c = _t(n, f);\n                    e(c, f) && fe(o, st(f, n), c);\n                }\n                return o;\n            }\n            function Hc(n) {\n                return function(t) {\n                    return _t(t, n);\n                };\n            }\n            function ti(n, t, e, r) {\n                var s = r ? rf : Tt, o = -1, f = t.length, c = n;\n                for(n === t && (t = un(t)), e && (c = G(n, hn(e))); ++o < f;)for(var l = 0, v = t[o], _ = e ? e(v) : v; (l = s(c, _, l, r)) > -1;)c !== n && Ne.call(c, l, 1), Ne.call(n, l, 1);\n                return n;\n            }\n            function ru(n, t) {\n                for(var e = n ? t.length : 0, r = e - 1; e--;){\n                    var s = t[e];\n                    if (e == r || s !== o) {\n                        var o = s;\n                        Zn(s) ? Ne.call(n, s, 1) : si(n, s);\n                    }\n                }\n                return n;\n            }\n            function ei(n, t) {\n                return n + We(Us() * (t - n + 1));\n            }\n            function Nc(n, t, e, r) {\n                for(var s = -1, o = Q(Ue((t - n) / (e || 1)), 0), f = p(o); o--;)f[r ? o : ++s] = n, n += e;\n                return f;\n            }\n            function ri(n, t) {\n                var e = \"\";\n                if (!n || t < 1 || t > kn) return e;\n                do t % 2 && (e += n), t = We(t / 2), t && (n += n);\n                while (t);\n                return e;\n            }\n            function L(n, t) {\n                return Pi(Du(n, t, fn), n + \"\");\n            }\n            function $c(n) {\n                return Ms(Gt(n));\n            }\n            function Uc(n, t) {\n                var e = Gt(n);\n                return tr(e, vt(t, 0, e.length));\n            }\n            function fe(n, t, e, r) {\n                if (!K(n)) return n;\n                t = st(t, n);\n                for(var s = -1, o = t.length, f = o - 1, c = n; c != null && ++s < o;){\n                    var l = Wn(t[s]), v = e;\n                    if (l === \"__proto__\" || l === \"constructor\" || l === \"prototype\") return n;\n                    if (s != f) {\n                        var _ = c[l];\n                        v = r ? r(_, l, c) : i, v === i && (v = K(_) ? _ : Zn(t[s + 1]) ? [] : {});\n                    }\n                    se(c, l, v), c = c[l];\n                }\n                return n;\n            }\n            var iu = Fe ? function(n, t) {\n                return Fe.set(n, t), n;\n            } : fn, Wc = $e ? function(n, t) {\n                return $e(n, \"toString\", {\n                    configurable: !0,\n                    enumerable: !1,\n                    value: bi(t),\n                    writable: !0\n                });\n            } : fn;\n            function Fc(n) {\n                return tr(Gt(n));\n            }\n            function Cn(n, t, e) {\n                var r = -1, s = n.length;\n                t < 0 && (t = -t > s ? 0 : s + t), e = e > s ? s : e, e < 0 && (e += s), s = t > e ? 0 : e - t >>> 0, t >>>= 0;\n                for(var o = p(s); ++r < s;)o[r] = n[r + t];\n                return o;\n            }\n            function Mc(n, t) {\n                var e;\n                return rt(n, function(r, s, o) {\n                    return e = t(r, s, o), !e;\n                }), !!e;\n            }\n            function Ye(n, t, e) {\n                var r = 0, s = n == null ? r : n.length;\n                if (typeof t == \"number\" && t === t && s <= Ma) {\n                    for(; r < s;){\n                        var o = r + s >>> 1, f = n[o];\n                        f !== null && !pn(f) && (e ? f <= t : f < t) ? r = o + 1 : s = o;\n                    }\n                    return s;\n                }\n                return ii(n, t, fn, e);\n            }\n            function ii(n, t, e, r) {\n                var s = 0, o = n == null ? 0 : n.length;\n                if (o === 0) return 0;\n                t = e(t);\n                for(var f = t !== t, c = t === null, l = pn(t), v = t === i; s < o;){\n                    var _ = We((s + o) / 2), m = e(n[_]), w = m !== i, I = m === null, E = m === m, T = pn(m);\n                    if (f) var y = r || E;\n                    else v ? y = E && (r || w) : c ? y = E && w && (r || !I) : l ? y = E && w && !I && (r || !T) : I || T ? y = !1 : y = r ? m <= t : m < t;\n                    y ? s = _ + 1 : o = _;\n                }\n                return nn(o, Fa);\n            }\n            function su(n, t) {\n                for(var e = -1, r = n.length, s = 0, o = []; ++e < r;){\n                    var f = n[e], c = t ? t(f) : f;\n                    if (!e || !bn(c, l)) {\n                        var l = c;\n                        o[s++] = f === 0 ? 0 : f;\n                    }\n                }\n                return o;\n            }\n            function uu(n) {\n                return typeof n == \"number\" ? n : pn(n) ? _e : +n;\n            }\n            function ln(n) {\n                if (typeof n == \"string\") return n;\n                if (R(n)) return G(n, ln) + \"\";\n                if (pn(n)) return Ws ? Ws.call(n) : \"\";\n                var t = n + \"\";\n                return t == \"0\" && 1 / n == -ht ? \"-0\" : t;\n            }\n            function it(n, t, e) {\n                var r = -1, s = Ee, o = n.length, f = !0, c = [], l = c;\n                if (e) f = !1, s = Dr;\n                else if (o >= P) {\n                    var v = t ? null : Vc(n);\n                    if (v) return Se(v);\n                    f = !1, s = jt, l = new gt;\n                } else l = t ? [] : c;\n                n: for(; ++r < o;){\n                    var _ = n[r], m = t ? t(_) : _;\n                    if (_ = e || _ !== 0 ? _ : 0, f && m === m) {\n                        for(var w = l.length; w--;)if (l[w] === m) continue n;\n                        t && l.push(m), c.push(_);\n                    } else s(l, m, e) || (l !== c && l.push(m), c.push(_));\n                }\n                return c;\n            }\n            function si(n, t) {\n                return t = st(t, n), n = Hu(n, t), n == null || delete n[Wn(In(t))];\n            }\n            function au(n, t, e, r) {\n                return fe(n, t, e(_t(n, t)), r);\n            }\n            function Ze(n, t, e, r) {\n                for(var s = n.length, o = r ? s : -1; (r ? o-- : ++o < s) && t(n[o], o, n););\n                return e ? Cn(n, r ? 0 : o, r ? o + 1 : s) : Cn(n, r ? o + 1 : 0, r ? s : o);\n            }\n            function ou(n, t) {\n                var e = n;\n                return e instanceof H && (e = e.value()), Hr(t, function(r, s) {\n                    return s.func.apply(s.thisArg, nt([\n                        r\n                    ], s.args));\n                }, e);\n            }\n            function ui(n, t, e) {\n                var r = n.length;\n                if (r < 2) return r ? it(n[0]) : [];\n                for(var s = -1, o = p(r); ++s < r;)for(var f = n[s], c = -1; ++c < r;)c != s && (o[s] = ue(o[s] || f, n[c], t, e));\n                return it(j(o, 1), t, e);\n            }\n            function fu(n, t, e) {\n                for(var r = -1, s = n.length, o = t.length, f = {}; ++r < s;){\n                    var c = r < o ? t[r] : i;\n                    e(f, n[r], c);\n                }\n                return f;\n            }\n            function ai(n) {\n                return Z(n) ? n : [];\n            }\n            function oi(n) {\n                return typeof n == \"function\" ? n : fn;\n            }\n            function st(n, t) {\n                return R(n) ? n : _i(n, t) ? [\n                    n\n                ] : Wu(W(n));\n            }\n            var qc = L;\n            function ut(n, t, e) {\n                var r = n.length;\n                return e = e === i ? r : e, !t && e >= r ? n : Cn(n, t, e);\n            }\n            var cu = Of || function(n) {\n                return k.clearTimeout(n);\n            };\n            function hu(n, t) {\n                if (t) return n.slice();\n                var e = n.length, r = Ls ? Ls(e) : new n.constructor(e);\n                return n.copy(r), r;\n            }\n            function fi(n) {\n                var t = new n.constructor(n.byteLength);\n                return new De(t).set(new De(n)), t;\n            }\n            function Bc(n, t) {\n                var e = t ? fi(n.buffer) : n.buffer;\n                return new n.constructor(e, n.byteOffset, n.byteLength);\n            }\n            function Gc(n) {\n                var t = new n.constructor(n.source, Ji.exec(n));\n                return t.lastIndex = n.lastIndex, t;\n            }\n            function zc(n) {\n                return ie ? M(ie.call(n)) : {};\n            }\n            function lu(n, t) {\n                var e = t ? fi(n.buffer) : n.buffer;\n                return new n.constructor(e, n.byteOffset, n.length);\n            }\n            function pu(n, t) {\n                if (n !== t) {\n                    var e = n !== i, r = n === null, s = n === n, o = pn(n), f = t !== i, c = t === null, l = t === t, v = pn(t);\n                    if (!c && !v && !o && n > t || o && f && l && !c && !v || r && f && l || !e && l || !s) return 1;\n                    if (!r && !o && !v && n < t || v && e && s && !r && !o || c && e && s || !f && s || !l) return -1;\n                }\n                return 0;\n            }\n            function Kc(n, t, e) {\n                for(var r = -1, s = n.criteria, o = t.criteria, f = s.length, c = e.length; ++r < f;){\n                    var l = pu(s[r], o[r]);\n                    if (l) {\n                        if (r >= c) return l;\n                        var v = e[r];\n                        return l * (v == \"desc\" ? -1 : 1);\n                    }\n                }\n                return n.index - t.index;\n            }\n            function du(n, t, e, r) {\n                for(var s = -1, o = n.length, f = e.length, c = -1, l = t.length, v = Q(o - f, 0), _ = p(l + v), m = !r; ++c < l;)_[c] = t[c];\n                for(; ++s < f;)(m || s < o) && (_[e[s]] = n[s]);\n                for(; v--;)_[c++] = n[s++];\n                return _;\n            }\n            function gu(n, t, e, r) {\n                for(var s = -1, o = n.length, f = -1, c = e.length, l = -1, v = t.length, _ = Q(o - c, 0), m = p(_ + v), w = !r; ++s < _;)m[s] = n[s];\n                for(var I = s; ++l < v;)m[I + l] = t[l];\n                for(; ++f < c;)(w || s < o) && (m[I + e[f]] = n[s++]);\n                return m;\n            }\n            function un(n, t) {\n                var e = -1, r = n.length;\n                for(t || (t = p(r)); ++e < r;)t[e] = n[e];\n                return t;\n            }\n            function Un(n, t, e, r) {\n                var s = !e;\n                e || (e = {});\n                for(var o = -1, f = t.length; ++o < f;){\n                    var c = t[o], l = r ? r(e[c], n[c], c, e, n) : i;\n                    l === i && (l = n[c]), s ? zn(e, c, l) : se(e, c, l);\n                }\n                return e;\n            }\n            function Yc(n, t) {\n                return Un(n, vi(n), t);\n            }\n            function Zc(n, t) {\n                return Un(n, Ou(n), t);\n            }\n            function Je(n, t) {\n                return function(e, r) {\n                    var s = R(e) ? Vo : gc, o = t ? t() : {};\n                    return s(e, n, x(r, 2), o);\n                };\n            }\n            function Ft(n) {\n                return L(function(t, e) {\n                    var r = -1, s = e.length, o = s > 1 ? e[s - 1] : i, f = s > 2 ? e[2] : i;\n                    for(o = n.length > 3 && typeof o == \"function\" ? (s--, o) : i, f && rn(e[0], e[1], f) && (o = s < 3 ? i : o, s = 1), t = M(t); ++r < s;){\n                        var c = e[r];\n                        c && n(t, c, r, o);\n                    }\n                    return t;\n                });\n            }\n            function vu(n, t) {\n                return function(e, r) {\n                    if (e == null) return e;\n                    if (!an(e)) return n(e, r);\n                    for(var s = e.length, o = t ? s : -1, f = M(e); (t ? o-- : ++o < s) && r(f[o], o, f) !== !1;);\n                    return e;\n                };\n            }\n            function _u(n) {\n                return function(t, e, r) {\n                    for(var s = -1, o = M(t), f = r(t), c = f.length; c--;){\n                        var l = f[n ? c : ++s];\n                        if (e(o[l], l, o) === !1) break;\n                    }\n                    return t;\n                };\n            }\n            function Jc(n, t, e) {\n                var r = t & vn, s = ce(n);\n                function o() {\n                    var f = this && this !== k && this instanceof o ? s : n;\n                    return f.apply(r ? e : this, arguments);\n                }\n                return o;\n            }\n            function mu(n) {\n                return function(t) {\n                    t = W(t);\n                    var e = Lt(t) ? On(t) : i, r = e ? e[0] : t.charAt(0), s = e ? ut(e, 1).join(\"\") : t.slice(1);\n                    return r[n]() + s;\n                };\n            }\n            function Mt(n) {\n                return function(t) {\n                    return Hr(va(ga(t).replace(Uo, \"\")), n, \"\");\n                };\n            }\n            function ce(n) {\n                return function() {\n                    var t = arguments;\n                    switch(t.length){\n                        case 0:\n                            return new n;\n                        case 1:\n                            return new n(t[0]);\n                        case 2:\n                            return new n(t[0], t[1]);\n                        case 3:\n                            return new n(t[0], t[1], t[2]);\n                        case 4:\n                            return new n(t[0], t[1], t[2], t[3]);\n                        case 5:\n                            return new n(t[0], t[1], t[2], t[3], t[4]);\n                        case 6:\n                            return new n(t[0], t[1], t[2], t[3], t[4], t[5]);\n                        case 7:\n                            return new n(t[0], t[1], t[2], t[3], t[4], t[5], t[6]);\n                    }\n                    var e = Wt(n.prototype), r = n.apply(e, t);\n                    return K(r) ? r : e;\n                };\n            }\n            function Xc(n, t, e) {\n                var r = ce(n);\n                function s() {\n                    for(var o = arguments.length, f = p(o), c = o, l = qt(s); c--;)f[c] = arguments[c];\n                    var v = o < 3 && f[0] !== l && f[o - 1] !== l ? [] : tt(f, l);\n                    if (o -= v.length, o < e) return Iu(n, t, Xe, s.placeholder, i, f, v, i, i, e - o);\n                    var _ = this && this !== k && this instanceof s ? r : n;\n                    return cn(_, this, f);\n                }\n                return s;\n            }\n            function wu(n) {\n                return function(t, e, r) {\n                    var s = M(t);\n                    if (!an(t)) {\n                        var o = x(e, 3);\n                        t = V(t), e = function(c) {\n                            return o(s[c], c, s);\n                        };\n                    }\n                    var f = n(t, e, r);\n                    return f > -1 ? s[o ? t[f] : f] : i;\n                };\n            }\n            function Pu(n) {\n                return Yn(function(t) {\n                    var e = t.length, r = e, s = Pn.prototype.thru;\n                    for(n && t.reverse(); r--;){\n                        var o = t[r];\n                        if (typeof o != \"function\") throw new wn($);\n                        if (s && !f && je(o) == \"wrapper\") var f = new Pn([], !0);\n                    }\n                    for(r = f ? r : e; ++r < e;){\n                        o = t[r];\n                        var c = je(o), l = c == \"wrapper\" ? di(o) : i;\n                        l && mi(l[0]) && l[1] == (Mn | Dn | Hn | Kt) && !l[4].length && l[9] == 1 ? f = f[je(l[0])].apply(f, l[3]) : f = o.length == 1 && mi(o) ? f[c]() : f.thru(o);\n                    }\n                    return function() {\n                        var v = arguments, _ = v[0];\n                        if (f && v.length == 1 && R(_)) return f.plant(_).value();\n                        for(var m = 0, w = e ? t[m].apply(this, v) : _; ++m < e;)w = t[m].call(this, w);\n                        return w;\n                    };\n                });\n            }\n            function Xe(n, t, e, r, s, o, f, c, l, v) {\n                var _ = t & Mn, m = t & vn, w = t & ct, I = t & (Dn | yt), E = t & dr, T = w ? i : ce(n);\n                function y() {\n                    for(var D = arguments.length, N = p(D), dn = D; dn--;)N[dn] = arguments[dn];\n                    if (I) var sn = qt(y), gn = af(N, sn);\n                    if (r && (N = du(N, r, s, I)), o && (N = gu(N, o, f, I)), D -= gn, I && D < v) {\n                        var J = tt(N, sn);\n                        return Iu(n, t, Xe, y.placeholder, e, N, J, c, l, v - D);\n                    }\n                    var Tn = m ? e : this, Qn = w ? Tn[n] : n;\n                    return D = N.length, c ? N = gh(N, c) : E && D > 1 && N.reverse(), _ && l < D && (N.length = l), this && this !== k && this instanceof y && (Qn = T || ce(Qn)), Qn.apply(Tn, N);\n                }\n                return y;\n            }\n            function Au(n, t) {\n                return function(e, r) {\n                    return Ic(e, n, t(r), {});\n                };\n            }\n            function Qe(n, t) {\n                return function(e, r) {\n                    var s;\n                    if (e === i && r === i) return t;\n                    if (e !== i && (s = e), r !== i) {\n                        if (s === i) return r;\n                        typeof e == \"string\" || typeof r == \"string\" ? (e = ln(e), r = ln(r)) : (e = uu(e), r = uu(r)), s = n(e, r);\n                    }\n                    return s;\n                };\n            }\n            function ci(n) {\n                return Yn(function(t) {\n                    return t = G(t, hn(x())), L(function(e) {\n                        var r = this;\n                        return n(t, function(s) {\n                            return cn(s, r, e);\n                        });\n                    });\n                });\n            }\n            function Ve(n, t) {\n                t = t === i ? \" \" : ln(t);\n                var e = t.length;\n                if (e < 2) return e ? ri(t, n) : t;\n                var r = ri(t, Ue(n / Dt(t)));\n                return Lt(t) ? ut(On(r), 0, n).join(\"\") : r.slice(0, n);\n            }\n            function Qc(n, t, e, r) {\n                var s = t & vn, o = ce(n);\n                function f() {\n                    for(var c = -1, l = arguments.length, v = -1, _ = r.length, m = p(_ + l), w = this && this !== k && this instanceof f ? o : n; ++v < _;)m[v] = r[v];\n                    for(; l--;)m[v++] = arguments[++c];\n                    return cn(w, s ? e : this, m);\n                }\n                return f;\n            }\n            function Cu(n) {\n                return function(t, e, r) {\n                    return r && typeof r != \"number\" && rn(t, e, r) && (e = r = i), t = Xn(t), e === i ? (e = t, t = 0) : e = Xn(e), r = r === i ? t < e ? 1 : -1 : Xn(r), Nc(t, e, r, n);\n                };\n            }\n            function ke(n) {\n                return function(t, e) {\n                    return typeof t == \"string\" && typeof e == \"string\" || (t = xn(t), e = xn(e)), n(t, e);\n                };\n            }\n            function Iu(n, t, e, r, s, o, f, c, l, v) {\n                var _ = t & Dn, m = _ ? f : i, w = _ ? i : f, I = _ ? o : i, E = _ ? i : o;\n                t |= _ ? Hn : St, t &= ~(_ ? St : Hn), t & qi || (t &= ~(vn | ct));\n                var T = [\n                    n,\n                    t,\n                    s,\n                    I,\n                    m,\n                    E,\n                    w,\n                    c,\n                    l,\n                    v\n                ], y = e.apply(i, T);\n                return mi(n) && Nu(y, T), y.placeholder = r, $u(y, n, t);\n            }\n            function hi(n) {\n                var t = X[n];\n                return function(e, r) {\n                    if (e = xn(e), r = r == null ? 0 : nn(b(r), 292), r && $s(e)) {\n                        var s = (W(e) + \"e\").split(\"e\"), o = t(s[0] + \"e\" + (+s[1] + r));\n                        return s = (W(o) + \"e\").split(\"e\"), +(s[0] + \"e\" + (+s[1] - r));\n                    }\n                    return t(e);\n                };\n            }\n            var Vc = $t && 1 / Se(new $t([\n                ,\n                -0\n            ]))[1] == ht ? function(n) {\n                return new $t(n);\n            } : Di;\n            function xu(n) {\n                return function(t) {\n                    var e = tn(t);\n                    return e == yn ? qr(t) : e == Sn ? df(t) : uf(t, n(t));\n                };\n            }\n            function Kn(n, t, e, r, s, o, f, c) {\n                var l = t & ct;\n                if (!l && typeof n != \"function\") throw new wn($);\n                var v = r ? r.length : 0;\n                if (v || (t &= ~(Hn | St), r = s = i), f = f === i ? f : Q(b(f), 0), c = c === i ? c : b(c), v -= s ? s.length : 0, t & St) {\n                    var _ = r, m = s;\n                    r = s = i;\n                }\n                var w = l ? i : di(n), I = [\n                    n,\n                    t,\n                    e,\n                    r,\n                    s,\n                    _,\n                    m,\n                    o,\n                    f,\n                    c\n                ];\n                if (w && lh(I, w), n = I[0], t = I[1], e = I[2], r = I[3], s = I[4], c = I[9] = I[9] === i ? l ? 0 : n.length : Q(I[9] - v, 0), !c && t & (Dn | yt) && (t &= ~(Dn | yt)), !t || t == vn) var E = Jc(n, t, e);\n                else t == Dn || t == yt ? E = Xc(n, t, c) : (t == Hn || t == (vn | Hn)) && !s.length ? E = Qc(n, t, e, r) : E = Xe.apply(i, I);\n                var T = w ? iu : Nu;\n                return $u(T(E, I), n, t);\n            }\n            function Eu(n, t, e, r) {\n                return n === i || bn(n, Nt[e]) && !F.call(r, e) ? t : n;\n            }\n            function yu(n, t, e, r, s, o) {\n                return K(n) && K(t) && (o.set(t, n), Ke(n, t, i, yu, o), o.delete(t)), n;\n            }\n            function kc(n) {\n                return pe(n) ? i : n;\n            }\n            function Su(n, t, e, r, s, o) {\n                var f = e & Et, c = n.length, l = t.length;\n                if (c != l && !(f && l > c)) return !1;\n                var v = o.get(n), _ = o.get(t);\n                if (v && _) return v == t && _ == n;\n                var m = -1, w = !0, I = e & ve ? new gt : i;\n                for(o.set(n, t), o.set(t, n); ++m < c;){\n                    var E = n[m], T = t[m];\n                    if (r) var y = f ? r(T, E, m, t, n, o) : r(E, T, m, n, t, o);\n                    if (y !== i) {\n                        if (y) continue;\n                        w = !1;\n                        break;\n                    }\n                    if (I) {\n                        if (!Nr(t, function(D, N) {\n                            if (!jt(I, N) && (E === D || s(E, D, e, r, o))) return I.push(N);\n                        })) {\n                            w = !1;\n                            break;\n                        }\n                    } else if (!(E === T || s(E, T, e, r, o))) {\n                        w = !1;\n                        break;\n                    }\n                }\n                return o.delete(n), o.delete(t), w;\n            }\n            function jc(n, t, e, r, s, o, f) {\n                switch(e){\n                    case Rt:\n                        if (n.byteLength != t.byteLength || n.byteOffset != t.byteOffset) return !1;\n                        n = n.buffer, t = t.buffer;\n                    case kt:\n                        return !(n.byteLength != t.byteLength || !o(new De(n), new De(t)));\n                    case Yt:\n                    case Zt:\n                    case Jt:\n                        return bn(+n, +t);\n                    case we:\n                        return n.name == t.name && n.message == t.message;\n                    case Xt:\n                    case Qt:\n                        return n == t + \"\";\n                    case yn:\n                        var c = qr;\n                    case Sn:\n                        var l = r & Et;\n                        if (c || (c = Se), n.size != t.size && !l) return !1;\n                        var v = f.get(n);\n                        if (v) return v == t;\n                        r |= ve, f.set(n, t);\n                        var _ = Su(c(n), c(t), r, s, o, f);\n                        return f.delete(n), _;\n                    case Ae:\n                        if (ie) return ie.call(n) == ie.call(t);\n                }\n                return !1;\n            }\n            function nh(n, t, e, r, s, o) {\n                var f = e & Et, c = li(n), l = c.length, v = li(t), _ = v.length;\n                if (l != _ && !f) return !1;\n                for(var m = l; m--;){\n                    var w = c[m];\n                    if (!(f ? w in t : F.call(t, w))) return !1;\n                }\n                var I = o.get(n), E = o.get(t);\n                if (I && E) return I == t && E == n;\n                var T = !0;\n                o.set(n, t), o.set(t, n);\n                for(var y = f; ++m < l;){\n                    w = c[m];\n                    var D = n[w], N = t[w];\n                    if (r) var dn = f ? r(N, D, w, t, n, o) : r(D, N, w, n, t, o);\n                    if (!(dn === i ? D === N || s(D, N, e, r, o) : dn)) {\n                        T = !1;\n                        break;\n                    }\n                    y || (y = w == \"constructor\");\n                }\n                if (T && !y) {\n                    var sn = n.constructor, gn = t.constructor;\n                    sn != gn && \"constructor\" in n && \"constructor\" in t && !(typeof sn == \"function\" && sn instanceof sn && typeof gn == \"function\" && gn instanceof gn) && (T = !1);\n                }\n                return o.delete(n), o.delete(t), T;\n            }\n            function Yn(n) {\n                return Pi(Du(n, i, Bu), n + \"\");\n            }\n            function li(n) {\n                return Zs(n, V, vi);\n            }\n            function pi(n) {\n                return Zs(n, on, Ou);\n            }\n            var di = Fe ? function(n) {\n                return Fe.get(n);\n            } : Di;\n            function je(n) {\n                for(var t = n.name + \"\", e = Ut[t], r = F.call(Ut, t) ? e.length : 0; r--;){\n                    var s = e[r], o = s.func;\n                    if (o == null || o == n) return s.name;\n                }\n                return t;\n            }\n            function qt(n) {\n                var t = F.call(a, \"placeholder\") ? a : n;\n                return t.placeholder;\n            }\n            function x() {\n                var n = a.iteratee || Ti;\n                return n = n === Ti ? Qs : n, arguments.length ? n(arguments[0], arguments[1]) : n;\n            }\n            function nr(n, t) {\n                var e = n.__data__;\n                return oh(t) ? e[typeof t == \"string\" ? \"string\" : \"hash\"] : e.map;\n            }\n            function gi(n) {\n                for(var t = V(n), e = t.length; e--;){\n                    var r = t[e], s = n[r];\n                    t[e] = [\n                        r,\n                        s,\n                        Tu(s)\n                    ];\n                }\n                return t;\n            }\n            function mt(n, t) {\n                var e = hf(n, t);\n                return Xs(e) ? e : i;\n            }\n            function th(n) {\n                var t = F.call(n, pt), e = n[pt];\n                try {\n                    n[pt] = i;\n                    var r = !0;\n                } catch  {}\n                var s = Te.call(n);\n                return r && (t ? n[pt] = e : delete n[pt]), s;\n            }\n            var vi = Gr ? function(n) {\n                return n == null ? [] : (n = M(n), jn(Gr(n), function(t) {\n                    return Hs.call(n, t);\n                }));\n            } : Hi, Ou = Gr ? function(n) {\n                for(var t = []; n;)nt(t, vi(n)), n = He(n);\n                return t;\n            } : Hi, tn = en;\n            (zr && tn(new zr(new ArrayBuffer(1))) != Rt || te && tn(new te) != yn || Kr && tn(Kr.resolve()) != zi || $t && tn(new $t) != Sn || ee && tn(new ee) != Vt) && (tn = function(n) {\n                var t = en(n), e = t == qn ? n.constructor : i, r = e ? wt(e) : \"\";\n                if (r) switch(r){\n                    case Uf:\n                        return Rt;\n                    case Wf:\n                        return yn;\n                    case Ff:\n                        return zi;\n                    case Mf:\n                        return Sn;\n                    case qf:\n                        return Vt;\n                }\n                return t;\n            });\n            function eh(n, t, e) {\n                for(var r = -1, s = e.length; ++r < s;){\n                    var o = e[r], f = o.size;\n                    switch(o.type){\n                        case \"drop\":\n                            n += f;\n                            break;\n                        case \"dropRight\":\n                            t -= f;\n                            break;\n                        case \"take\":\n                            t = nn(t, n + f);\n                            break;\n                        case \"takeRight\":\n                            n = Q(n, t - f);\n                            break;\n                    }\n                }\n                return {\n                    start: n,\n                    end: t\n                };\n            }\n            function rh(n) {\n                var t = n.match(ao);\n                return t ? t[1].split(oo) : [];\n            }\n            function Ru(n, t, e) {\n                t = st(t, n);\n                for(var r = -1, s = t.length, o = !1; ++r < s;){\n                    var f = Wn(t[r]);\n                    if (!(o = n != null && e(n, f))) break;\n                    n = n[f];\n                }\n                return o || ++r != s ? o : (s = n == null ? 0 : n.length, !!s && ar(s) && Zn(f, s) && (R(n) || Pt(n)));\n            }\n            function ih(n) {\n                var t = n.length, e = new n.constructor(t);\n                return t && typeof n[0] == \"string\" && F.call(n, \"index\") && (e.index = n.index, e.input = n.input), e;\n            }\n            function bu(n) {\n                return typeof n.constructor == \"function\" && !he(n) ? Wt(He(n)) : {};\n            }\n            function sh(n, t, e) {\n                var r = n.constructor;\n                switch(t){\n                    case kt:\n                        return fi(n);\n                    case Yt:\n                    case Zt:\n                        return new r(+n);\n                    case Rt:\n                        return Bc(n, e);\n                    case gr:\n                    case vr:\n                    case _r:\n                    case mr:\n                    case wr:\n                    case Pr:\n                    case Ar:\n                    case Cr:\n                    case Ir:\n                        return lu(n, e);\n                    case yn:\n                        return new r;\n                    case Jt:\n                    case Qt:\n                        return new r(n);\n                    case Xt:\n                        return Gc(n);\n                    case Sn:\n                        return new r;\n                    case Ae:\n                        return zc(n);\n                }\n            }\n            function uh(n, t) {\n                var e = t.length;\n                if (!e) return n;\n                var r = e - 1;\n                return t[r] = (e > 1 ? \"& \" : \"\") + t[r], t = t.join(e > 2 ? \", \" : \" \"), n.replace(uo, `{\n/* [wrapped with ` + t + `] */\n`);\n            }\n            function ah(n) {\n                return R(n) || Pt(n) || !!(Ns && n && n[Ns]);\n            }\n            function Zn(n, t) {\n                var e = typeof n;\n                return t = t ?? kn, !!t && (e == \"number\" || e != \"symbol\" && mo.test(n)) && n > -1 && n % 1 == 0 && n < t;\n            }\n            function rn(n, t, e) {\n                if (!K(e)) return !1;\n                var r = typeof t;\n                return (r == \"number\" ? an(e) && Zn(t, e.length) : r == \"string\" && t in e) ? bn(e[t], n) : !1;\n            }\n            function _i(n, t) {\n                if (R(n)) return !1;\n                var e = typeof n;\n                return e == \"number\" || e == \"symbol\" || e == \"boolean\" || n == null || pn(n) ? !0 : eo.test(n) || !to.test(n) || t != null && n in M(t);\n            }\n            function oh(n) {\n                var t = typeof n;\n                return t == \"string\" || t == \"number\" || t == \"symbol\" || t == \"boolean\" ? n !== \"__proto__\" : n === null;\n            }\n            function mi(n) {\n                var t = je(n), e = a[t];\n                if (typeof e != \"function\" || !(t in H.prototype)) return !1;\n                if (n === e) return !0;\n                var r = di(e);\n                return !!r && n === r[0];\n            }\n            function fh(n) {\n                return !!Ts && Ts in n;\n            }\n            var ch = Re ? Jn : Ni;\n            function he(n) {\n                var t = n && n.constructor, e = typeof t == \"function\" && t.prototype || Nt;\n                return n === e;\n            }\n            function Tu(n) {\n                return n === n && !K(n);\n            }\n            function Lu(n, t) {\n                return function(e) {\n                    return e == null ? !1 : e[n] === t && (t !== i || n in M(e));\n                };\n            }\n            function hh(n) {\n                var t = sr(n, function(r) {\n                    return e.size === pr && e.clear(), r;\n                }), e = t.cache;\n                return t;\n            }\n            function lh(n, t) {\n                var e = n[1], r = t[1], s = e | r, o = s < (vn | ct | Mn), f = r == Mn && e == Dn || r == Mn && e == Kt && n[7].length <= t[8] || r == (Mn | Kt) && t[7].length <= t[8] && e == Dn;\n                if (!(o || f)) return n;\n                r & vn && (n[2] = t[2], s |= e & vn ? 0 : qi);\n                var c = t[3];\n                if (c) {\n                    var l = n[3];\n                    n[3] = l ? du(l, c, t[4]) : c, n[4] = l ? tt(n[3], It) : t[4];\n                }\n                return c = t[5], c && (l = n[5], n[5] = l ? gu(l, c, t[6]) : c, n[6] = l ? tt(n[5], It) : t[6]), c = t[7], c && (n[7] = c), r & Mn && (n[8] = n[8] == null ? t[8] : nn(n[8], t[8])), n[9] == null && (n[9] = t[9]), n[0] = t[0], n[1] = s, n;\n            }\n            function ph(n) {\n                var t = [];\n                if (n != null) for(var e in M(n))t.push(e);\n                return t;\n            }\n            function dh(n) {\n                return Te.call(n);\n            }\n            function Du(n, t, e) {\n                return t = Q(t === i ? n.length - 1 : t, 0), function() {\n                    for(var r = arguments, s = -1, o = Q(r.length - t, 0), f = p(o); ++s < o;)f[s] = r[t + s];\n                    s = -1;\n                    for(var c = p(t + 1); ++s < t;)c[s] = r[s];\n                    return c[t] = e(f), cn(n, this, c);\n                };\n            }\n            function Hu(n, t) {\n                return t.length < 2 ? n : _t(n, Cn(t, 0, -1));\n            }\n            function gh(n, t) {\n                for(var e = n.length, r = nn(t.length, e), s = un(n); r--;){\n                    var o = t[r];\n                    n[r] = Zn(o, e) ? s[o] : i;\n                }\n                return n;\n            }\n            function wi(n, t) {\n                if (!(t === \"constructor\" && typeof n[t] == \"function\") && t != \"__proto__\") return n[t];\n            }\n            var Nu = Uu(iu), le = bf || function(n, t) {\n                return k.setTimeout(n, t);\n            }, Pi = Uu(Wc);\n            function $u(n, t, e) {\n                var r = t + \"\";\n                return Pi(n, uh(r, vh(rh(r), e)));\n            }\n            function Uu(n) {\n                var t = 0, e = 0;\n                return function() {\n                    var r = Hf(), s = Na - (r - e);\n                    if (e = r, s > 0) {\n                        if (++t >= Ha) return arguments[0];\n                    } else t = 0;\n                    return n.apply(i, arguments);\n                };\n            }\n            function tr(n, t) {\n                var e = -1, r = n.length, s = r - 1;\n                for(t = t === i ? r : t; ++e < t;){\n                    var o = ei(e, s), f = n[o];\n                    n[o] = n[e], n[e] = f;\n                }\n                return n.length = t, n;\n            }\n            var Wu = hh(function(n) {\n                var t = [];\n                return n.charCodeAt(0) === 46 && t.push(\"\"), n.replace(ro, function(e, r, s, o) {\n                    t.push(s ? o.replace(ho, \"$1\") : r || e);\n                }), t;\n            });\n            function Wn(n) {\n                if (typeof n == \"string\" || pn(n)) return n;\n                var t = n + \"\";\n                return t == \"0\" && 1 / n == -ht ? \"-0\" : t;\n            }\n            function wt(n) {\n                if (n != null) {\n                    try {\n                        return be.call(n);\n                    } catch  {}\n                    try {\n                        return n + \"\";\n                    } catch  {}\n                }\n                return \"\";\n            }\n            function vh(n, t) {\n                return mn(qa, function(e) {\n                    var r = \"_.\" + e[0];\n                    t & e[1] && !Ee(n, r) && n.push(r);\n                }), n.sort();\n            }\n            function Fu(n) {\n                if (n instanceof H) return n.clone();\n                var t = new Pn(n.__wrapped__, n.__chain__);\n                return t.__actions__ = un(n.__actions__), t.__index__ = n.__index__, t.__values__ = n.__values__, t;\n            }\n            function _h(n, t, e) {\n                (e ? rn(n, t, e) : t === i) ? t = 1 : t = Q(b(t), 0);\n                var r = n == null ? 0 : n.length;\n                if (!r || t < 1) return [];\n                for(var s = 0, o = 0, f = p(Ue(r / t)); s < r;)f[o++] = Cn(n, s, s += t);\n                return f;\n            }\n            function mh(n) {\n                for(var t = -1, e = n == null ? 0 : n.length, r = 0, s = []; ++t < e;){\n                    var o = n[t];\n                    o && (s[r++] = o);\n                }\n                return s;\n            }\n            function wh() {\n                var n = arguments.length;\n                if (!n) return [];\n                for(var t = p(n - 1), e = arguments[0], r = n; r--;)t[r - 1] = arguments[r];\n                return nt(R(e) ? un(e) : [\n                    e\n                ], j(t, 1));\n            }\n            var Ph = L(function(n, t) {\n                return Z(n) ? ue(n, j(t, 1, Z, !0)) : [];\n            }), Ah = L(function(n, t) {\n                var e = In(t);\n                return Z(e) && (e = i), Z(n) ? ue(n, j(t, 1, Z, !0), x(e, 2)) : [];\n            }), Ch = L(function(n, t) {\n                var e = In(t);\n                return Z(e) && (e = i), Z(n) ? ue(n, j(t, 1, Z, !0), i, e) : [];\n            });\n            function Ih(n, t, e) {\n                var r = n == null ? 0 : n.length;\n                return r ? (t = e || t === i ? 1 : b(t), Cn(n, t < 0 ? 0 : t, r)) : [];\n            }\n            function xh(n, t, e) {\n                var r = n == null ? 0 : n.length;\n                return r ? (t = e || t === i ? 1 : b(t), t = r - t, Cn(n, 0, t < 0 ? 0 : t)) : [];\n            }\n            function Eh(n, t) {\n                return n && n.length ? Ze(n, x(t, 3), !0, !0) : [];\n            }\n            function yh(n, t) {\n                return n && n.length ? Ze(n, x(t, 3), !0) : [];\n            }\n            function Sh(n, t, e, r) {\n                var s = n == null ? 0 : n.length;\n                return s ? (e && typeof e != \"number\" && rn(n, t, e) && (e = 0, r = s), wc(n, t, e, r)) : [];\n            }\n            function Mu(n, t, e) {\n                var r = n == null ? 0 : n.length;\n                if (!r) return -1;\n                var s = e == null ? 0 : b(e);\n                return s < 0 && (s = Q(r + s, 0)), ye(n, x(t, 3), s);\n            }\n            function qu(n, t, e) {\n                var r = n == null ? 0 : n.length;\n                if (!r) return -1;\n                var s = r - 1;\n                return e !== i && (s = b(e), s = e < 0 ? Q(r + s, 0) : nn(s, r - 1)), ye(n, x(t, 3), s, !0);\n            }\n            function Bu(n) {\n                var t = n == null ? 0 : n.length;\n                return t ? j(n, 1) : [];\n            }\n            function Oh(n) {\n                var t = n == null ? 0 : n.length;\n                return t ? j(n, ht) : [];\n            }\n            function Rh(n, t) {\n                var e = n == null ? 0 : n.length;\n                return e ? (t = t === i ? 1 : b(t), j(n, t)) : [];\n            }\n            function bh(n) {\n                for(var t = -1, e = n == null ? 0 : n.length, r = {}; ++t < e;){\n                    var s = n[t];\n                    r[s[0]] = s[1];\n                }\n                return r;\n            }\n            function Gu(n) {\n                return n && n.length ? n[0] : i;\n            }\n            function Th(n, t, e) {\n                var r = n == null ? 0 : n.length;\n                if (!r) return -1;\n                var s = e == null ? 0 : b(e);\n                return s < 0 && (s = Q(r + s, 0)), Tt(n, t, s);\n            }\n            function Lh(n) {\n                var t = n == null ? 0 : n.length;\n                return t ? Cn(n, 0, -1) : [];\n            }\n            var Dh = L(function(n) {\n                var t = G(n, ai);\n                return t.length && t[0] === n[0] ? Vr(t) : [];\n            }), Hh = L(function(n) {\n                var t = In(n), e = G(n, ai);\n                return t === In(e) ? t = i : e.pop(), e.length && e[0] === n[0] ? Vr(e, x(t, 2)) : [];\n            }), Nh = L(function(n) {\n                var t = In(n), e = G(n, ai);\n                return t = typeof t == \"function\" ? t : i, t && e.pop(), e.length && e[0] === n[0] ? Vr(e, i, t) : [];\n            });\n            function $h(n, t) {\n                return n == null ? \"\" : Lf.call(n, t);\n            }\n            function In(n) {\n                var t = n == null ? 0 : n.length;\n                return t ? n[t - 1] : i;\n            }\n            function Uh(n, t, e) {\n                var r = n == null ? 0 : n.length;\n                if (!r) return -1;\n                var s = r;\n                return e !== i && (s = b(e), s = s < 0 ? Q(r + s, 0) : nn(s, r - 1)), t === t ? vf(n, t, s) : ye(n, Is, s, !0);\n            }\n            function Wh(n, t) {\n                return n && n.length ? nu(n, b(t)) : i;\n            }\n            var Fh = L(zu);\n            function zu(n, t) {\n                return n && n.length && t && t.length ? ti(n, t) : n;\n            }\n            function Mh(n, t, e) {\n                return n && n.length && t && t.length ? ti(n, t, x(e, 2)) : n;\n            }\n            function qh(n, t, e) {\n                return n && n.length && t && t.length ? ti(n, t, i, e) : n;\n            }\n            var Bh = Yn(function(n, t) {\n                var e = n == null ? 0 : n.length, r = Zr(n, t);\n                return ru(n, G(t, function(s) {\n                    return Zn(s, e) ? +s : s;\n                }).sort(pu)), r;\n            });\n            function Gh(n, t) {\n                var e = [];\n                if (!(n && n.length)) return e;\n                var r = -1, s = [], o = n.length;\n                for(t = x(t, 3); ++r < o;){\n                    var f = n[r];\n                    t(f, r, n) && (e.push(f), s.push(r));\n                }\n                return ru(n, s), e;\n            }\n            function Ai(n) {\n                return n == null ? n : $f.call(n);\n            }\n            function zh(n, t, e) {\n                var r = n == null ? 0 : n.length;\n                return r ? (e && typeof e != \"number\" && rn(n, t, e) ? (t = 0, e = r) : (t = t == null ? 0 : b(t), e = e === i ? r : b(e)), Cn(n, t, e)) : [];\n            }\n            function Kh(n, t) {\n                return Ye(n, t);\n            }\n            function Yh(n, t, e) {\n                return ii(n, t, x(e, 2));\n            }\n            function Zh(n, t) {\n                var e = n == null ? 0 : n.length;\n                if (e) {\n                    var r = Ye(n, t);\n                    if (r < e && bn(n[r], t)) return r;\n                }\n                return -1;\n            }\n            function Jh(n, t) {\n                return Ye(n, t, !0);\n            }\n            function Xh(n, t, e) {\n                return ii(n, t, x(e, 2), !0);\n            }\n            function Qh(n, t) {\n                var e = n == null ? 0 : n.length;\n                if (e) {\n                    var r = Ye(n, t, !0) - 1;\n                    if (bn(n[r], t)) return r;\n                }\n                return -1;\n            }\n            function Vh(n) {\n                return n && n.length ? su(n) : [];\n            }\n            function kh(n, t) {\n                return n && n.length ? su(n, x(t, 2)) : [];\n            }\n            function jh(n) {\n                var t = n == null ? 0 : n.length;\n                return t ? Cn(n, 1, t) : [];\n            }\n            function nl(n, t, e) {\n                return n && n.length ? (t = e || t === i ? 1 : b(t), Cn(n, 0, t < 0 ? 0 : t)) : [];\n            }\n            function tl(n, t, e) {\n                var r = n == null ? 0 : n.length;\n                return r ? (t = e || t === i ? 1 : b(t), t = r - t, Cn(n, t < 0 ? 0 : t, r)) : [];\n            }\n            function el(n, t) {\n                return n && n.length ? Ze(n, x(t, 3), !1, !0) : [];\n            }\n            function rl(n, t) {\n                return n && n.length ? Ze(n, x(t, 3)) : [];\n            }\n            var il = L(function(n) {\n                return it(j(n, 1, Z, !0));\n            }), sl = L(function(n) {\n                var t = In(n);\n                return Z(t) && (t = i), it(j(n, 1, Z, !0), x(t, 2));\n            }), ul = L(function(n) {\n                var t = In(n);\n                return t = typeof t == \"function\" ? t : i, it(j(n, 1, Z, !0), i, t);\n            });\n            function al(n) {\n                return n && n.length ? it(n) : [];\n            }\n            function ol(n, t) {\n                return n && n.length ? it(n, x(t, 2)) : [];\n            }\n            function fl(n, t) {\n                return t = typeof t == \"function\" ? t : i, n && n.length ? it(n, i, t) : [];\n            }\n            function Ci(n) {\n                if (!(n && n.length)) return [];\n                var t = 0;\n                return n = jn(n, function(e) {\n                    if (Z(e)) return t = Q(e.length, t), !0;\n                }), Fr(t, function(e) {\n                    return G(n, $r(e));\n                });\n            }\n            function Ku(n, t) {\n                if (!(n && n.length)) return [];\n                var e = Ci(n);\n                return t == null ? e : G(e, function(r) {\n                    return cn(t, i, r);\n                });\n            }\n            var cl = L(function(n, t) {\n                return Z(n) ? ue(n, t) : [];\n            }), hl = L(function(n) {\n                return ui(jn(n, Z));\n            }), ll = L(function(n) {\n                var t = In(n);\n                return Z(t) && (t = i), ui(jn(n, Z), x(t, 2));\n            }), pl = L(function(n) {\n                var t = In(n);\n                return t = typeof t == \"function\" ? t : i, ui(jn(n, Z), i, t);\n            }), dl = L(Ci);\n            function gl(n, t) {\n                return fu(n || [], t || [], se);\n            }\n            function vl(n, t) {\n                return fu(n || [], t || [], fe);\n            }\n            var _l = L(function(n) {\n                var t = n.length, e = t > 1 ? n[t - 1] : i;\n                return e = typeof e == \"function\" ? (n.pop(), e) : i, Ku(n, e);\n            });\n            function Yu(n) {\n                var t = a(n);\n                return t.__chain__ = !0, t;\n            }\n            function ml(n, t) {\n                return t(n), n;\n            }\n            function er(n, t) {\n                return t(n);\n            }\n            var wl = Yn(function(n) {\n                var t = n.length, e = t ? n[0] : 0, r = this.__wrapped__, s = function(o) {\n                    return Zr(o, n);\n                };\n                return t > 1 || this.__actions__.length || !(r instanceof H) || !Zn(e) ? this.thru(s) : (r = r.slice(e, +e + (t ? 1 : 0)), r.__actions__.push({\n                    func: er,\n                    args: [\n                        s\n                    ],\n                    thisArg: i\n                }), new Pn(r, this.__chain__).thru(function(o) {\n                    return t && !o.length && o.push(i), o;\n                }));\n            });\n            function Pl() {\n                return Yu(this);\n            }\n            function Al() {\n                return new Pn(this.value(), this.__chain__);\n            }\n            function Cl() {\n                this.__values__ === i && (this.__values__ = ua(this.value()));\n                var n = this.__index__ >= this.__values__.length, t = n ? i : this.__values__[this.__index__++];\n                return {\n                    done: n,\n                    value: t\n                };\n            }\n            function Il() {\n                return this;\n            }\n            function xl(n) {\n                for(var t, e = this; e instanceof qe;){\n                    var r = Fu(e);\n                    r.__index__ = 0, r.__values__ = i, t ? s.__wrapped__ = r : t = r;\n                    var s = r;\n                    e = e.__wrapped__;\n                }\n                return s.__wrapped__ = n, t;\n            }\n            function El() {\n                var n = this.__wrapped__;\n                if (n instanceof H) {\n                    var t = n;\n                    return this.__actions__.length && (t = new H(this)), t = t.reverse(), t.__actions__.push({\n                        func: er,\n                        args: [\n                            Ai\n                        ],\n                        thisArg: i\n                    }), new Pn(t, this.__chain__);\n                }\n                return this.thru(Ai);\n            }\n            function yl() {\n                return ou(this.__wrapped__, this.__actions__);\n            }\n            var Sl = Je(function(n, t, e) {\n                F.call(n, e) ? ++n[e] : zn(n, e, 1);\n            });\n            function Ol(n, t, e) {\n                var r = R(n) ? As : mc;\n                return e && rn(n, t, e) && (t = i), r(n, x(t, 3));\n            }\n            function Rl(n, t) {\n                var e = R(n) ? jn : Ks;\n                return e(n, x(t, 3));\n            }\n            var bl = wu(Mu), Tl = wu(qu);\n            function Ll(n, t) {\n                return j(rr(n, t), 1);\n            }\n            function Dl(n, t) {\n                return j(rr(n, t), ht);\n            }\n            function Hl(n, t, e) {\n                return e = e === i ? 1 : b(e), j(rr(n, t), e);\n            }\n            function Zu(n, t) {\n                var e = R(n) ? mn : rt;\n                return e(n, x(t, 3));\n            }\n            function Ju(n, t) {\n                var e = R(n) ? ko : zs;\n                return e(n, x(t, 3));\n            }\n            var Nl = Je(function(n, t, e) {\n                F.call(n, e) ? n[e].push(t) : zn(n, e, [\n                    t\n                ]);\n            });\n            function $l(n, t, e, r) {\n                n = an(n) ? n : Gt(n), e = e && !r ? b(e) : 0;\n                var s = n.length;\n                return e < 0 && (e = Q(s + e, 0)), or(n) ? e <= s && n.indexOf(t, e) > -1 : !!s && Tt(n, t, e) > -1;\n            }\n            var Ul = L(function(n, t, e) {\n                var r = -1, s = typeof t == \"function\", o = an(n) ? p(n.length) : [];\n                return rt(n, function(f) {\n                    o[++r] = s ? cn(t, f, e) : ae(f, t, e);\n                }), o;\n            }), Wl = Je(function(n, t, e) {\n                zn(n, e, t);\n            });\n            function rr(n, t) {\n                var e = R(n) ? G : Vs;\n                return e(n, x(t, 3));\n            }\n            function Fl(n, t, e, r) {\n                return n == null ? [] : (R(t) || (t = t == null ? [] : [\n                    t\n                ]), e = r ? i : e, R(e) || (e = e == null ? [] : [\n                    e\n                ]), tu(n, t, e));\n            }\n            var Ml = Je(function(n, t, e) {\n                n[e ? 0 : 1].push(t);\n            }, function() {\n                return [\n                    [],\n                    []\n                ];\n            });\n            function ql(n, t, e) {\n                var r = R(n) ? Hr : Es, s = arguments.length < 3;\n                return r(n, x(t, 4), e, s, rt);\n            }\n            function Bl(n, t, e) {\n                var r = R(n) ? jo : Es, s = arguments.length < 3;\n                return r(n, x(t, 4), e, s, zs);\n            }\n            function Gl(n, t) {\n                var e = R(n) ? jn : Ks;\n                return e(n, ur(x(t, 3)));\n            }\n            function zl(n) {\n                var t = R(n) ? Ms : $c;\n                return t(n);\n            }\n            function Kl(n, t, e) {\n                (e ? rn(n, t, e) : t === i) ? t = 1 : t = b(t);\n                var r = R(n) ? pc : Uc;\n                return r(n, t);\n            }\n            function Yl(n) {\n                var t = R(n) ? dc : Fc;\n                return t(n);\n            }\n            function Zl(n) {\n                if (n == null) return 0;\n                if (an(n)) return or(n) ? Dt(n) : n.length;\n                var t = tn(n);\n                return t == yn || t == Sn ? n.size : jr(n).length;\n            }\n            function Jl(n, t, e) {\n                var r = R(n) ? Nr : Mc;\n                return e && rn(n, t, e) && (t = i), r(n, x(t, 3));\n            }\n            var Xl = L(function(n, t) {\n                if (n == null) return [];\n                var e = t.length;\n                return e > 1 && rn(n, t[0], t[1]) ? t = [] : e > 2 && rn(t[0], t[1], t[2]) && (t = [\n                    t[0]\n                ]), tu(n, j(t, 1), []);\n            }), ir = Rf || function() {\n                return k.Date.now();\n            };\n            function Ql(n, t) {\n                if (typeof t != \"function\") throw new wn($);\n                return n = b(n), function() {\n                    if (--n < 1) return t.apply(this, arguments);\n                };\n            }\n            function Xu(n, t, e) {\n                return t = e ? i : t, t = n && t == null ? n.length : t, Kn(n, Mn, i, i, i, i, t);\n            }\n            function Qu(n, t) {\n                var e;\n                if (typeof t != \"function\") throw new wn($);\n                return n = b(n), function() {\n                    return --n > 0 && (e = t.apply(this, arguments)), n <= 1 && (t = i), e;\n                };\n            }\n            var Ii = L(function(n, t, e) {\n                var r = vn;\n                if (e.length) {\n                    var s = tt(e, qt(Ii));\n                    r |= Hn;\n                }\n                return Kn(n, r, t, e, s);\n            }), Vu = L(function(n, t, e) {\n                var r = vn | ct;\n                if (e.length) {\n                    var s = tt(e, qt(Vu));\n                    r |= Hn;\n                }\n                return Kn(t, r, n, e, s);\n            });\n            function ku(n, t, e) {\n                t = e ? i : t;\n                var r = Kn(n, Dn, i, i, i, i, i, t);\n                return r.placeholder = ku.placeholder, r;\n            }\n            function ju(n, t, e) {\n                t = e ? i : t;\n                var r = Kn(n, yt, i, i, i, i, i, t);\n                return r.placeholder = ju.placeholder, r;\n            }\n            function na(n, t, e) {\n                var r, s, o, f, c, l, v = 0, _ = !1, m = !1, w = !0;\n                if (typeof n != \"function\") throw new wn($);\n                t = xn(t) || 0, K(e) && (_ = !!e.leading, m = \"maxWait\" in e, o = m ? Q(xn(e.maxWait) || 0, t) : o, w = \"trailing\" in e ? !!e.trailing : w);\n                function I(J) {\n                    var Tn = r, Qn = s;\n                    return r = s = i, v = J, f = n.apply(Qn, Tn), f;\n                }\n                function E(J) {\n                    return v = J, c = le(D, t), _ ? I(J) : f;\n                }\n                function T(J) {\n                    var Tn = J - l, Qn = J - v, wa = t - Tn;\n                    return m ? nn(wa, o - Qn) : wa;\n                }\n                function y(J) {\n                    var Tn = J - l, Qn = J - v;\n                    return l === i || Tn >= t || Tn < 0 || m && Qn >= o;\n                }\n                function D() {\n                    var J = ir();\n                    if (y(J)) return N(J);\n                    c = le(D, T(J));\n                }\n                function N(J) {\n                    return c = i, w && r ? I(J) : (r = s = i, f);\n                }\n                function dn() {\n                    c !== i && cu(c), v = 0, r = l = s = c = i;\n                }\n                function sn() {\n                    return c === i ? f : N(ir());\n                }\n                function gn() {\n                    var J = ir(), Tn = y(J);\n                    if (r = arguments, s = this, l = J, Tn) {\n                        if (c === i) return E(l);\n                        if (m) return cu(c), c = le(D, t), I(l);\n                    }\n                    return c === i && (c = le(D, t)), f;\n                }\n                return gn.cancel = dn, gn.flush = sn, gn;\n            }\n            var Vl = L(function(n, t) {\n                return Gs(n, 1, t);\n            }), kl = L(function(n, t, e) {\n                return Gs(n, xn(t) || 0, e);\n            });\n            function jl(n) {\n                return Kn(n, dr);\n            }\n            function sr(n, t) {\n                if (typeof n != \"function\" || t != null && typeof t != \"function\") throw new wn($);\n                var e = function() {\n                    var r = arguments, s = t ? t.apply(this, r) : r[0], o = e.cache;\n                    if (o.has(s)) return o.get(s);\n                    var f = n.apply(this, r);\n                    return e.cache = o.set(s, f) || o, f;\n                };\n                return e.cache = new (sr.Cache || Gn), e;\n            }\n            sr.Cache = Gn;\n            function ur(n) {\n                if (typeof n != \"function\") throw new wn($);\n                return function() {\n                    var t = arguments;\n                    switch(t.length){\n                        case 0:\n                            return !n.call(this);\n                        case 1:\n                            return !n.call(this, t[0]);\n                        case 2:\n                            return !n.call(this, t[0], t[1]);\n                        case 3:\n                            return !n.call(this, t[0], t[1], t[2]);\n                    }\n                    return !n.apply(this, t);\n                };\n            }\n            function np(n) {\n                return Qu(2, n);\n            }\n            var tp = qc(function(n, t) {\n                t = t.length == 1 && R(t[0]) ? G(t[0], hn(x())) : G(j(t, 1), hn(x()));\n                var e = t.length;\n                return L(function(r) {\n                    for(var s = -1, o = nn(r.length, e); ++s < o;)r[s] = t[s].call(this, r[s]);\n                    return cn(n, this, r);\n                });\n            }), xi = L(function(n, t) {\n                var e = tt(t, qt(xi));\n                return Kn(n, Hn, i, t, e);\n            }), ta = L(function(n, t) {\n                var e = tt(t, qt(ta));\n                return Kn(n, St, i, t, e);\n            }), ep = Yn(function(n, t) {\n                return Kn(n, Kt, i, i, i, t);\n            });\n            function rp(n, t) {\n                if (typeof n != \"function\") throw new wn($);\n                return t = t === i ? t : b(t), L(n, t);\n            }\n            function ip(n, t) {\n                if (typeof n != \"function\") throw new wn($);\n                return t = t == null ? 0 : Q(b(t), 0), L(function(e) {\n                    var r = e[t], s = ut(e, 0, t);\n                    return r && nt(s, r), cn(n, this, s);\n                });\n            }\n            function sp(n, t, e) {\n                var r = !0, s = !0;\n                if (typeof n != \"function\") throw new wn($);\n                return K(e) && (r = \"leading\" in e ? !!e.leading : r, s = \"trailing\" in e ? !!e.trailing : s), na(n, t, {\n                    leading: r,\n                    maxWait: t,\n                    trailing: s\n                });\n            }\n            function up(n) {\n                return Xu(n, 1);\n            }\n            function ap(n, t) {\n                return xi(oi(t), n);\n            }\n            function op() {\n                if (!arguments.length) return [];\n                var n = arguments[0];\n                return R(n) ? n : [\n                    n\n                ];\n            }\n            function fp(n) {\n                return An(n, xt);\n            }\n            function cp(n, t) {\n                return t = typeof t == \"function\" ? t : i, An(n, xt, t);\n            }\n            function hp(n) {\n                return An(n, Ln | xt);\n            }\n            function lp(n, t) {\n                return t = typeof t == \"function\" ? t : i, An(n, Ln | xt, t);\n            }\n            function pp(n, t) {\n                return t == null || Bs(n, t, V(t));\n            }\n            function bn(n, t) {\n                return n === t || n !== n && t !== t;\n            }\n            var dp = ke(Qr), gp = ke(function(n, t) {\n                return n >= t;\n            }), Pt = Js(function() {\n                return arguments;\n            }()) ? Js : function(n) {\n                return Y(n) && F.call(n, \"callee\") && !Hs.call(n, \"callee\");\n            }, R = p.isArray, vp = gs ? hn(gs) : xc;\n            function an(n) {\n                return n != null && ar(n.length) && !Jn(n);\n            }\n            function Z(n) {\n                return Y(n) && an(n);\n            }\n            function _p(n) {\n                return n === !0 || n === !1 || Y(n) && en(n) == Yt;\n            }\n            var at = Tf || Ni, mp = vs ? hn(vs) : Ec;\n            function wp(n) {\n                return Y(n) && n.nodeType === 1 && !pe(n);\n            }\n            function Pp(n) {\n                if (n == null) return !0;\n                if (an(n) && (R(n) || typeof n == \"string\" || typeof n.splice == \"function\" || at(n) || Bt(n) || Pt(n))) return !n.length;\n                var t = tn(n);\n                if (t == yn || t == Sn) return !n.size;\n                if (he(n)) return !jr(n).length;\n                for(var e in n)if (F.call(n, e)) return !1;\n                return !0;\n            }\n            function Ap(n, t) {\n                return oe(n, t);\n            }\n            function Cp(n, t, e) {\n                e = typeof e == \"function\" ? e : i;\n                var r = e ? e(n, t) : i;\n                return r === i ? oe(n, t, i, e) : !!r;\n            }\n            function Ei(n) {\n                if (!Y(n)) return !1;\n                var t = en(n);\n                return t == we || t == Ga || typeof n.message == \"string\" && typeof n.name == \"string\" && !pe(n);\n            }\n            function Ip(n) {\n                return typeof n == \"number\" && $s(n);\n            }\n            function Jn(n) {\n                if (!K(n)) return !1;\n                var t = en(n);\n                return t == Pe || t == Gi || t == Ba || t == Ka;\n            }\n            function ea(n) {\n                return typeof n == \"number\" && n == b(n);\n            }\n            function ar(n) {\n                return typeof n == \"number\" && n > -1 && n % 1 == 0 && n <= kn;\n            }\n            function K(n) {\n                var t = typeof n;\n                return n != null && (t == \"object\" || t == \"function\");\n            }\n            function Y(n) {\n                return n != null && typeof n == \"object\";\n            }\n            var ra = _s ? hn(_s) : Sc;\n            function xp(n, t) {\n                return n === t || kr(n, t, gi(t));\n            }\n            function Ep(n, t, e) {\n                return e = typeof e == \"function\" ? e : i, kr(n, t, gi(t), e);\n            }\n            function yp(n) {\n                return ia(n) && n != +n;\n            }\n            function Sp(n) {\n                if (ch(n)) throw new S(O);\n                return Xs(n);\n            }\n            function Op(n) {\n                return n === null;\n            }\n            function Rp(n) {\n                return n == null;\n            }\n            function ia(n) {\n                return typeof n == \"number\" || Y(n) && en(n) == Jt;\n            }\n            function pe(n) {\n                if (!Y(n) || en(n) != qn) return !1;\n                var t = He(n);\n                if (t === null) return !0;\n                var e = F.call(t, \"constructor\") && t.constructor;\n                return typeof e == \"function\" && e instanceof e && be.call(e) == Ef;\n            }\n            var yi = ms ? hn(ms) : Oc;\n            function bp(n) {\n                return ea(n) && n >= -kn && n <= kn;\n            }\n            var sa = ws ? hn(ws) : Rc;\n            function or(n) {\n                return typeof n == \"string\" || !R(n) && Y(n) && en(n) == Qt;\n            }\n            function pn(n) {\n                return typeof n == \"symbol\" || Y(n) && en(n) == Ae;\n            }\n            var Bt = Ps ? hn(Ps) : bc;\n            function Tp(n) {\n                return n === i;\n            }\n            function Lp(n) {\n                return Y(n) && tn(n) == Vt;\n            }\n            function Dp(n) {\n                return Y(n) && en(n) == Za;\n            }\n            var Hp = ke(ni), Np = ke(function(n, t) {\n                return n <= t;\n            });\n            function ua(n) {\n                if (!n) return [];\n                if (an(n)) return or(n) ? On(n) : un(n);\n                if (ne && n[ne]) return pf(n[ne]());\n                var t = tn(n), e = t == yn ? qr : t == Sn ? Se : Gt;\n                return e(n);\n            }\n            function Xn(n) {\n                if (!n) return n === 0 ? n : 0;\n                if (n = xn(n), n === ht || n === -ht) {\n                    var t = n < 0 ? -1 : 1;\n                    return t * Wa;\n                }\n                return n === n ? n : 0;\n            }\n            function b(n) {\n                var t = Xn(n), e = t % 1;\n                return t === t ? e ? t - e : t : 0;\n            }\n            function aa(n) {\n                return n ? vt(b(n), 0, Nn) : 0;\n            }\n            function xn(n) {\n                if (typeof n == \"number\") return n;\n                if (pn(n)) return _e;\n                if (K(n)) {\n                    var t = typeof n.valueOf == \"function\" ? n.valueOf() : n;\n                    n = K(t) ? t + \"\" : t;\n                }\n                if (typeof n != \"string\") return n === 0 ? n : +n;\n                n = ys(n);\n                var e = go.test(n);\n                return e || _o.test(n) ? Xo(n.slice(2), e ? 2 : 8) : po.test(n) ? _e : +n;\n            }\n            function oa(n) {\n                return Un(n, on(n));\n            }\n            function $p(n) {\n                return n ? vt(b(n), -kn, kn) : n === 0 ? n : 0;\n            }\n            function W(n) {\n                return n == null ? \"\" : ln(n);\n            }\n            var Up = Ft(function(n, t) {\n                if (he(t) || an(t)) {\n                    Un(t, V(t), n);\n                    return;\n                }\n                for(var e in t)F.call(t, e) && se(n, e, t[e]);\n            }), fa = Ft(function(n, t) {\n                Un(t, on(t), n);\n            }), fr = Ft(function(n, t, e, r) {\n                Un(t, on(t), n, r);\n            }), Wp = Ft(function(n, t, e, r) {\n                Un(t, V(t), n, r);\n            }), Fp = Yn(Zr);\n            function Mp(n, t) {\n                var e = Wt(n);\n                return t == null ? e : qs(e, t);\n            }\n            var qp = L(function(n, t) {\n                n = M(n);\n                var e = -1, r = t.length, s = r > 2 ? t[2] : i;\n                for(s && rn(t[0], t[1], s) && (r = 1); ++e < r;)for(var o = t[e], f = on(o), c = -1, l = f.length; ++c < l;){\n                    var v = f[c], _ = n[v];\n                    (_ === i || bn(_, Nt[v]) && !F.call(n, v)) && (n[v] = o[v]);\n                }\n                return n;\n            }), Bp = L(function(n) {\n                return n.push(i, yu), cn(ca, i, n);\n            });\n            function Gp(n, t) {\n                return Cs(n, x(t, 3), $n);\n            }\n            function zp(n, t) {\n                return Cs(n, x(t, 3), Xr);\n            }\n            function Kp(n, t) {\n                return n == null ? n : Jr(n, x(t, 3), on);\n            }\n            function Yp(n, t) {\n                return n == null ? n : Ys(n, x(t, 3), on);\n            }\n            function Zp(n, t) {\n                return n && $n(n, x(t, 3));\n            }\n            function Jp(n, t) {\n                return n && Xr(n, x(t, 3));\n            }\n            function Xp(n) {\n                return n == null ? [] : ze(n, V(n));\n            }\n            function Qp(n) {\n                return n == null ? [] : ze(n, on(n));\n            }\n            function Si(n, t, e) {\n                var r = n == null ? i : _t(n, t);\n                return r === i ? e : r;\n            }\n            function Vp(n, t) {\n                return n != null && Ru(n, t, Pc);\n            }\n            function Oi(n, t) {\n                return n != null && Ru(n, t, Ac);\n            }\n            var kp = Au(function(n, t, e) {\n                t != null && typeof t.toString != \"function\" && (t = Te.call(t)), n[t] = e;\n            }, bi(fn)), jp = Au(function(n, t, e) {\n                t != null && typeof t.toString != \"function\" && (t = Te.call(t)), F.call(n, t) ? n[t].push(e) : n[t] = [\n                    e\n                ];\n            }, x), nd = L(ae);\n            function V(n) {\n                return an(n) ? Fs(n) : jr(n);\n            }\n            function on(n) {\n                return an(n) ? Fs(n, !0) : Tc(n);\n            }\n            function td(n, t) {\n                var e = {};\n                return t = x(t, 3), $n(n, function(r, s, o) {\n                    zn(e, t(r, s, o), r);\n                }), e;\n            }\n            function ed(n, t) {\n                var e = {};\n                return t = x(t, 3), $n(n, function(r, s, o) {\n                    zn(e, s, t(r, s, o));\n                }), e;\n            }\n            var rd = Ft(function(n, t, e) {\n                Ke(n, t, e);\n            }), ca = Ft(function(n, t, e, r) {\n                Ke(n, t, e, r);\n            }), id = Yn(function(n, t) {\n                var e = {};\n                if (n == null) return e;\n                var r = !1;\n                t = G(t, function(o) {\n                    return o = st(o, n), r || (r = o.length > 1), o;\n                }), Un(n, pi(n), e), r && (e = An(e, Ln | Fn | xt, kc));\n                for(var s = t.length; s--;)si(e, t[s]);\n                return e;\n            });\n            function sd(n, t) {\n                return ha(n, ur(x(t)));\n            }\n            var ud = Yn(function(n, t) {\n                return n == null ? {} : Dc(n, t);\n            });\n            function ha(n, t) {\n                if (n == null) return {};\n                var e = G(pi(n), function(r) {\n                    return [\n                        r\n                    ];\n                });\n                return t = x(t), eu(n, e, function(r, s) {\n                    return t(r, s[0]);\n                });\n            }\n            function ad(n, t, e) {\n                t = st(t, n);\n                var r = -1, s = t.length;\n                for(s || (s = 1, n = i); ++r < s;){\n                    var o = n == null ? i : n[Wn(t[r])];\n                    o === i && (r = s, o = e), n = Jn(o) ? o.call(n) : o;\n                }\n                return n;\n            }\n            function od(n, t, e) {\n                return n == null ? n : fe(n, t, e);\n            }\n            function fd(n, t, e, r) {\n                return r = typeof r == \"function\" ? r : i, n == null ? n : fe(n, t, e, r);\n            }\n            var la = xu(V), pa = xu(on);\n            function cd(n, t, e) {\n                var r = R(n), s = r || at(n) || Bt(n);\n                if (t = x(t, 4), e == null) {\n                    var o = n && n.constructor;\n                    s ? e = r ? new o : [] : K(n) ? e = Jn(o) ? Wt(He(n)) : {} : e = {};\n                }\n                return (s ? mn : $n)(n, function(f, c, l) {\n                    return t(e, f, c, l);\n                }), e;\n            }\n            function hd(n, t) {\n                return n == null ? !0 : si(n, t);\n            }\n            function ld(n, t, e) {\n                return n == null ? n : au(n, t, oi(e));\n            }\n            function pd(n, t, e, r) {\n                return r = typeof r == \"function\" ? r : i, n == null ? n : au(n, t, oi(e), r);\n            }\n            function Gt(n) {\n                return n == null ? [] : Mr(n, V(n));\n            }\n            function dd(n) {\n                return n == null ? [] : Mr(n, on(n));\n            }\n            function gd(n, t, e) {\n                return e === i && (e = t, t = i), e !== i && (e = xn(e), e = e === e ? e : 0), t !== i && (t = xn(t), t = t === t ? t : 0), vt(xn(n), t, e);\n            }\n            function vd(n, t, e) {\n                return t = Xn(t), e === i ? (e = t, t = 0) : e = Xn(e), n = xn(n), Cc(n, t, e);\n            }\n            function _d(n, t, e) {\n                if (e && typeof e != \"boolean\" && rn(n, t, e) && (t = e = i), e === i && (typeof t == \"boolean\" ? (e = t, t = i) : typeof n == \"boolean\" && (e = n, n = i)), n === i && t === i ? (n = 0, t = 1) : (n = Xn(n), t === i ? (t = n, n = 0) : t = Xn(t)), n > t) {\n                    var r = n;\n                    n = t, t = r;\n                }\n                if (e || n % 1 || t % 1) {\n                    var s = Us();\n                    return nn(n + s * (t - n + Jo(\"1e-\" + ((s + \"\").length - 1))), t);\n                }\n                return ei(n, t);\n            }\n            var md = Mt(function(n, t, e) {\n                return t = t.toLowerCase(), n + (e ? da(t) : t);\n            });\n            function da(n) {\n                return Ri(W(n).toLowerCase());\n            }\n            function ga(n) {\n                return n = W(n), n && n.replace(wo, of).replace(Wo, \"\");\n            }\n            function wd(n, t, e) {\n                n = W(n), t = ln(t);\n                var r = n.length;\n                e = e === i ? r : vt(b(e), 0, r);\n                var s = e;\n                return e -= t.length, e >= 0 && n.slice(e, s) == t;\n            }\n            function Pd(n) {\n                return n = W(n), n && ka.test(n) ? n.replace(Yi, ff) : n;\n            }\n            function Ad(n) {\n                return n = W(n), n && io.test(n) ? n.replace(xr, \"\\\\$&\") : n;\n            }\n            var Cd = Mt(function(n, t, e) {\n                return n + (e ? \"-\" : \"\") + t.toLowerCase();\n            }), Id = Mt(function(n, t, e) {\n                return n + (e ? \" \" : \"\") + t.toLowerCase();\n            }), xd = mu(\"toLowerCase\");\n            function Ed(n, t, e) {\n                n = W(n), t = b(t);\n                var r = t ? Dt(n) : 0;\n                if (!t || r >= t) return n;\n                var s = (t - r) / 2;\n                return Ve(We(s), e) + n + Ve(Ue(s), e);\n            }\n            function yd(n, t, e) {\n                n = W(n), t = b(t);\n                var r = t ? Dt(n) : 0;\n                return t && r < t ? n + Ve(t - r, e) : n;\n            }\n            function Sd(n, t, e) {\n                n = W(n), t = b(t);\n                var r = t ? Dt(n) : 0;\n                return t && r < t ? Ve(t - r, e) + n : n;\n            }\n            function Od(n, t, e) {\n                return e || t == null ? t = 0 : t && (t = +t), Nf(W(n).replace(Er, \"\"), t || 0);\n            }\n            function Rd(n, t, e) {\n                return (e ? rn(n, t, e) : t === i) ? t = 1 : t = b(t), ri(W(n), t);\n            }\n            function bd() {\n                var n = arguments, t = W(n[0]);\n                return n.length < 3 ? t : t.replace(n[1], n[2]);\n            }\n            var Td = Mt(function(n, t, e) {\n                return n + (e ? \"_\" : \"\") + t.toLowerCase();\n            });\n            function Ld(n, t, e) {\n                return e && typeof e != \"number\" && rn(n, t, e) && (t = e = i), e = e === i ? Nn : e >>> 0, e ? (n = W(n), n && (typeof t == \"string\" || t != null && !yi(t)) && (t = ln(t), !t && Lt(n)) ? ut(On(n), 0, e) : n.split(t, e)) : [];\n            }\n            var Dd = Mt(function(n, t, e) {\n                return n + (e ? \" \" : \"\") + Ri(t);\n            });\n            function Hd(n, t, e) {\n                return n = W(n), e = e == null ? 0 : vt(b(e), 0, n.length), t = ln(t), n.slice(e, e + t.length) == t;\n            }\n            function Nd(n, t, e) {\n                var r = a.templateSettings;\n                e && rn(n, t, e) && (t = i), n = W(n), t = fr({}, t, r, Eu);\n                var s = fr({}, t.imports, r.imports, Eu), o = V(s), f = Mr(s, o), c, l, v = 0, _ = t.interpolate || Ce, m = \"__p += '\", w = Br((t.escape || Ce).source + \"|\" + _.source + \"|\" + (_ === Zi ? lo : Ce).source + \"|\" + (t.evaluate || Ce).source + \"|$\", \"g\"), I = \"//# sourceURL=\" + (F.call(t, \"sourceURL\") ? (t.sourceURL + \"\").replace(/\\s/g, \" \") : \"lodash.templateSources[\" + ++Go + \"]\") + `\n`;\n                n.replace(w, function(y, D, N, dn, sn, gn) {\n                    return N || (N = dn), m += n.slice(v, gn).replace(Po, cf), D && (c = !0, m += `' +\n__e(` + D + `) +\n'`), sn && (l = !0, m += `';\n` + sn + `;\n__p += '`), N && (m += `' +\n((__t = (` + N + `)) == null ? '' : __t) +\n'`), v = gn + y.length, y;\n                }), m += `';\n`;\n                var E = F.call(t, \"variable\") && t.variable;\n                if (!E) m = `with (obj) {\n` + m + `\n}\n`;\n                else if (co.test(E)) throw new S(En);\n                m = (l ? m.replace(Ja, \"\") : m).replace(Xa, \"$1\").replace(Qa, \"$1;\"), m = \"function(\" + (E || \"obj\") + `) {\n` + (E ? \"\" : `obj || (obj = {});\n`) + \"var __t, __p = ''\" + (c ? \", __e = _.escape\" : \"\") + (l ? `, __j = Array.prototype.join;\nfunction print() { __p += __j.call(arguments, '') }\n` : `;\n`) + m + `return __p\n}`;\n                var T = _a(function() {\n                    return U(o, I + \"return \" + m).apply(i, f);\n                });\n                if (T.source = m, Ei(T)) throw T;\n                return T;\n            }\n            function $d(n) {\n                return W(n).toLowerCase();\n            }\n            function Ud(n) {\n                return W(n).toUpperCase();\n            }\n            function Wd(n, t, e) {\n                if (n = W(n), n && (e || t === i)) return ys(n);\n                if (!n || !(t = ln(t))) return n;\n                var r = On(n), s = On(t), o = Ss(r, s), f = Os(r, s) + 1;\n                return ut(r, o, f).join(\"\");\n            }\n            function Fd(n, t, e) {\n                if (n = W(n), n && (e || t === i)) return n.slice(0, bs(n) + 1);\n                if (!n || !(t = ln(t))) return n;\n                var r = On(n), s = Os(r, On(t)) + 1;\n                return ut(r, 0, s).join(\"\");\n            }\n            function Md(n, t, e) {\n                if (n = W(n), n && (e || t === i)) return n.replace(Er, \"\");\n                if (!n || !(t = ln(t))) return n;\n                var r = On(n), s = Ss(r, On(t));\n                return ut(r, s).join(\"\");\n            }\n            function qd(n, t) {\n                var e = La, r = Da;\n                if (K(t)) {\n                    var s = \"separator\" in t ? t.separator : s;\n                    e = \"length\" in t ? b(t.length) : e, r = \"omission\" in t ? ln(t.omission) : r;\n                }\n                n = W(n);\n                var o = n.length;\n                if (Lt(n)) {\n                    var f = On(n);\n                    o = f.length;\n                }\n                if (e >= o) return n;\n                var c = e - Dt(r);\n                if (c < 1) return r;\n                var l = f ? ut(f, 0, c).join(\"\") : n.slice(0, c);\n                if (s === i) return l + r;\n                if (f && (c += l.length - c), yi(s)) {\n                    if (n.slice(c).search(s)) {\n                        var v, _ = l;\n                        for(s.global || (s = Br(s.source, W(Ji.exec(s)) + \"g\")), s.lastIndex = 0; v = s.exec(_);)var m = v.index;\n                        l = l.slice(0, m === i ? c : m);\n                    }\n                } else if (n.indexOf(ln(s), c) != c) {\n                    var w = l.lastIndexOf(s);\n                    w > -1 && (l = l.slice(0, w));\n                }\n                return l + r;\n            }\n            function Bd(n) {\n                return n = W(n), n && Va.test(n) ? n.replace(Ki, _f) : n;\n            }\n            var Gd = Mt(function(n, t, e) {\n                return n + (e ? \" \" : \"\") + t.toUpperCase();\n            }), Ri = mu(\"toUpperCase\");\n            function va(n, t, e) {\n                return n = W(n), t = e ? i : t, t === i ? lf(n) ? Pf(n) : ef(n) : n.match(t) || [];\n            }\n            var _a = L(function(n, t) {\n                try {\n                    return cn(n, i, t);\n                } catch (e) {\n                    return Ei(e) ? e : new S(e);\n                }\n            }), zd = Yn(function(n, t) {\n                return mn(t, function(e) {\n                    e = Wn(e), zn(n, e, Ii(n[e], n));\n                }), n;\n            });\n            function Kd(n) {\n                var t = n == null ? 0 : n.length, e = x();\n                return n = t ? G(n, function(r) {\n                    if (typeof r[1] != \"function\") throw new wn($);\n                    return [\n                        e(r[0]),\n                        r[1]\n                    ];\n                }) : [], L(function(r) {\n                    for(var s = -1; ++s < t;){\n                        var o = n[s];\n                        if (cn(o[0], this, r)) return cn(o[1], this, r);\n                    }\n                });\n            }\n            function Yd(n) {\n                return _c(An(n, Ln));\n            }\n            function bi(n) {\n                return function() {\n                    return n;\n                };\n            }\n            function Zd(n, t) {\n                return n == null || n !== n ? t : n;\n            }\n            var Jd = Pu(), Xd = Pu(!0);\n            function fn(n) {\n                return n;\n            }\n            function Ti(n) {\n                return Qs(typeof n == \"function\" ? n : An(n, Ln));\n            }\n            function Qd(n) {\n                return ks(An(n, Ln));\n            }\n            function Vd(n, t) {\n                return js(n, An(t, Ln));\n            }\n            var kd = L(function(n, t) {\n                return function(e) {\n                    return ae(e, n, t);\n                };\n            }), jd = L(function(n, t) {\n                return function(e) {\n                    return ae(n, e, t);\n                };\n            });\n            function Li(n, t, e) {\n                var r = V(t), s = ze(t, r);\n                e == null && !(K(t) && (s.length || !r.length)) && (e = t, t = n, n = this, s = ze(t, V(t)));\n                var o = !(K(e) && \"chain\" in e) || !!e.chain, f = Jn(n);\n                return mn(s, function(c) {\n                    var l = t[c];\n                    n[c] = l, f && (n.prototype[c] = function() {\n                        var v = this.__chain__;\n                        if (o || v) {\n                            var _ = n(this.__wrapped__), m = _.__actions__ = un(this.__actions__);\n                            return m.push({\n                                func: l,\n                                args: arguments,\n                                thisArg: n\n                            }), _.__chain__ = v, _;\n                        }\n                        return l.apply(n, nt([\n                            this.value()\n                        ], arguments));\n                    });\n                }), n;\n            }\n            function ng() {\n                return k._ === this && (k._ = yf), this;\n            }\n            function Di() {}\n            function tg(n) {\n                return n = b(n), L(function(t) {\n                    return nu(t, n);\n                });\n            }\n            var eg = ci(G), rg = ci(As), ig = ci(Nr);\n            function ma(n) {\n                return _i(n) ? $r(Wn(n)) : Hc(n);\n            }\n            function sg(n) {\n                return function(t) {\n                    return n == null ? i : _t(n, t);\n                };\n            }\n            var ug = Cu(), ag = Cu(!0);\n            function Hi() {\n                return [];\n            }\n            function Ni() {\n                return !1;\n            }\n            function og() {\n                return {};\n            }\n            function fg() {\n                return \"\";\n            }\n            function cg() {\n                return !0;\n            }\n            function hg(n, t) {\n                if (n = b(n), n < 1 || n > kn) return [];\n                var e = Nn, r = nn(n, Nn);\n                t = x(t), n -= Nn;\n                for(var s = Fr(r, t); ++e < n;)t(e);\n                return s;\n            }\n            function lg(n) {\n                return R(n) ? G(n, Wn) : pn(n) ? [\n                    n\n                ] : un(Wu(W(n)));\n            }\n            function pg(n) {\n                var t = ++xf;\n                return W(n) + t;\n            }\n            var dg = Qe(function(n, t) {\n                return n + t;\n            }, 0), gg = hi(\"ceil\"), vg = Qe(function(n, t) {\n                return n / t;\n            }, 1), _g = hi(\"floor\");\n            function mg(n) {\n                return n && n.length ? Ge(n, fn, Qr) : i;\n            }\n            function wg(n, t) {\n                return n && n.length ? Ge(n, x(t, 2), Qr) : i;\n            }\n            function Pg(n) {\n                return xs(n, fn);\n            }\n            function Ag(n, t) {\n                return xs(n, x(t, 2));\n            }\n            function Cg(n) {\n                return n && n.length ? Ge(n, fn, ni) : i;\n            }\n            function Ig(n, t) {\n                return n && n.length ? Ge(n, x(t, 2), ni) : i;\n            }\n            var xg = Qe(function(n, t) {\n                return n * t;\n            }, 1), Eg = hi(\"round\"), yg = Qe(function(n, t) {\n                return n - t;\n            }, 0);\n            function Sg(n) {\n                return n && n.length ? Wr(n, fn) : 0;\n            }\n            function Og(n, t) {\n                return n && n.length ? Wr(n, x(t, 2)) : 0;\n            }\n            return a.after = Ql, a.ary = Xu, a.assign = Up, a.assignIn = fa, a.assignInWith = fr, a.assignWith = Wp, a.at = Fp, a.before = Qu, a.bind = Ii, a.bindAll = zd, a.bindKey = Vu, a.castArray = op, a.chain = Yu, a.chunk = _h, a.compact = mh, a.concat = wh, a.cond = Kd, a.conforms = Yd, a.constant = bi, a.countBy = Sl, a.create = Mp, a.curry = ku, a.curryRight = ju, a.debounce = na, a.defaults = qp, a.defaultsDeep = Bp, a.defer = Vl, a.delay = kl, a.difference = Ph, a.differenceBy = Ah, a.differenceWith = Ch, a.drop = Ih, a.dropRight = xh, a.dropRightWhile = Eh, a.dropWhile = yh, a.fill = Sh, a.filter = Rl, a.flatMap = Ll, a.flatMapDeep = Dl, a.flatMapDepth = Hl, a.flatten = Bu, a.flattenDeep = Oh, a.flattenDepth = Rh, a.flip = jl, a.flow = Jd, a.flowRight = Xd, a.fromPairs = bh, a.functions = Xp, a.functionsIn = Qp, a.groupBy = Nl, a.initial = Lh, a.intersection = Dh, a.intersectionBy = Hh, a.intersectionWith = Nh, a.invert = kp, a.invertBy = jp, a.invokeMap = Ul, a.iteratee = Ti, a.keyBy = Wl, a.keys = V, a.keysIn = on, a.map = rr, a.mapKeys = td, a.mapValues = ed, a.matches = Qd, a.matchesProperty = Vd, a.memoize = sr, a.merge = rd, a.mergeWith = ca, a.method = kd, a.methodOf = jd, a.mixin = Li, a.negate = ur, a.nthArg = tg, a.omit = id, a.omitBy = sd, a.once = np, a.orderBy = Fl, a.over = eg, a.overArgs = tp, a.overEvery = rg, a.overSome = ig, a.partial = xi, a.partialRight = ta, a.partition = Ml, a.pick = ud, a.pickBy = ha, a.property = ma, a.propertyOf = sg, a.pull = Fh, a.pullAll = zu, a.pullAllBy = Mh, a.pullAllWith = qh, a.pullAt = Bh, a.range = ug, a.rangeRight = ag, a.rearg = ep, a.reject = Gl, a.remove = Gh, a.rest = rp, a.reverse = Ai, a.sampleSize = Kl, a.set = od, a.setWith = fd, a.shuffle = Yl, a.slice = zh, a.sortBy = Xl, a.sortedUniq = Vh, a.sortedUniqBy = kh, a.split = Ld, a.spread = ip, a.tail = jh, a.take = nl, a.takeRight = tl, a.takeRightWhile = el, a.takeWhile = rl, a.tap = ml, a.throttle = sp, a.thru = er, a.toArray = ua, a.toPairs = la, a.toPairsIn = pa, a.toPath = lg, a.toPlainObject = oa, a.transform = cd, a.unary = up, a.union = il, a.unionBy = sl, a.unionWith = ul, a.uniq = al, a.uniqBy = ol, a.uniqWith = fl, a.unset = hd, a.unzip = Ci, a.unzipWith = Ku, a.update = ld, a.updateWith = pd, a.values = Gt, a.valuesIn = dd, a.without = cl, a.words = va, a.wrap = ap, a.xor = hl, a.xorBy = ll, a.xorWith = pl, a.zip = dl, a.zipObject = gl, a.zipObjectDeep = vl, a.zipWith = _l, a.entries = la, a.entriesIn = pa, a.extend = fa, a.extendWith = fr, Li(a, a), a.add = dg, a.attempt = _a, a.camelCase = md, a.capitalize = da, a.ceil = gg, a.clamp = gd, a.clone = fp, a.cloneDeep = hp, a.cloneDeepWith = lp, a.cloneWith = cp, a.conformsTo = pp, a.deburr = ga, a.defaultTo = Zd, a.divide = vg, a.endsWith = wd, a.eq = bn, a.escape = Pd, a.escapeRegExp = Ad, a.every = Ol, a.find = bl, a.findIndex = Mu, a.findKey = Gp, a.findLast = Tl, a.findLastIndex = qu, a.findLastKey = zp, a.floor = _g, a.forEach = Zu, a.forEachRight = Ju, a.forIn = Kp, a.forInRight = Yp, a.forOwn = Zp, a.forOwnRight = Jp, a.get = Si, a.gt = dp, a.gte = gp, a.has = Vp, a.hasIn = Oi, a.head = Gu, a.identity = fn, a.includes = $l, a.indexOf = Th, a.inRange = vd, a.invoke = nd, a.isArguments = Pt, a.isArray = R, a.isArrayBuffer = vp, a.isArrayLike = an, a.isArrayLikeObject = Z, a.isBoolean = _p, a.isBuffer = at, a.isDate = mp, a.isElement = wp, a.isEmpty = Pp, a.isEqual = Ap, a.isEqualWith = Cp, a.isError = Ei, a.isFinite = Ip, a.isFunction = Jn, a.isInteger = ea, a.isLength = ar, a.isMap = ra, a.isMatch = xp, a.isMatchWith = Ep, a.isNaN = yp, a.isNative = Sp, a.isNil = Rp, a.isNull = Op, a.isNumber = ia, a.isObject = K, a.isObjectLike = Y, a.isPlainObject = pe, a.isRegExp = yi, a.isSafeInteger = bp, a.isSet = sa, a.isString = or, a.isSymbol = pn, a.isTypedArray = Bt, a.isUndefined = Tp, a.isWeakMap = Lp, a.isWeakSet = Dp, a.join = $h, a.kebabCase = Cd, a.last = In, a.lastIndexOf = Uh, a.lowerCase = Id, a.lowerFirst = xd, a.lt = Hp, a.lte = Np, a.max = mg, a.maxBy = wg, a.mean = Pg, a.meanBy = Ag, a.min = Cg, a.minBy = Ig, a.stubArray = Hi, a.stubFalse = Ni, a.stubObject = og, a.stubString = fg, a.stubTrue = cg, a.multiply = xg, a.nth = Wh, a.noConflict = ng, a.noop = Di, a.now = ir, a.pad = Ed, a.padEnd = yd, a.padStart = Sd, a.parseInt = Od, a.random = _d, a.reduce = ql, a.reduceRight = Bl, a.repeat = Rd, a.replace = bd, a.result = ad, a.round = Eg, a.runInContext = h, a.sample = zl, a.size = Zl, a.snakeCase = Td, a.some = Jl, a.sortedIndex = Kh, a.sortedIndexBy = Yh, a.sortedIndexOf = Zh, a.sortedLastIndex = Jh, a.sortedLastIndexBy = Xh, a.sortedLastIndexOf = Qh, a.startCase = Dd, a.startsWith = Hd, a.subtract = yg, a.sum = Sg, a.sumBy = Og, a.template = Nd, a.times = hg, a.toFinite = Xn, a.toInteger = b, a.toLength = aa, a.toLower = $d, a.toNumber = xn, a.toSafeInteger = $p, a.toString = W, a.toUpper = Ud, a.trim = Wd, a.trimEnd = Fd, a.trimStart = Md, a.truncate = qd, a.unescape = Bd, a.uniqueId = pg, a.upperCase = Gd, a.upperFirst = Ri, a.each = Zu, a.eachRight = Ju, a.first = Gu, Li(a, function() {\n                var n = {};\n                return $n(a, function(t, e) {\n                    F.call(a.prototype, e) || (n[e] = t);\n                }), n;\n            }(), {\n                chain: !1\n            }), a.VERSION = d, mn([\n                \"bind\",\n                \"bindKey\",\n                \"curry\",\n                \"curryRight\",\n                \"partial\",\n                \"partialRight\"\n            ], function(n) {\n                a[n].placeholder = a;\n            }), mn([\n                \"drop\",\n                \"take\"\n            ], function(n, t) {\n                H.prototype[n] = function(e) {\n                    e = e === i ? 1 : Q(b(e), 0);\n                    var r = this.__filtered__ && !t ? new H(this) : this.clone();\n                    return r.__filtered__ ? r.__takeCount__ = nn(e, r.__takeCount__) : r.__views__.push({\n                        size: nn(e, Nn),\n                        type: n + (r.__dir__ < 0 ? \"Right\" : \"\")\n                    }), r;\n                }, H.prototype[n + \"Right\"] = function(e) {\n                    return this.reverse()[n](e).reverse();\n                };\n            }), mn([\n                \"filter\",\n                \"map\",\n                \"takeWhile\"\n            ], function(n, t) {\n                var e = t + 1, r = e == Bi || e == Ua;\n                H.prototype[n] = function(s) {\n                    var o = this.clone();\n                    return o.__iteratees__.push({\n                        iteratee: x(s, 3),\n                        type: e\n                    }), o.__filtered__ = o.__filtered__ || r, o;\n                };\n            }), mn([\n                \"head\",\n                \"last\"\n            ], function(n, t) {\n                var e = \"take\" + (t ? \"Right\" : \"\");\n                H.prototype[n] = function() {\n                    return this[e](1).value()[0];\n                };\n            }), mn([\n                \"initial\",\n                \"tail\"\n            ], function(n, t) {\n                var e = \"drop\" + (t ? \"\" : \"Right\");\n                H.prototype[n] = function() {\n                    return this.__filtered__ ? new H(this) : this[e](1);\n                };\n            }), H.prototype.compact = function() {\n                return this.filter(fn);\n            }, H.prototype.find = function(n) {\n                return this.filter(n).head();\n            }, H.prototype.findLast = function(n) {\n                return this.reverse().find(n);\n            }, H.prototype.invokeMap = L(function(n, t) {\n                return typeof n == \"function\" ? new H(this) : this.map(function(e) {\n                    return ae(e, n, t);\n                });\n            }), H.prototype.reject = function(n) {\n                return this.filter(ur(x(n)));\n            }, H.prototype.slice = function(n, t) {\n                n = b(n);\n                var e = this;\n                return e.__filtered__ && (n > 0 || t < 0) ? new H(e) : (n < 0 ? e = e.takeRight(-n) : n && (e = e.drop(n)), t !== i && (t = b(t), e = t < 0 ? e.dropRight(-t) : e.take(t - n)), e);\n            }, H.prototype.takeRightWhile = function(n) {\n                return this.reverse().takeWhile(n).reverse();\n            }, H.prototype.toArray = function() {\n                return this.take(Nn);\n            }, $n(H.prototype, function(n, t) {\n                var e = /^(?:filter|find|map|reject)|While$/.test(t), r = /^(?:head|last)$/.test(t), s = a[r ? \"take\" + (t == \"last\" ? \"Right\" : \"\") : t], o = r || /^find/.test(t);\n                s && (a.prototype[t] = function() {\n                    var f = this.__wrapped__, c = r ? [\n                        1\n                    ] : arguments, l = f instanceof H, v = c[0], _ = l || R(f), m = function(D) {\n                        var N = s.apply(a, nt([\n                            D\n                        ], c));\n                        return r && w ? N[0] : N;\n                    };\n                    _ && e && typeof v == \"function\" && v.length != 1 && (l = _ = !1);\n                    var w = this.__chain__, I = !!this.__actions__.length, E = o && !w, T = l && !I;\n                    if (!o && _) {\n                        f = T ? f : new H(this);\n                        var y = n.apply(f, c);\n                        return y.__actions__.push({\n                            func: er,\n                            args: [\n                                m\n                            ],\n                            thisArg: i\n                        }), new Pn(y, w);\n                    }\n                    return E && T ? n.apply(this, c) : (y = this.thru(m), E ? r ? y.value()[0] : y.value() : y);\n                });\n            }), mn([\n                \"pop\",\n                \"push\",\n                \"shift\",\n                \"sort\",\n                \"splice\",\n                \"unshift\"\n            ], function(n) {\n                var t = Oe[n], e = /^(?:push|sort|unshift)$/.test(n) ? \"tap\" : \"thru\", r = /^(?:pop|shift)$/.test(n);\n                a.prototype[n] = function() {\n                    var s = arguments;\n                    if (r && !this.__chain__) {\n                        var o = this.value();\n                        return t.apply(R(o) ? o : [], s);\n                    }\n                    return this[e](function(f) {\n                        return t.apply(R(f) ? f : [], s);\n                    });\n                };\n            }), $n(H.prototype, function(n, t) {\n                var e = a[t];\n                if (e) {\n                    var r = e.name + \"\";\n                    F.call(Ut, r) || (Ut[r] = []), Ut[r].push({\n                        name: t,\n                        func: e\n                    });\n                }\n            }), Ut[Xe(i, ct).name] = [\n                {\n                    name: \"wrapper\",\n                    func: i\n                }\n            ], H.prototype.clone = Bf, H.prototype.reverse = Gf, H.prototype.value = zf, a.prototype.at = wl, a.prototype.chain = Pl, a.prototype.commit = Al, a.prototype.next = Cl, a.prototype.plant = xl, a.prototype.reverse = El, a.prototype.toJSON = a.prototype.valueOf = a.prototype.value = yl, a.prototype.first = a.prototype.head, ne && (a.prototype[ne] = Il), a;\n        }, Ht = Af();\n        lt ? ((lt.exports = Ht)._ = Ht, Tr._ = Ht) : k._ = Ht;\n    }).call(ge);\n})(Ui, Ui.exports);\nvar Bg = Object.defineProperty, Gg = Object.defineProperties, zg = Object.getOwnPropertyDescriptors, Ea = Object.getOwnPropertySymbols, Kg = Object.prototype.hasOwnProperty, Yg = Object.prototype.propertyIsEnumerable, ya = (C, u, i)=>u in C ? Bg(C, u, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: i\n    }) : C[u] = i, cr = (C, u)=>{\n    for(var i in u || (u = {}))Kg.call(u, i) && ya(C, i, u[i]);\n    if (Ea) for (var i of Ea(u))Yg.call(u, i) && ya(C, i, u[i]);\n    return C;\n}, Zg = (C, u)=>Gg(C, zg(u));\nfunction ft(C, u, i) {\n    var d;\n    const P = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.parseChainId)(C);\n    return ((d = u.rpcMap) == null ? void 0 : d[P.reference]) || `${qg}?chainId=${P.namespace}:${P.reference}&projectId=${i}`;\n}\nfunction Ct(C) {\n    return C.includes(\":\") ? C.split(\":\")[1] : C;\n}\nfunction Sa(C) {\n    return C.map((u)=>`${u.split(\":\")[0]}:${u.split(\":\")[1]}`);\n}\nfunction Jg(C, u) {\n    const i = Object.keys(u.namespaces).filter((P)=>P.includes(C));\n    if (!i.length) return [];\n    const d = [];\n    return i.forEach((P)=>{\n        const O = u.namespaces[P].accounts;\n        d.push(...O);\n    }), d;\n}\nfunction Xg(C = {}, u = {}) {\n    const i = Oa(C), d = Oa(u);\n    return Ui.exports.merge(i, d);\n}\nfunction Oa(C) {\n    var u, i, d, P;\n    const O = {};\n    if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidObject)(C)) return O;\n    for (const [$, En] of Object.entries(C)){\n        const zt = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isCaipNamespace)($) ? [\n            $\n        ] : En.chains, pr = En.methods || [], It = En.events || [], Ln = En.rpcMap || {}, Fn = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.parseNamespaceKey)($);\n        O[Fn] = Zg(cr(cr({}, O[Fn]), En), {\n            chains: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.mergeArrays)(zt, (u = O[Fn]) == null ? void 0 : u.chains),\n            methods: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.mergeArrays)(pr, (i = O[Fn]) == null ? void 0 : i.methods),\n            events: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.mergeArrays)(It, (d = O[Fn]) == null ? void 0 : d.events),\n            rpcMap: cr(cr({}, Ln), (P = O[Fn]) == null ? void 0 : P.rpcMap)\n        });\n    }\n    return O;\n}\nfunction Qg(C) {\n    return C.includes(\":\") ? C.split(\":\")[2] : C;\n}\nfunction Vg(C) {\n    const u = {};\n    for (const [i, d] of Object.entries(C)){\n        const P = d.methods || [], O = d.events || [], $ = d.accounts || [], En = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isCaipNamespace)(i) ? [\n            i\n        ] : d.chains ? d.chains : Sa(d.accounts);\n        u[i] = {\n            chains: En,\n            methods: P,\n            events: O,\n            accounts: $\n        };\n    }\n    return u;\n}\nfunction Wi(C) {\n    return typeof C == \"number\" ? C : C.includes(\"0x\") ? parseInt(C, 16) : C.includes(\":\") ? Number(C.split(\":\")[1]) : Number(C);\n}\nconst Ra = {}, z = (C)=>Ra[C], Fi = (C, u)=>{\n    Ra[C] = u;\n};\nclass kg {\n    constructor(u){\n        this.name = \"polkadot\", this.namespace = u.namespace, this.events = z(\"events\"), this.client = z(\"client\"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(u) {\n        this.namespace = Object.assign(this.namespace, u);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    getDefaultChain() {\n        if (this.chainId) return this.chainId;\n        if (this.namespace.defaultChain) return this.namespace.defaultChain;\n        const u = this.namespace.chains[0];\n        if (!u) throw new Error(\"ChainId not found\");\n        return u.split(\":\")[1];\n    }\n    request(u) {\n        return this.namespace.methods.includes(u.request.method) ? this.client.request(u) : this.getHttpProvider().request(u.request);\n    }\n    setDefaultChain(u, i) {\n        this.httpProviders[u] || this.setHttpProvider(u, i), this.chainId = u, this.events.emit(Vn.DEFAULT_CHAIN_CHANGED, `${this.name}:${u}`);\n    }\n    getAccounts() {\n        const u = this.namespace.accounts;\n        return u ? u.filter((i)=>i.split(\":\")[1] === this.chainId.toString()).map((i)=>i.split(\":\")[2]) || [] : [];\n    }\n    createHttpProviders() {\n        const u = {};\n        return this.namespace.chains.forEach((i)=>{\n            var d;\n            const P = Ct(i);\n            u[P] = this.createHttpProvider(P, (d = this.namespace.rpcMap) == null ? void 0 : d[i]);\n        }), u;\n    }\n    getHttpProvider() {\n        const u = `${this.name}:${this.chainId}`, i = this.httpProviders[u];\n        if (typeof i > \"u\") throw new Error(`JSON-RPC provider for ${u} not found`);\n        return i;\n    }\n    setHttpProvider(u, i) {\n        const d = this.createHttpProvider(u, i);\n        d && (this.httpProviders[u] = d);\n    }\n    createHttpProvider(u, i) {\n        const d = i || ft(u, this.namespace, this.client.core.projectId);\n        if (!d) throw new Error(`No RPC url provided for chainId: ${u}`);\n        return new _walletconnect_jsonrpc_provider__WEBPACK_IMPORTED_MODULE_2__.JsonRpcProvider(new _walletconnect_jsonrpc_http_connection__WEBPACK_IMPORTED_MODULE_1__[\"default\"](d, z(\"disableProviderPing\")));\n    }\n}\nclass jg {\n    constructor(u){\n        this.name = \"eip155\", this.namespace = u.namespace, this.events = z(\"events\"), this.client = z(\"client\"), this.httpProviders = this.createHttpProviders(), this.chainId = parseInt(this.getDefaultChain());\n    }\n    async request(u) {\n        switch(u.request.method){\n            case \"eth_requestAccounts\":\n                return this.getAccounts();\n            case \"eth_accounts\":\n                return this.getAccounts();\n            case \"wallet_switchEthereumChain\":\n                return await this.handleSwitchChain(u);\n            case \"eth_chainId\":\n                return parseInt(this.getDefaultChain());\n        }\n        return this.namespace.methods.includes(u.request.method) ? await this.client.request(u) : this.getHttpProvider().request(u.request);\n    }\n    updateNamespace(u) {\n        this.namespace = Object.assign(this.namespace, u);\n    }\n    setDefaultChain(u, i) {\n        this.httpProviders[u] || this.setHttpProvider(parseInt(u), i), this.chainId = parseInt(u), this.events.emit(Vn.DEFAULT_CHAIN_CHANGED, `${this.name}:${u}`);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    getDefaultChain() {\n        if (this.chainId) return this.chainId.toString();\n        if (this.namespace.defaultChain) return this.namespace.defaultChain;\n        const u = this.namespace.chains[0];\n        if (!u) throw new Error(\"ChainId not found\");\n        return u.split(\":\")[1];\n    }\n    createHttpProvider(u, i) {\n        const d = i || ft(`${this.name}:${u}`, this.namespace, this.client.core.projectId);\n        if (!d) throw new Error(`No RPC url provided for chainId: ${u}`);\n        return new _walletconnect_jsonrpc_provider__WEBPACK_IMPORTED_MODULE_2__.JsonRpcProvider(new _walletconnect_jsonrpc_http_connection__WEBPACK_IMPORTED_MODULE_1__.HttpConnection(d, z(\"disableProviderPing\")));\n    }\n    setHttpProvider(u, i) {\n        const d = this.createHttpProvider(u, i);\n        d && (this.httpProviders[u] = d);\n    }\n    createHttpProviders() {\n        const u = {};\n        return this.namespace.chains.forEach((i)=>{\n            var d;\n            const P = parseInt(Ct(i));\n            u[P] = this.createHttpProvider(P, (d = this.namespace.rpcMap) == null ? void 0 : d[i]);\n        }), u;\n    }\n    getAccounts() {\n        const u = this.namespace.accounts;\n        return u ? [\n            ...new Set(u.filter((i)=>i.split(\":\")[1] === this.chainId.toString()).map((i)=>i.split(\":\")[2]))\n        ] : [];\n    }\n    getHttpProvider() {\n        const u = this.chainId, i = this.httpProviders[u];\n        if (typeof i > \"u\") throw new Error(`JSON-RPC provider for ${u} not found`);\n        return i;\n    }\n    async handleSwitchChain(u) {\n        var i, d;\n        let P = u.request.params ? (i = u.request.params[0]) == null ? void 0 : i.chainId : \"0x0\";\n        P = P.startsWith(\"0x\") ? P : `0x${P}`;\n        const O = parseInt(P, 16);\n        if (this.isChainApproved(O)) this.setDefaultChain(`${O}`);\n        else if (this.namespace.methods.includes(\"wallet_switchEthereumChain\")) await this.client.request({\n            topic: u.topic,\n            request: {\n                method: u.request.method,\n                params: [\n                    {\n                        chainId: P\n                    }\n                ]\n            },\n            chainId: (d = this.namespace.chains) == null ? void 0 : d[0]\n        }), this.setDefaultChain(`${O}`);\n        else throw new Error(`Failed to switch to chain 'eip155:${O}'. The chain is not approved or the wallet does not support 'wallet_switchEthereumChain' method.`);\n        return null;\n    }\n    isChainApproved(u) {\n        return this.namespace.chains.includes(`${this.name}:${u}`);\n    }\n}\nclass nv {\n    constructor(u){\n        this.name = \"solana\", this.namespace = u.namespace, this.events = z(\"events\"), this.client = z(\"client\"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(u) {\n        this.namespace = Object.assign(this.namespace, u);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(u) {\n        return this.namespace.methods.includes(u.request.method) ? this.client.request(u) : this.getHttpProvider().request(u.request);\n    }\n    setDefaultChain(u, i) {\n        this.httpProviders[u] || this.setHttpProvider(u, i), this.chainId = u, this.events.emit(Vn.DEFAULT_CHAIN_CHANGED, `${this.name}:${u}`);\n    }\n    getDefaultChain() {\n        if (this.chainId) return this.chainId;\n        if (this.namespace.defaultChain) return this.namespace.defaultChain;\n        const u = this.namespace.chains[0];\n        if (!u) throw new Error(\"ChainId not found\");\n        return u.split(\":\")[1];\n    }\n    getAccounts() {\n        const u = this.namespace.accounts;\n        return u ? [\n            ...new Set(u.filter((i)=>i.split(\":\")[1] === this.chainId.toString()).map((i)=>i.split(\":\")[2]))\n        ] : [];\n    }\n    createHttpProviders() {\n        const u = {};\n        return this.namespace.chains.forEach((i)=>{\n            var d;\n            const P = Ct(i);\n            u[P] = this.createHttpProvider(P, (d = this.namespace.rpcMap) == null ? void 0 : d[i]);\n        }), u;\n    }\n    getHttpProvider() {\n        const u = `${this.name}:${this.chainId}`, i = this.httpProviders[u];\n        if (typeof i > \"u\") throw new Error(`JSON-RPC provider for ${u} not found`);\n        return i;\n    }\n    setHttpProvider(u, i) {\n        const d = this.createHttpProvider(u, i);\n        d && (this.httpProviders[u] = d);\n    }\n    createHttpProvider(u, i) {\n        const d = i || ft(u, this.namespace, this.client.core.projectId);\n        if (!d) throw new Error(`No RPC url provided for chainId: ${u}`);\n        return new _walletconnect_jsonrpc_provider__WEBPACK_IMPORTED_MODULE_2__.JsonRpcProvider(new _walletconnect_jsonrpc_http_connection__WEBPACK_IMPORTED_MODULE_1__[\"default\"](d, z(\"disableProviderPing\")));\n    }\n}\nclass tv {\n    constructor(u){\n        this.name = \"cosmos\", this.namespace = u.namespace, this.events = z(\"events\"), this.client = z(\"client\"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(u) {\n        this.namespace = Object.assign(this.namespace, u);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    getDefaultChain() {\n        if (this.chainId) return this.chainId;\n        if (this.namespace.defaultChain) return this.namespace.defaultChain;\n        const u = this.namespace.chains[0];\n        if (!u) throw new Error(\"ChainId not found\");\n        return u.split(\":\")[1];\n    }\n    request(u) {\n        return this.namespace.methods.includes(u.request.method) ? this.client.request(u) : this.getHttpProvider().request(u.request);\n    }\n    setDefaultChain(u, i) {\n        this.httpProviders[u] || this.setHttpProvider(u, i), this.chainId = u, this.events.emit(Vn.DEFAULT_CHAIN_CHANGED, `${this.name}:${this.chainId}`);\n    }\n    getAccounts() {\n        const u = this.namespace.accounts;\n        return u ? [\n            ...new Set(u.filter((i)=>i.split(\":\")[1] === this.chainId.toString()).map((i)=>i.split(\":\")[2]))\n        ] : [];\n    }\n    createHttpProviders() {\n        const u = {};\n        return this.namespace.chains.forEach((i)=>{\n            var d;\n            const P = Ct(i);\n            u[P] = this.createHttpProvider(P, (d = this.namespace.rpcMap) == null ? void 0 : d[i]);\n        }), u;\n    }\n    getHttpProvider() {\n        const u = `${this.name}:${this.chainId}`, i = this.httpProviders[u];\n        if (typeof i > \"u\") throw new Error(`JSON-RPC provider for ${u} not found`);\n        return i;\n    }\n    setHttpProvider(u, i) {\n        const d = this.createHttpProvider(u, i);\n        d && (this.httpProviders[u] = d);\n    }\n    createHttpProvider(u, i) {\n        const d = i || ft(u, this.namespace, this.client.core.projectId);\n        if (!d) throw new Error(`No RPC url provided for chainId: ${u}`);\n        return new _walletconnect_jsonrpc_provider__WEBPACK_IMPORTED_MODULE_2__.JsonRpcProvider(new _walletconnect_jsonrpc_http_connection__WEBPACK_IMPORTED_MODULE_1__[\"default\"](d, z(\"disableProviderPing\")));\n    }\n}\nclass ev {\n    constructor(u){\n        this.name = \"cip34\", this.namespace = u.namespace, this.events = z(\"events\"), this.client = z(\"client\"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(u) {\n        this.namespace = Object.assign(this.namespace, u);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    getDefaultChain() {\n        if (this.chainId) return this.chainId;\n        if (this.namespace.defaultChain) return this.namespace.defaultChain;\n        const u = this.namespace.chains[0];\n        if (!u) throw new Error(\"ChainId not found\");\n        return u.split(\":\")[1];\n    }\n    request(u) {\n        return this.namespace.methods.includes(u.request.method) ? this.client.request(u) : this.getHttpProvider().request(u.request);\n    }\n    setDefaultChain(u, i) {\n        this.httpProviders[u] || this.setHttpProvider(u, i), this.chainId = u, this.events.emit(Vn.DEFAULT_CHAIN_CHANGED, `${this.name}:${this.chainId}`);\n    }\n    getAccounts() {\n        const u = this.namespace.accounts;\n        return u ? [\n            ...new Set(u.filter((i)=>i.split(\":\")[1] === this.chainId.toString()).map((i)=>i.split(\":\")[2]))\n        ] : [];\n    }\n    createHttpProviders() {\n        const u = {};\n        return this.namespace.chains.forEach((i)=>{\n            const d = this.getCardanoRPCUrl(i), P = Ct(i);\n            u[P] = this.createHttpProvider(P, d);\n        }), u;\n    }\n    getHttpProvider() {\n        const u = `${this.name}:${this.chainId}`, i = this.httpProviders[u];\n        if (typeof i > \"u\") throw new Error(`JSON-RPC provider for ${u} not found`);\n        return i;\n    }\n    getCardanoRPCUrl(u) {\n        const i = this.namespace.rpcMap;\n        if (i) return i[u];\n    }\n    setHttpProvider(u, i) {\n        const d = this.createHttpProvider(u, i);\n        d && (this.httpProviders[u] = d);\n    }\n    createHttpProvider(u, i) {\n        const d = i || this.getCardanoRPCUrl(u);\n        if (!d) throw new Error(`No RPC url provided for chainId: ${u}`);\n        return new _walletconnect_jsonrpc_provider__WEBPACK_IMPORTED_MODULE_2__.JsonRpcProvider(new _walletconnect_jsonrpc_http_connection__WEBPACK_IMPORTED_MODULE_1__[\"default\"](d, z(\"disableProviderPing\")));\n    }\n}\nclass rv {\n    constructor(u){\n        this.name = \"elrond\", this.namespace = u.namespace, this.events = z(\"events\"), this.client = z(\"client\"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(u) {\n        this.namespace = Object.assign(this.namespace, u);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(u) {\n        return this.namespace.methods.includes(u.request.method) ? this.client.request(u) : this.getHttpProvider().request(u.request);\n    }\n    setDefaultChain(u, i) {\n        this.httpProviders[u] || this.setHttpProvider(u, i), this.chainId = u, this.events.emit(Vn.DEFAULT_CHAIN_CHANGED, `${this.name}:${u}`);\n    }\n    getDefaultChain() {\n        if (this.chainId) return this.chainId;\n        if (this.namespace.defaultChain) return this.namespace.defaultChain;\n        const u = this.namespace.chains[0];\n        if (!u) throw new Error(\"ChainId not found\");\n        return u.split(\":\")[1];\n    }\n    getAccounts() {\n        const u = this.namespace.accounts;\n        return u ? [\n            ...new Set(u.filter((i)=>i.split(\":\")[1] === this.chainId.toString()).map((i)=>i.split(\":\")[2]))\n        ] : [];\n    }\n    createHttpProviders() {\n        const u = {};\n        return this.namespace.chains.forEach((i)=>{\n            var d;\n            const P = Ct(i);\n            u[P] = this.createHttpProvider(P, (d = this.namespace.rpcMap) == null ? void 0 : d[i]);\n        }), u;\n    }\n    getHttpProvider() {\n        const u = `${this.name}:${this.chainId}`, i = this.httpProviders[u];\n        if (typeof i > \"u\") throw new Error(`JSON-RPC provider for ${u} not found`);\n        return i;\n    }\n    setHttpProvider(u, i) {\n        const d = this.createHttpProvider(u, i);\n        d && (this.httpProviders[u] = d);\n    }\n    createHttpProvider(u, i) {\n        const d = i || ft(u, this.namespace, this.client.core.projectId);\n        if (!d) throw new Error(`No RPC url provided for chainId: ${u}`);\n        return new _walletconnect_jsonrpc_provider__WEBPACK_IMPORTED_MODULE_2__.JsonRpcProvider(new _walletconnect_jsonrpc_http_connection__WEBPACK_IMPORTED_MODULE_1__[\"default\"](d, z(\"disableProviderPing\")));\n    }\n}\nclass iv {\n    constructor(u){\n        this.name = \"multiversx\", this.namespace = u.namespace, this.events = z(\"events\"), this.client = z(\"client\"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(u) {\n        this.namespace = Object.assign(this.namespace, u);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(u) {\n        return this.namespace.methods.includes(u.request.method) ? this.client.request(u) : this.getHttpProvider().request(u.request);\n    }\n    setDefaultChain(u, i) {\n        this.httpProviders[u] || this.setHttpProvider(u, i), this.chainId = u, this.events.emit(Vn.DEFAULT_CHAIN_CHANGED, `${this.name}:${u}`);\n    }\n    getDefaultChain() {\n        if (this.chainId) return this.chainId;\n        if (this.namespace.defaultChain) return this.namespace.defaultChain;\n        const u = this.namespace.chains[0];\n        if (!u) throw new Error(\"ChainId not found\");\n        return u.split(\":\")[1];\n    }\n    getAccounts() {\n        const u = this.namespace.accounts;\n        return u ? [\n            ...new Set(u.filter((i)=>i.split(\":\")[1] === this.chainId.toString()).map((i)=>i.split(\":\")[2]))\n        ] : [];\n    }\n    createHttpProviders() {\n        const u = {};\n        return this.namespace.chains.forEach((i)=>{\n            var d;\n            const P = Ct(i);\n            u[P] = this.createHttpProvider(P, (d = this.namespace.rpcMap) == null ? void 0 : d[i]);\n        }), u;\n    }\n    getHttpProvider() {\n        const u = `${this.name}:${this.chainId}`, i = this.httpProviders[u];\n        if (typeof i > \"u\") throw new Error(`JSON-RPC provider for ${u} not found`);\n        return i;\n    }\n    setHttpProvider(u, i) {\n        const d = this.createHttpProvider(u, i);\n        d && (this.httpProviders[u] = d);\n    }\n    createHttpProvider(u, i) {\n        const d = i || ft(u, this.namespace, this.client.core.projectId);\n        if (!d) throw new Error(`No RPC url provided for chainId: ${u}`);\n        return new _walletconnect_jsonrpc_provider__WEBPACK_IMPORTED_MODULE_2__.JsonRpcProvider(new _walletconnect_jsonrpc_http_connection__WEBPACK_IMPORTED_MODULE_1__[\"default\"](d, z(\"disableProviderPing\")));\n    }\n}\nclass sv {\n    constructor(u){\n        this.name = \"near\", this.namespace = u.namespace, this.events = z(\"events\"), this.client = z(\"client\"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(u) {\n        this.namespace = Object.assign(this.namespace, u);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    getDefaultChain() {\n        if (this.chainId) return this.chainId;\n        if (this.namespace.defaultChain) return this.namespace.defaultChain;\n        const u = this.namespace.chains[0];\n        if (!u) throw new Error(\"ChainId not found\");\n        return u.split(\":\")[1];\n    }\n    request(u) {\n        return this.namespace.methods.includes(u.request.method) ? this.client.request(u) : this.getHttpProvider().request(u.request);\n    }\n    setDefaultChain(u, i) {\n        if (this.chainId = u, !this.httpProviders[u]) {\n            const d = i || ft(`${this.name}:${u}`, this.namespace);\n            if (!d) throw new Error(`No RPC url provided for chainId: ${u}`);\n            this.setHttpProvider(u, d);\n        }\n        this.events.emit(Vn.DEFAULT_CHAIN_CHANGED, `${this.name}:${this.chainId}`);\n    }\n    getAccounts() {\n        const u = this.namespace.accounts;\n        return u ? u.filter((i)=>i.split(\":\")[1] === this.chainId.toString()).map((i)=>i.split(\":\")[2]) || [] : [];\n    }\n    createHttpProviders() {\n        const u = {};\n        return this.namespace.chains.forEach((i)=>{\n            var d;\n            u[i] = this.createHttpProvider(i, (d = this.namespace.rpcMap) == null ? void 0 : d[i]);\n        }), u;\n    }\n    getHttpProvider() {\n        const u = `${this.name}:${this.chainId}`, i = this.httpProviders[u];\n        if (typeof i > \"u\") throw new Error(`JSON-RPC provider for ${u} not found`);\n        return i;\n    }\n    setHttpProvider(u, i) {\n        const d = this.createHttpProvider(u, i);\n        d && (this.httpProviders[u] = d);\n    }\n    createHttpProvider(u, i) {\n        const d = i || ft(u, this.namespace);\n        return typeof d > \"u\" ? void 0 : new _walletconnect_jsonrpc_provider__WEBPACK_IMPORTED_MODULE_2__.JsonRpcProvider(new _walletconnect_jsonrpc_http_connection__WEBPACK_IMPORTED_MODULE_1__[\"default\"](d, z(\"disableProviderPing\")));\n    }\n}\nvar uv = Object.defineProperty, av = Object.defineProperties, ov = Object.getOwnPropertyDescriptors, ba = Object.getOwnPropertySymbols, fv = Object.prototype.hasOwnProperty, cv = Object.prototype.propertyIsEnumerable, Ta = (C, u, i)=>u in C ? uv(C, u, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: i\n    }) : C[u] = i, hr = (C, u)=>{\n    for(var i in u || (u = {}))fv.call(u, i) && Ta(C, i, u[i]);\n    if (ba) for (var i of ba(u))cv.call(u, i) && Ta(C, i, u[i]);\n    return C;\n}, Mi = (C, u)=>av(C, ov(u));\nclass lr {\n    constructor(u){\n        this.events = new (events__WEBPACK_IMPORTED_MODULE_3___default()), this.rpcProviders = {}, this.shouldAbortPairingAttempt = !1, this.maxPairingAttempts = 10, this.disableProviderPing = !1, this.providerOpts = u, this.logger = typeof u?.logger < \"u\" && typeof u?.logger != \"string\" ? u.logger : (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_0__.pino)((0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_0__.getDefaultLoggerOptions)({\n            level: u?.logger || Ia\n        })), this.disableProviderPing = u?.disableProviderPing || !1;\n    }\n    static async init(u) {\n        const i = new lr(u);\n        return await i.initialize(), i;\n    }\n    async request(u, i) {\n        const [d, P] = this.validateChain(i);\n        if (!this.session) throw new Error(\"Please call connect() before request()\");\n        return await this.getProvider(d).request({\n            request: hr({}, u),\n            chainId: `${d}:${P}`,\n            topic: this.session.topic\n        });\n    }\n    sendAsync(u, i, d) {\n        const P = new Date().getTime();\n        this.request(u, d).then((O)=>i(null, (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_4__.formatJsonRpcResult)(P, O))).catch((O)=>i(O, void 0));\n    }\n    async enable() {\n        if (!this.client) throw new Error(\"Sign Client not initialized\");\n        return this.session || await this.connect({\n            namespaces: this.namespaces,\n            optionalNamespaces: this.optionalNamespaces,\n            sessionProperties: this.sessionProperties\n        }), await this.requestAccounts();\n    }\n    async disconnect() {\n        var u;\n        if (!this.session) throw new Error(\"Please call connect() before enable()\");\n        await this.client.disconnect({\n            topic: (u = this.session) == null ? void 0 : u.topic,\n            reason: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getSdkError)(\"USER_DISCONNECTED\")\n        }), await this.cleanup();\n    }\n    async connect(u) {\n        if (!this.client) throw new Error(\"Sign Client not initialized\");\n        if (this.setNamespaces(u), await this.cleanupPendingPairings(), !u.skipPairing) return await this.pair(u.pairingTopic);\n    }\n    on(u, i) {\n        this.events.on(u, i);\n    }\n    once(u, i) {\n        this.events.once(u, i);\n    }\n    removeListener(u, i) {\n        this.events.removeListener(u, i);\n    }\n    off(u, i) {\n        this.events.off(u, i);\n    }\n    get isWalletConnect() {\n        return !0;\n    }\n    async pair(u) {\n        this.shouldAbortPairingAttempt = !1;\n        let i = 0;\n        do {\n            if (this.shouldAbortPairingAttempt) throw new Error(\"Pairing aborted\");\n            if (i >= this.maxPairingAttempts) throw new Error(\"Max auto pairing attempts reached\");\n            const { uri: d, approval: P } = await this.client.connect({\n                pairingTopic: u,\n                requiredNamespaces: this.namespaces,\n                optionalNamespaces: this.optionalNamespaces,\n                sessionProperties: this.sessionProperties\n            });\n            d && (this.uri = d, this.events.emit(\"display_uri\", d)), await P().then((O)=>{\n                this.session = O, this.namespaces || (this.namespaces = Vg(O.namespaces), this.persist(\"namespaces\", this.namespaces));\n            }).catch((O)=>{\n                if (O.message !== _walletconnect_sign_client__WEBPACK_IMPORTED_MODULE_6__.PROPOSAL_EXPIRY_MESSAGE) throw O;\n                i++;\n            });\n        }while (!this.session);\n        return this.onConnect(), this.session;\n    }\n    setDefaultChain(u, i) {\n        try {\n            if (!this.session) return;\n            const [d, P] = this.validateChain(u);\n            this.getProvider(d).setDefaultChain(P, i);\n        } catch (d) {\n            if (!/Please call connect/.test(d.message)) throw d;\n        }\n    }\n    async cleanupPendingPairings(u = {}) {\n        this.logger.info(\"Cleaning up inactive pairings...\");\n        const i = this.client.pairing.getAll();\n        if ((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidArray)(i)) {\n            for (const d of i)u.deletePairings ? this.client.core.expirer.set(d.topic, 0) : await this.client.core.relayer.subscriber.unsubscribe(d.topic);\n            this.logger.info(`Inactive pairings cleared: ${i.length}`);\n        }\n    }\n    abortPairingAttempt() {\n        this.shouldAbortPairingAttempt = !0;\n    }\n    async checkStorage() {\n        if (this.namespaces = await this.getFromStore(\"namespaces\"), this.optionalNamespaces = await this.getFromStore(\"optionalNamespaces\") || {}, this.client.session.length) {\n            const u = this.client.session.keys.length - 1;\n            this.session = this.client.session.get(this.client.session.keys[u]), this.createProviders();\n        }\n    }\n    async initialize() {\n        this.logger.trace(\"Initialized\"), await this.createClient(), await this.checkStorage(), this.registerEventListeners();\n    }\n    async createClient() {\n        this.client = this.providerOpts.client || await _walletconnect_sign_client__WEBPACK_IMPORTED_MODULE_6__[\"default\"].init({\n            logger: this.providerOpts.logger || Ia,\n            relayUrl: this.providerOpts.relayUrl || Wg,\n            projectId: this.providerOpts.projectId,\n            metadata: this.providerOpts.metadata,\n            storageOptions: this.providerOpts.storageOptions,\n            storage: this.providerOpts.storage,\n            name: this.providerOpts.name\n        }), this.logger.trace(\"SignClient Initialized\");\n    }\n    createProviders() {\n        if (!this.client) throw new Error(\"Sign Client not initialized\");\n        if (!this.session) throw new Error(\"Session not initialized. Please call connect() before enable()\");\n        const u = [\n            ...new Set(Object.keys(this.session.namespaces).map((i)=>(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.parseNamespaceKey)(i)))\n        ];\n        Fi(\"client\", this.client), Fi(\"events\", this.events), Fi(\"disableProviderPing\", this.disableProviderPing), u.forEach((i)=>{\n            if (!this.session) return;\n            const d = Jg(i, this.session), P = Sa(d), O = Xg(this.namespaces, this.optionalNamespaces), $ = Mi(hr({}, O[i]), {\n                accounts: d,\n                chains: P\n            });\n            switch(i){\n                case \"eip155\":\n                    this.rpcProviders[i] = new jg({\n                        namespace: $\n                    });\n                    break;\n                case \"solana\":\n                    this.rpcProviders[i] = new nv({\n                        namespace: $\n                    });\n                    break;\n                case \"cosmos\":\n                    this.rpcProviders[i] = new tv({\n                        namespace: $\n                    });\n                    break;\n                case \"polkadot\":\n                    this.rpcProviders[i] = new kg({\n                        namespace: $\n                    });\n                    break;\n                case \"cip34\":\n                    this.rpcProviders[i] = new ev({\n                        namespace: $\n                    });\n                    break;\n                case \"elrond\":\n                    this.rpcProviders[i] = new rv({\n                        namespace: $\n                    });\n                    break;\n                case \"multiversx\":\n                    this.rpcProviders[i] = new iv({\n                        namespace: $\n                    });\n                    break;\n                case \"near\":\n                    this.rpcProviders[i] = new sv({\n                        namespace: $\n                    });\n                    break;\n            }\n        });\n    }\n    registerEventListeners() {\n        if (typeof this.client > \"u\") throw new Error(\"Sign Client is not initialized\");\n        this.client.on(\"session_ping\", (u)=>{\n            this.events.emit(\"session_ping\", u);\n        }), this.client.on(\"session_event\", (u)=>{\n            const { params: i } = u, { event: d } = i;\n            if (d.name === \"accountsChanged\") {\n                const P = d.data;\n                P && (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidArray)(P) && this.events.emit(\"accountsChanged\", P.map(Qg));\n            } else if (d.name === \"chainChanged\") {\n                const P = i.chainId, O = i.event.data, $ = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.parseNamespaceKey)(P), En = Wi(P) !== Wi(O) ? `${$}:${Wi(O)}` : P;\n                this.onChainChanged(En);\n            } else this.events.emit(d.name, d.data);\n            this.events.emit(\"session_event\", u);\n        }), this.client.on(\"session_update\", ({ topic: u, params: i })=>{\n            var d;\n            const { namespaces: P } = i, O = (d = this.client) == null ? void 0 : d.session.get(u);\n            this.session = Mi(hr({}, O), {\n                namespaces: P\n            }), this.onSessionUpdate(), this.events.emit(\"session_update\", {\n                topic: u,\n                params: i\n            });\n        }), this.client.on(\"session_delete\", async (u)=>{\n            await this.cleanup(), this.events.emit(\"session_delete\", u), this.events.emit(\"disconnect\", Mi(hr({}, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getSdkError)(\"USER_DISCONNECTED\")), {\n                data: u.topic\n            }));\n        }), this.on(Vn.DEFAULT_CHAIN_CHANGED, (u)=>{\n            this.onChainChanged(u, !0);\n        });\n    }\n    getProvider(u) {\n        if (!this.rpcProviders[u]) throw new Error(`Provider not found: ${u}`);\n        return this.rpcProviders[u];\n    }\n    onSessionUpdate() {\n        Object.keys(this.rpcProviders).forEach((u)=>{\n            var i;\n            this.getProvider(u).updateNamespace((i = this.session) == null ? void 0 : i.namespaces[u]);\n        });\n    }\n    setNamespaces(u) {\n        const { namespaces: i, optionalNamespaces: d, sessionProperties: P } = u;\n        i && Object.keys(i).length && (this.namespaces = i), d && Object.keys(d).length && (this.optionalNamespaces = d), this.sessionProperties = P, this.persist(\"namespaces\", i), this.persist(\"optionalNamespaces\", d);\n    }\n    validateChain(u) {\n        const [i, d] = u?.split(\":\") || [\n            \"\",\n            \"\"\n        ];\n        if (!this.namespaces || !Object.keys(this.namespaces).length) return [\n            i,\n            d\n        ];\n        if (i && !Object.keys(this.namespaces || {}).map(($)=>(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.parseNamespaceKey)($)).includes(i)) throw new Error(`Namespace '${i}' is not configured. Please call connect() first with namespace config.`);\n        if (i && d) return [\n            i,\n            d\n        ];\n        const P = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.parseNamespaceKey)(Object.keys(this.namespaces)[0]), O = this.rpcProviders[P].getDefaultChain();\n        return [\n            P,\n            O\n        ];\n    }\n    async requestAccounts() {\n        const [u] = this.validateChain();\n        return await this.getProvider(u).requestAccounts();\n    }\n    onChainChanged(u, i = !1) {\n        var d;\n        if (!this.namespaces) return;\n        const [P, O] = this.validateChain(u);\n        i || this.getProvider(P).setDefaultChain(O), ((d = this.namespaces[P]) != null ? d : this.namespaces[`${P}:${O}`]).defaultChain = O, this.persist(\"namespaces\", this.namespaces), this.events.emit(\"chainChanged\", O);\n    }\n    onConnect() {\n        this.createProviders(), this.events.emit(\"connect\", {\n            session: this.session\n        });\n    }\n    async cleanup() {\n        this.session = void 0, this.namespaces = void 0, this.optionalNamespaces = void 0, this.sessionProperties = void 0, this.persist(\"namespaces\", void 0), this.persist(\"optionalNamespaces\", void 0), this.persist(\"sessionProperties\", void 0), await this.cleanupPendingPairings({\n            deletePairings: !0\n        });\n    }\n    persist(u, i) {\n        this.client.core.storage.setItem(`${xa}/${u}`, i);\n    }\n    async getFromStore(u) {\n        return await this.client.core.storage.getItem(`${xa}/${u}`);\n    }\n}\nconst hv = lr;\n //# sourceMappingURL=index.es.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@walletconnect+universal-provider@2.11.0/node_modules/@walletconnect/universal-provider/dist/index.es.js\n");

/***/ })

};
;