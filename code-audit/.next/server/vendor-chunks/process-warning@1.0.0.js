"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/process-warning@1.0.0";
exports.ids = ["vendor-chunks/process-warning@1.0.0"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/process-warning@1.0.0/node_modules/process-warning/index.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/.pnpm/process-warning@1.0.0/node_modules/process-warning/index.js ***!
  \****************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst { format } = __webpack_require__(/*! util */ \"util\");\nfunction build() {\n    const codes = {};\n    const emitted = new Map();\n    function create(name, code, message) {\n        if (!name) throw new Error(\"Warning name must not be empty\");\n        if (!code) throw new Error(\"Warning code must not be empty\");\n        if (!message) throw new Error(\"Warning message must not be empty\");\n        code = code.toUpperCase();\n        if (codes[code] !== undefined) {\n            throw new Error(`The code '${code}' already exist`);\n        }\n        function buildWarnOpts(a, b, c) {\n            // more performant than spread (...) operator\n            let formatted;\n            if (a && b && c) {\n                formatted = format(message, a, b, c);\n            } else if (a && b) {\n                formatted = format(message, a, b);\n            } else if (a) {\n                formatted = format(message, a);\n            } else {\n                formatted = message;\n            }\n            return {\n                code,\n                name,\n                message: formatted\n            };\n        }\n        emitted.set(code, false);\n        codes[code] = buildWarnOpts;\n        return codes[code];\n    }\n    function emit(code, a, b, c) {\n        if (codes[code] === undefined) throw new Error(`The code '${code}' does not exist`);\n        if (emitted.get(code) === true) return;\n        emitted.set(code, true);\n        const warning = codes[code](a, b, c);\n        process.emitWarning(warning.message, warning.name, warning.code);\n    }\n    return {\n        create,\n        emit,\n        emitted\n    };\n}\nmodule.exports = build;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vcHJvY2Vzcy13YXJuaW5nQDEuMC4wL25vZGVfbW9kdWxlcy9wcm9jZXNzLXdhcm5pbmcvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQSxNQUFNLEVBQUVBLE1BQU0sRUFBRSxHQUFHQyxtQkFBT0EsQ0FBQztBQUUzQixTQUFTQztJQUNQLE1BQU1DLFFBQVEsQ0FBQztJQUNmLE1BQU1DLFVBQVUsSUFBSUM7SUFFcEIsU0FBU0MsT0FBUUMsSUFBSSxFQUFFQyxJQUFJLEVBQUVDLE9BQU87UUFDbEMsSUFBSSxDQUFDRixNQUFNLE1BQU0sSUFBSUcsTUFBTTtRQUMzQixJQUFJLENBQUNGLE1BQU0sTUFBTSxJQUFJRSxNQUFNO1FBQzNCLElBQUksQ0FBQ0QsU0FBUyxNQUFNLElBQUlDLE1BQU07UUFFOUJGLE9BQU9BLEtBQUtHLFdBQVc7UUFFdkIsSUFBSVIsS0FBSyxDQUFDSyxLQUFLLEtBQUtJLFdBQVc7WUFDN0IsTUFBTSxJQUFJRixNQUFNLENBQUMsVUFBVSxFQUFFRixLQUFLLGVBQWUsQ0FBQztRQUNwRDtRQUVBLFNBQVNLLGNBQWVDLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxDQUFDO1lBQzdCLDZDQUE2QztZQUM3QyxJQUFJQztZQUNKLElBQUlILEtBQUtDLEtBQUtDLEdBQUc7Z0JBQ2ZDLFlBQVlqQixPQUFPUyxTQUFTSyxHQUFHQyxHQUFHQztZQUNwQyxPQUFPLElBQUlGLEtBQUtDLEdBQUc7Z0JBQ2pCRSxZQUFZakIsT0FBT1MsU0FBU0ssR0FBR0M7WUFDakMsT0FBTyxJQUFJRCxHQUFHO2dCQUNaRyxZQUFZakIsT0FBT1MsU0FBU0s7WUFDOUIsT0FBTztnQkFDTEcsWUFBWVI7WUFDZDtZQUVBLE9BQU87Z0JBQ0xEO2dCQUNBRDtnQkFDQUUsU0FBU1E7WUFDWDtRQUNGO1FBRUFiLFFBQVFjLEdBQUcsQ0FBQ1YsTUFBTTtRQUNsQkwsS0FBSyxDQUFDSyxLQUFLLEdBQUdLO1FBRWQsT0FBT1YsS0FBSyxDQUFDSyxLQUFLO0lBQ3BCO0lBRUEsU0FBU1csS0FBTVgsSUFBSSxFQUFFTSxDQUFDLEVBQUVDLENBQUMsRUFBRUMsQ0FBQztRQUMxQixJQUFJYixLQUFLLENBQUNLLEtBQUssS0FBS0ksV0FBVyxNQUFNLElBQUlGLE1BQU0sQ0FBQyxVQUFVLEVBQUVGLEtBQUssZ0JBQWdCLENBQUM7UUFDbEYsSUFBSUosUUFBUWdCLEdBQUcsQ0FBQ1osVUFBVSxNQUFNO1FBQ2hDSixRQUFRYyxHQUFHLENBQUNWLE1BQU07UUFFbEIsTUFBTWEsVUFBVWxCLEtBQUssQ0FBQ0ssS0FBSyxDQUFDTSxHQUFHQyxHQUFHQztRQUNsQ00sUUFBUUMsV0FBVyxDQUFDRixRQUFRWixPQUFPLEVBQUVZLFFBQVFkLElBQUksRUFBRWMsUUFBUWIsSUFBSTtJQUNqRTtJQUVBLE9BQU87UUFDTEY7UUFDQWE7UUFDQWY7SUFDRjtBQUNGO0FBRUFvQixPQUFPQyxPQUFPLEdBQUd2QiIsInNvdXJjZXMiOlsid2VicGFjazovL3NtYXJ0LWF1ZGl0Ly4vbm9kZV9tb2R1bGVzLy5wbnBtL3Byb2Nlc3Mtd2FybmluZ0AxLjAuMC9ub2RlX21vZHVsZXMvcHJvY2Vzcy13YXJuaW5nL2luZGV4LmpzPzQ2ZjciXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbmNvbnN0IHsgZm9ybWF0IH0gPSByZXF1aXJlKCd1dGlsJylcblxuZnVuY3Rpb24gYnVpbGQgKCkge1xuICBjb25zdCBjb2RlcyA9IHt9XG4gIGNvbnN0IGVtaXR0ZWQgPSBuZXcgTWFwKClcblxuICBmdW5jdGlvbiBjcmVhdGUgKG5hbWUsIGNvZGUsIG1lc3NhZ2UpIHtcbiAgICBpZiAoIW5hbWUpIHRocm93IG5ldyBFcnJvcignV2FybmluZyBuYW1lIG11c3Qgbm90IGJlIGVtcHR5JylcbiAgICBpZiAoIWNvZGUpIHRocm93IG5ldyBFcnJvcignV2FybmluZyBjb2RlIG11c3Qgbm90IGJlIGVtcHR5JylcbiAgICBpZiAoIW1lc3NhZ2UpIHRocm93IG5ldyBFcnJvcignV2FybmluZyBtZXNzYWdlIG11c3Qgbm90IGJlIGVtcHR5JylcblxuICAgIGNvZGUgPSBjb2RlLnRvVXBwZXJDYXNlKClcblxuICAgIGlmIChjb2Rlc1tjb2RlXSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYFRoZSBjb2RlICcke2NvZGV9JyBhbHJlYWR5IGV4aXN0YClcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBidWlsZFdhcm5PcHRzIChhLCBiLCBjKSB7XG4gICAgICAvLyBtb3JlIHBlcmZvcm1hbnQgdGhhbiBzcHJlYWQgKC4uLikgb3BlcmF0b3JcbiAgICAgIGxldCBmb3JtYXR0ZWRcbiAgICAgIGlmIChhICYmIGIgJiYgYykge1xuICAgICAgICBmb3JtYXR0ZWQgPSBmb3JtYXQobWVzc2FnZSwgYSwgYiwgYylcbiAgICAgIH0gZWxzZSBpZiAoYSAmJiBiKSB7XG4gICAgICAgIGZvcm1hdHRlZCA9IGZvcm1hdChtZXNzYWdlLCBhLCBiKVxuICAgICAgfSBlbHNlIGlmIChhKSB7XG4gICAgICAgIGZvcm1hdHRlZCA9IGZvcm1hdChtZXNzYWdlLCBhKVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZm9ybWF0dGVkID0gbWVzc2FnZVxuICAgICAgfVxuXG4gICAgICByZXR1cm4ge1xuICAgICAgICBjb2RlLFxuICAgICAgICBuYW1lLFxuICAgICAgICBtZXNzYWdlOiBmb3JtYXR0ZWRcbiAgICAgIH1cbiAgICB9XG5cbiAgICBlbWl0dGVkLnNldChjb2RlLCBmYWxzZSlcbiAgICBjb2Rlc1tjb2RlXSA9IGJ1aWxkV2Fybk9wdHNcblxuICAgIHJldHVybiBjb2Rlc1tjb2RlXVxuICB9XG5cbiAgZnVuY3Rpb24gZW1pdCAoY29kZSwgYSwgYiwgYykge1xuICAgIGlmIChjb2Rlc1tjb2RlXSA9PT0gdW5kZWZpbmVkKSB0aHJvdyBuZXcgRXJyb3IoYFRoZSBjb2RlICcke2NvZGV9JyBkb2VzIG5vdCBleGlzdGApXG4gICAgaWYgKGVtaXR0ZWQuZ2V0KGNvZGUpID09PSB0cnVlKSByZXR1cm5cbiAgICBlbWl0dGVkLnNldChjb2RlLCB0cnVlKVxuXG4gICAgY29uc3Qgd2FybmluZyA9IGNvZGVzW2NvZGVdKGEsIGIsIGMpXG4gICAgcHJvY2Vzcy5lbWl0V2FybmluZyh3YXJuaW5nLm1lc3NhZ2UsIHdhcm5pbmcubmFtZSwgd2FybmluZy5jb2RlKVxuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBjcmVhdGUsXG4gICAgZW1pdCxcbiAgICBlbWl0dGVkXG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBidWlsZFxuIl0sIm5hbWVzIjpbImZvcm1hdCIsInJlcXVpcmUiLCJidWlsZCIsImNvZGVzIiwiZW1pdHRlZCIsIk1hcCIsImNyZWF0ZSIsIm5hbWUiLCJjb2RlIiwibWVzc2FnZSIsIkVycm9yIiwidG9VcHBlckNhc2UiLCJ1bmRlZmluZWQiLCJidWlsZFdhcm5PcHRzIiwiYSIsImIiLCJjIiwiZm9ybWF0dGVkIiwic2V0IiwiZW1pdCIsImdldCIsIndhcm5pbmciLCJwcm9jZXNzIiwiZW1pdFdhcm5pbmciLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/process-warning@1.0.0/node_modules/process-warning/index.js\n");

/***/ })

};
;