"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_node_modules_pnpm_walletconnect_modal_2_6_2__types_react_18_2_56_react_18_-6872ae"],{

/***/ "(app-pages-browser)/./node_modules/.pnpm/proxy-compare@2.5.1/node_modules/proxy-compare/dist/index.modern.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/.pnpm/proxy-compare@2.5.1/node_modules/proxy-compare/dist/index.modern.js ***!
  \************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   affectedToPathList: function() { return /* binding */ w; },\n/* harmony export */   createProxy: function() { return /* binding */ a; },\n/* harmony export */   getUntracked: function() { return /* binding */ y; },\n/* harmony export */   isChanged: function() { return /* binding */ p; },\n/* harmony export */   markToTrack: function() { return /* binding */ h; },\n/* harmony export */   replaceNewProxy: function() { return /* binding */ O; },\n/* harmony export */   trackMemo: function() { return /* binding */ g; }\n/* harmony export */ });\nconst e = Symbol(), t = Symbol(), r = \"a\", n = \"w\";\nlet o = (e, t)=>new Proxy(e, t);\nconst s = Object.getPrototypeOf, c = new WeakMap, l = (e)=>e && (c.has(e) ? c.get(e) : s(e) === Object.prototype || s(e) === Array.prototype), f = (e)=>\"object\" == typeof e && null !== e, i = (e)=>{\n    if (Array.isArray(e)) return Array.from(e);\n    const t = Object.getOwnPropertyDescriptors(e);\n    return Object.values(t).forEach((e)=>{\n        e.configurable = !0;\n    }), Object.create(s(e), t);\n}, u = (e)=>e[t] || e, a = (s, c, f, p)=>{\n    if (!l(s)) return s;\n    let g = p && p.get(s);\n    if (!g) {\n        const e = u(s);\n        g = ((e)=>Object.values(Object.getOwnPropertyDescriptors(e)).some((e)=>!e.configurable && !e.writable))(e) ? [\n            e,\n            i(e)\n        ] : [\n            e\n        ], null == p || p.set(s, g);\n    }\n    const [y, h] = g;\n    let w = f && f.get(y);\n    return w && w[1].f === !!h || (w = ((o, s)=>{\n        const c = {\n            f: s\n        };\n        let l = !1;\n        const f = (e, t)=>{\n            if (!l) {\n                let s = c[r].get(o);\n                if (s || (s = {}, c[r].set(o, s)), e === n) s[n] = !0;\n                else {\n                    let r = s[e];\n                    r || (r = new Set, s[e] = r), r.add(t);\n                }\n            }\n        }, i = {\n            get: (e, n)=>n === t ? o : (f(\"k\", n), a(Reflect.get(e, n), c[r], c.c, c.t)),\n            has: (t, n)=>n === e ? (l = !0, c[r].delete(o), !0) : (f(\"h\", n), Reflect.has(t, n)),\n            getOwnPropertyDescriptor: (e, t)=>(f(\"o\", t), Reflect.getOwnPropertyDescriptor(e, t)),\n            ownKeys: (e)=>(f(n), Reflect.ownKeys(e))\n        };\n        return s && (i.set = i.deleteProperty = ()=>!1), [\n            i,\n            c\n        ];\n    })(y, !!h), w[1].p = o(h || y, w[0]), f && f.set(y, w)), w[1][r] = c, w[1].c = f, w[1].t = p, w[1].p;\n}, p = (e, t, r, o)=>{\n    if (Object.is(e, t)) return !1;\n    if (!f(e) || !f(t)) return !0;\n    const s = r.get(u(e));\n    if (!s) return !0;\n    if (o) {\n        const r = o.get(e);\n        if (r && r.n === t) return r.g;\n        o.set(e, {\n            n: t,\n            g: !1\n        });\n    }\n    let c = null;\n    try {\n        for (const r of s.h || [])if (c = Reflect.has(e, r) !== Reflect.has(t, r), c) return c;\n        if (!0 === s[n]) {\n            if (c = ((e, t)=>{\n                const r = Reflect.ownKeys(e), n = Reflect.ownKeys(t);\n                return r.length !== n.length || r.some((e, t)=>e !== n[t]);\n            })(e, t), c) return c;\n        } else for (const r of s.o || [])if (c = !!Reflect.getOwnPropertyDescriptor(e, r) != !!Reflect.getOwnPropertyDescriptor(t, r), c) return c;\n        for (const n of s.k || [])if (c = p(e[n], t[n], r, o), c) return c;\n        return null === c && (c = !0), c;\n    } finally{\n        o && o.set(e, {\n            n: t,\n            g: c\n        });\n    }\n}, g = (t)=>!!l(t) && e in t, y = (e)=>l(e) && e[t] || null, h = function(e) {\n    let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !0;\n    c.set(e, t);\n}, w = (e, t, r)=>{\n    const o = [], s = new WeakSet, c = (e, l)=>{\n        if (s.has(e)) return;\n        f(e) && s.add(e);\n        const i = f(e) && t.get(u(e));\n        if (i) {\n            var a, p;\n            if (null == (a = i.h) || a.forEach((e)=>{\n                const t = \":has(\".concat(String(e), \")\");\n                o.push(l ? [\n                    ...l,\n                    t\n                ] : [\n                    t\n                ]);\n            }), !0 === i[n]) {\n                const e = \":ownKeys\";\n                o.push(l ? [\n                    ...l,\n                    e\n                ] : [\n                    e\n                ]);\n            } else {\n                var g;\n                null == (g = i.o) || g.forEach((e)=>{\n                    const t = \":hasOwn(\".concat(String(e), \")\");\n                    o.push(l ? [\n                        ...l,\n                        t\n                    ] : [\n                        t\n                    ]);\n                });\n            }\n            null == (p = i.k) || p.forEach((t)=>{\n                r && !(\"value\" in (Object.getOwnPropertyDescriptor(e, t) || {})) || c(e[t], l ? [\n                    ...l,\n                    t\n                ] : [\n                    t\n                ]);\n            });\n        } else l && o.push(l);\n    };\n    return c(e), o;\n}, O = (e)=>{\n    o = e;\n};\n //# sourceMappingURL=index.modern.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9wcm94eS1jb21wYXJlQDIuNS4xL25vZGVfbW9kdWxlcy9wcm94eS1jb21wYXJlL2Rpc3QvaW5kZXgubW9kZXJuLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQSxNQUFNQSxJQUFFQyxVQUFTQyxJQUFFRCxVQUFTRSxJQUFFLEtBQUlDLElBQUU7QUFBSSxJQUFJQyxJQUFFLENBQUNMLEdBQUVFLElBQUksSUFBSUksTUFBTU4sR0FBRUU7QUFBRyxNQUFNSyxJQUFFQyxPQUFPQyxjQUFjLEVBQUNDLElBQUUsSUFBSUMsU0FBUUMsSUFBRVosQ0FBQUEsSUFBR0EsS0FBSVUsQ0FBQUEsRUFBRUcsR0FBRyxDQUFDYixLQUFHVSxFQUFFSSxHQUFHLENBQUNkLEtBQUdPLEVBQUVQLE9BQUtRLE9BQU9PLFNBQVMsSUFBRVIsRUFBRVAsT0FBS2dCLE1BQU1ELFNBQVMsR0FBRUUsSUFBRWpCLENBQUFBLElBQUcsWUFBVSxPQUFPQSxLQUFHLFNBQU9BLEdBQUVrQixJQUFFbEIsQ0FBQUE7SUFBSSxJQUFHZ0IsTUFBTUcsT0FBTyxDQUFDbkIsSUFBRyxPQUFPZ0IsTUFBTUksSUFBSSxDQUFDcEI7SUFBRyxNQUFNRSxJQUFFTSxPQUFPYSx5QkFBeUIsQ0FBQ3JCO0lBQUcsT0FBT1EsT0FBT2MsTUFBTSxDQUFDcEIsR0FBR3FCLE9BQU8sQ0FBQ3ZCLENBQUFBO1FBQUlBLEVBQUV3QixZQUFZLEdBQUMsQ0FBQztJQUFDLElBQUdoQixPQUFPaUIsTUFBTSxDQUFDbEIsRUFBRVAsSUFBR0U7QUFBRSxHQUFFd0IsSUFBRTFCLENBQUFBLElBQUdBLENBQUMsQ0FBQ0UsRUFBRSxJQUFFRixHQUFFMkIsSUFBRSxDQUFDcEIsR0FBRUcsR0FBRU8sR0FBRVc7SUFBSyxJQUFHLENBQUNoQixFQUFFTCxJQUFHLE9BQU9BO0lBQUUsSUFBSXNCLElBQUVELEtBQUdBLEVBQUVkLEdBQUcsQ0FBQ1A7SUFBRyxJQUFHLENBQUNzQixHQUFFO1FBQUMsTUFBTTdCLElBQUUwQixFQUFFbkI7UUFBR3NCLElBQUUsQ0FBQzdCLENBQUFBLElBQUdRLE9BQU9jLE1BQU0sQ0FBQ2QsT0FBT2EseUJBQXlCLENBQUNyQixJQUFJOEIsSUFBSSxDQUFDOUIsQ0FBQUEsSUFBRyxDQUFDQSxFQUFFd0IsWUFBWSxJQUFFLENBQUN4QixFQUFFK0IsUUFBUSxHQUFHL0IsS0FBRztZQUFDQTtZQUFFa0IsRUFBRWxCO1NBQUcsR0FBQztZQUFDQTtTQUFFLEVBQUMsUUFBTTRCLEtBQUdBLEVBQUVJLEdBQUcsQ0FBQ3pCLEdBQUVzQjtJQUFFO0lBQUMsTUFBSyxDQUFDSSxHQUFFQyxFQUFFLEdBQUNMO0lBQUUsSUFBSU0sSUFBRWxCLEtBQUdBLEVBQUVILEdBQUcsQ0FBQ21CO0lBQUcsT0FBT0UsS0FBR0EsQ0FBQyxDQUFDLEVBQUUsQ0FBQ2xCLENBQUMsS0FBRyxDQUFDLENBQUNpQixLQUFJQyxDQUFBQSxJQUFFLENBQUMsQ0FBQzlCLEdBQUVFO1FBQUssTUFBTUcsSUFBRTtZQUFDTyxHQUFFVjtRQUFDO1FBQUUsSUFBSUssSUFBRSxDQUFDO1FBQUUsTUFBTUssSUFBRSxDQUFDakIsR0FBRUU7WUFBSyxJQUFHLENBQUNVLEdBQUU7Z0JBQUMsSUFBSUwsSUFBRUcsQ0FBQyxDQUFDUCxFQUFFLENBQUNXLEdBQUcsQ0FBQ1Q7Z0JBQUcsSUFBR0UsS0FBSUEsQ0FBQUEsSUFBRSxDQUFDLEdBQUVHLENBQUMsQ0FBQ1AsRUFBRSxDQUFDNkIsR0FBRyxDQUFDM0IsR0FBRUUsRUFBQyxHQUFHUCxNQUFJSSxHQUFFRyxDQUFDLENBQUNILEVBQUUsR0FBQyxDQUFDO3FCQUFNO29CQUFDLElBQUlELElBQUVJLENBQUMsQ0FBQ1AsRUFBRTtvQkFBQ0csS0FBSUEsQ0FBQUEsSUFBRSxJQUFJaUMsS0FBSTdCLENBQUMsQ0FBQ1AsRUFBRSxHQUFDRyxDQUFBQSxHQUFHQSxFQUFFa0MsR0FBRyxDQUFDbkM7Z0JBQUU7WUFBQztRQUFDLEdBQUVnQixJQUFFO1lBQUNKLEtBQUksQ0FBQ2QsR0FBRUksSUFBSUEsTUFBSUYsSUFBRUcsSUFBR1ksQ0FBQUEsRUFBRSxLQUFJYixJQUFHdUIsRUFBRVcsUUFBUXhCLEdBQUcsQ0FBQ2QsR0FBRUksSUFBR00sQ0FBQyxDQUFDUCxFQUFFLEVBQUNPLEVBQUVBLENBQUMsRUFBQ0EsRUFBRVIsQ0FBQztZQUFHVyxLQUFJLENBQUNYLEdBQUVFLElBQUlBLE1BQUlKLElBQUdZLENBQUFBLElBQUUsQ0FBQyxHQUFFRixDQUFDLENBQUNQLEVBQUUsQ0FBQ29DLE1BQU0sQ0FBQ2xDLElBQUcsQ0FBQyxLQUFJWSxDQUFBQSxFQUFFLEtBQUliLElBQUdrQyxRQUFRekIsR0FBRyxDQUFDWCxHQUFFRSxFQUFDO1lBQUdvQywwQkFBeUIsQ0FBQ3hDLEdBQUVFLElBQUtlLENBQUFBLEVBQUUsS0FBSWYsSUFBR29DLFFBQVFFLHdCQUF3QixDQUFDeEMsR0FBRUUsRUFBQztZQUFHdUMsU0FBUXpDLENBQUFBLElBQUlpQixDQUFBQSxFQUFFYixJQUFHa0MsUUFBUUcsT0FBTyxDQUFDekMsRUFBQztRQUFFO1FBQUUsT0FBT08sS0FBSVcsQ0FBQUEsRUFBRWMsR0FBRyxHQUFDZCxFQUFFd0IsY0FBYyxHQUFDLElBQUksQ0FBQyxJQUFHO1lBQUN4QjtZQUFFUjtTQUFFO0lBQUEsR0FBR3VCLEdBQUUsQ0FBQyxDQUFDQyxJQUFHQyxDQUFDLENBQUMsRUFBRSxDQUFDUCxDQUFDLEdBQUN2QixFQUFFNkIsS0FBR0QsR0FBRUUsQ0FBQyxDQUFDLEVBQUUsR0FBRWxCLEtBQUdBLEVBQUVlLEdBQUcsQ0FBQ0MsR0FBRUUsRUFBQyxHQUFHQSxDQUFDLENBQUMsRUFBRSxDQUFDaEMsRUFBRSxHQUFDTyxHQUFFeUIsQ0FBQyxDQUFDLEVBQUUsQ0FBQ3pCLENBQUMsR0FBQ08sR0FBRWtCLENBQUMsQ0FBQyxFQUFFLENBQUNqQyxDQUFDLEdBQUMwQixHQUFFTyxDQUFDLENBQUMsRUFBRSxDQUFDUCxDQUFDO0FBQUEsR0FBRUEsSUFBRSxDQUFDNUIsR0FBRUUsR0FBRUMsR0FBRUU7SUFBSyxJQUFHRyxPQUFPbUMsRUFBRSxDQUFDM0MsR0FBRUUsSUFBRyxPQUFNLENBQUM7SUFBRSxJQUFHLENBQUNlLEVBQUVqQixNQUFJLENBQUNpQixFQUFFZixJQUFHLE9BQU0sQ0FBQztJQUFFLE1BQU1LLElBQUVKLEVBQUVXLEdBQUcsQ0FBQ1ksRUFBRTFCO0lBQUksSUFBRyxDQUFDTyxHQUFFLE9BQU0sQ0FBQztJQUFFLElBQUdGLEdBQUU7UUFBQyxNQUFNRixJQUFFRSxFQUFFUyxHQUFHLENBQUNkO1FBQUcsSUFBR0csS0FBR0EsRUFBRUMsQ0FBQyxLQUFHRixHQUFFLE9BQU9DLEVBQUUwQixDQUFDO1FBQUN4QixFQUFFMkIsR0FBRyxDQUFDaEMsR0FBRTtZQUFDSSxHQUFFRjtZQUFFMkIsR0FBRSxDQUFDO1FBQUM7SUFBRTtJQUFDLElBQUluQixJQUFFO0lBQUssSUFBRztRQUFDLEtBQUksTUFBTVAsS0FBS0ksRUFBRTJCLENBQUMsSUFBRSxFQUFFLENBQUMsSUFBR3hCLElBQUU0QixRQUFRekIsR0FBRyxDQUFDYixHQUFFRyxPQUFLbUMsUUFBUXpCLEdBQUcsQ0FBQ1gsR0FBRUMsSUFBR08sR0FBRSxPQUFPQTtRQUFFLElBQUcsQ0FBQyxNQUFJSCxDQUFDLENBQUNILEVBQUUsRUFBQztZQUFDLElBQUdNLElBQUUsQ0FBQyxDQUFDVixHQUFFRTtnQkFBSyxNQUFNQyxJQUFFbUMsUUFBUUcsT0FBTyxDQUFDekMsSUFBR0ksSUFBRWtDLFFBQVFHLE9BQU8sQ0FBQ3ZDO2dCQUFHLE9BQU9DLEVBQUV5QyxNQUFNLEtBQUd4QyxFQUFFd0MsTUFBTSxJQUFFekMsRUFBRTJCLElBQUksQ0FBQyxDQUFDOUIsR0FBRUUsSUFBSUYsTUFBSUksQ0FBQyxDQUFDRixFQUFFO1lBQUMsR0FBR0YsR0FBRUUsSUFBR1EsR0FBRSxPQUFPQTtRQUFDLE9BQU0sS0FBSSxNQUFNUCxLQUFLSSxFQUFFRixDQUFDLElBQUUsRUFBRSxDQUFDLElBQUdLLElBQUUsQ0FBQyxDQUFDNEIsUUFBUUUsd0JBQXdCLENBQUN4QyxHQUFFRyxNQUFJLENBQUMsQ0FBQ21DLFFBQVFFLHdCQUF3QixDQUFDdEMsR0FBRUMsSUFBR08sR0FBRSxPQUFPQTtRQUFFLEtBQUksTUFBTU4sS0FBS0csRUFBRXNDLENBQUMsSUFBRSxFQUFFLENBQUMsSUFBR25DLElBQUVrQixFQUFFNUIsQ0FBQyxDQUFDSSxFQUFFLEVBQUNGLENBQUMsQ0FBQ0UsRUFBRSxFQUFDRCxHQUFFRSxJQUFHSyxHQUFFLE9BQU9BO1FBQUUsT0FBTyxTQUFPQSxLQUFJQSxDQUFBQSxJQUFFLENBQUMsSUFBR0E7SUFBQyxTQUFRO1FBQUNMLEtBQUdBLEVBQUUyQixHQUFHLENBQUNoQyxHQUFFO1lBQUNJLEdBQUVGO1lBQUUyQixHQUFFbkI7UUFBQztJQUFFO0FBQUMsR0FBRW1CLElBQUUzQixDQUFBQSxJQUFHLENBQUMsQ0FBQ1UsRUFBRVYsTUFBSUYsS0FBS0UsR0FBRStCLElBQUVqQyxDQUFBQSxJQUFHWSxFQUFFWixNQUFJQSxDQUFDLENBQUNFLEVBQUUsSUFBRSxNQUFLZ0MsSUFBRSxTQUFDbEM7UUFBRUUscUVBQUUsQ0FBQztJQUFLUSxFQUFFc0IsR0FBRyxDQUFDaEMsR0FBRUU7QUFBRSxHQUFFaUMsSUFBRSxDQUFDbkMsR0FBRUUsR0FBRUM7SUFBSyxNQUFNRSxJQUFFLEVBQUUsRUFBQ0UsSUFBRSxJQUFJdUMsU0FBUXBDLElBQUUsQ0FBQ1YsR0FBRVk7UUFBSyxJQUFHTCxFQUFFTSxHQUFHLENBQUNiLElBQUc7UUFBT2lCLEVBQUVqQixNQUFJTyxFQUFFOEIsR0FBRyxDQUFDckM7UUFBRyxNQUFNa0IsSUFBRUQsRUFBRWpCLE1BQUlFLEVBQUVZLEdBQUcsQ0FBQ1ksRUFBRTFCO1FBQUksSUFBR2tCLEdBQUU7WUFBQyxJQUFJUyxHQUFFQztZQUFFLElBQUcsUUFBT0QsQ0FBQUEsSUFBRVQsRUFBRWdCLENBQUMsS0FBR1AsRUFBRUosT0FBTyxDQUFDdkIsQ0FBQUE7Z0JBQUksTUFBTUUsSUFBRSxRQUFrQixPQUFWNkMsT0FBTy9DLElBQUc7Z0JBQUdLLEVBQUUyQyxJQUFJLENBQUNwQyxJQUFFO3VCQUFJQTtvQkFBRVY7aUJBQUUsR0FBQztvQkFBQ0E7aUJBQUU7WUFBQyxJQUFHLENBQUMsTUFBSWdCLENBQUMsQ0FBQ2QsRUFBRSxFQUFDO2dCQUFDLE1BQU1KLElBQUU7Z0JBQVdLLEVBQUUyQyxJQUFJLENBQUNwQyxJQUFFO3VCQUFJQTtvQkFBRVo7aUJBQUUsR0FBQztvQkFBQ0E7aUJBQUU7WUFBQyxPQUFLO2dCQUFDLElBQUk2QjtnQkFBRSxRQUFPQSxDQUFBQSxJQUFFWCxFQUFFYixDQUFDLEtBQUd3QixFQUFFTixPQUFPLENBQUN2QixDQUFBQTtvQkFBSSxNQUFNRSxJQUFFLFdBQXFCLE9BQVY2QyxPQUFPL0MsSUFBRztvQkFBR0ssRUFBRTJDLElBQUksQ0FBQ3BDLElBQUU7MkJBQUlBO3dCQUFFVjtxQkFBRSxHQUFDO3dCQUFDQTtxQkFBRTtnQkFBQztZQUFFO1lBQUMsUUFBTzBCLENBQUFBLElBQUVWLEVBQUUyQixDQUFDLEtBQUdqQixFQUFFTCxPQUFPLENBQUNyQixDQUFBQTtnQkFBSUMsS0FBRyxDQUFFLFlBQVVLLENBQUFBLE9BQU9nQyx3QkFBd0IsQ0FBQ3hDLEdBQUVFLE1BQUksQ0FBQyxFQUFDLEtBQUlRLEVBQUVWLENBQUMsQ0FBQ0UsRUFBRSxFQUFDVSxJQUFFO3VCQUFJQTtvQkFBRVY7aUJBQUUsR0FBQztvQkFBQ0E7aUJBQUU7WUFBQztRQUFFLE9BQU1VLEtBQUdQLEVBQUUyQyxJQUFJLENBQUNwQztJQUFFO0lBQUUsT0FBT0YsRUFBRVYsSUFBR0s7QUFBQyxHQUFFNEMsSUFBRWpELENBQUFBO0lBQUlLLElBQUVMO0FBQUM7QUFBeUksQ0FDN2dGLHlDQUF5QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvLnBucG0vcHJveHktY29tcGFyZUAyLjUuMS9ub2RlX21vZHVsZXMvcHJveHktY29tcGFyZS9kaXN0L2luZGV4Lm1vZGVybi5qcz81ZGE2Il0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGU9U3ltYm9sKCksdD1TeW1ib2woKSxyPVwiYVwiLG49XCJ3XCI7bGV0IG89KGUsdCk9Pm5ldyBQcm94eShlLHQpO2NvbnN0IHM9T2JqZWN0LmdldFByb3RvdHlwZU9mLGM9bmV3IFdlYWtNYXAsbD1lPT5lJiYoYy5oYXMoZSk/Yy5nZXQoZSk6cyhlKT09PU9iamVjdC5wcm90b3R5cGV8fHMoZSk9PT1BcnJheS5wcm90b3R5cGUpLGY9ZT0+XCJvYmplY3RcIj09dHlwZW9mIGUmJm51bGwhPT1lLGk9ZT0+e2lmKEFycmF5LmlzQXJyYXkoZSkpcmV0dXJuIEFycmF5LmZyb20oZSk7Y29uc3QgdD1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhlKTtyZXR1cm4gT2JqZWN0LnZhbHVlcyh0KS5mb3JFYWNoKGU9PntlLmNvbmZpZ3VyYWJsZT0hMH0pLE9iamVjdC5jcmVhdGUocyhlKSx0KX0sdT1lPT5lW3RdfHxlLGE9KHMsYyxmLHApPT57aWYoIWwocykpcmV0dXJuIHM7bGV0IGc9cCYmcC5nZXQocyk7aWYoIWcpe2NvbnN0IGU9dShzKTtnPShlPT5PYmplY3QudmFsdWVzKE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKGUpKS5zb21lKGU9PiFlLmNvbmZpZ3VyYWJsZSYmIWUud3JpdGFibGUpKShlKT9bZSxpKGUpXTpbZV0sbnVsbD09cHx8cC5zZXQocyxnKX1jb25zdFt5LGhdPWc7bGV0IHc9ZiYmZi5nZXQoeSk7cmV0dXJuIHcmJndbMV0uZj09PSEhaHx8KHc9KChvLHMpPT57Y29uc3QgYz17ZjpzfTtsZXQgbD0hMTtjb25zdCBmPShlLHQpPT57aWYoIWwpe2xldCBzPWNbcl0uZ2V0KG8pO2lmKHN8fChzPXt9LGNbcl0uc2V0KG8scykpLGU9PT1uKXNbbl09ITA7ZWxzZXtsZXQgcj1zW2VdO3J8fChyPW5ldyBTZXQsc1tlXT1yKSxyLmFkZCh0KX19fSxpPXtnZXQ6KGUsbik9Pm49PT10P286KGYoXCJrXCIsbiksYShSZWZsZWN0LmdldChlLG4pLGNbcl0sYy5jLGMudCkpLGhhczoodCxuKT0+bj09PWU/KGw9ITAsY1tyXS5kZWxldGUobyksITApOihmKFwiaFwiLG4pLFJlZmxlY3QuaGFzKHQsbikpLGdldE93blByb3BlcnR5RGVzY3JpcHRvcjooZSx0KT0+KGYoXCJvXCIsdCksUmVmbGVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoZSx0KSksb3duS2V5czplPT4oZihuKSxSZWZsZWN0Lm93bktleXMoZSkpfTtyZXR1cm4gcyYmKGkuc2V0PWkuZGVsZXRlUHJvcGVydHk9KCk9PiExKSxbaSxjXX0pKHksISFoKSx3WzFdLnA9byhofHx5LHdbMF0pLGYmJmYuc2V0KHksdykpLHdbMV1bcl09Yyx3WzFdLmM9Zix3WzFdLnQ9cCx3WzFdLnB9LHA9KGUsdCxyLG8pPT57aWYoT2JqZWN0LmlzKGUsdCkpcmV0dXJuITE7aWYoIWYoZSl8fCFmKHQpKXJldHVybiEwO2NvbnN0IHM9ci5nZXQodShlKSk7aWYoIXMpcmV0dXJuITA7aWYobyl7Y29uc3Qgcj1vLmdldChlKTtpZihyJiZyLm49PT10KXJldHVybiByLmc7by5zZXQoZSx7bjp0LGc6ITF9KX1sZXQgYz1udWxsO3RyeXtmb3IoY29uc3QgciBvZiBzLmh8fFtdKWlmKGM9UmVmbGVjdC5oYXMoZSxyKSE9PVJlZmxlY3QuaGFzKHQsciksYylyZXR1cm4gYztpZighMD09PXNbbl0pe2lmKGM9KChlLHQpPT57Y29uc3Qgcj1SZWZsZWN0Lm93bktleXMoZSksbj1SZWZsZWN0Lm93bktleXModCk7cmV0dXJuIHIubGVuZ3RoIT09bi5sZW5ndGh8fHIuc29tZSgoZSx0KT0+ZSE9PW5bdF0pfSkoZSx0KSxjKXJldHVybiBjfWVsc2UgZm9yKGNvbnN0IHIgb2Ygcy5vfHxbXSlpZihjPSEhUmVmbGVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoZSxyKSE9ISFSZWZsZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcih0LHIpLGMpcmV0dXJuIGM7Zm9yKGNvbnN0IG4gb2Ygcy5rfHxbXSlpZihjPXAoZVtuXSx0W25dLHIsbyksYylyZXR1cm4gYztyZXR1cm4gbnVsbD09PWMmJihjPSEwKSxjfWZpbmFsbHl7byYmby5zZXQoZSx7bjp0LGc6Y30pfX0sZz10PT4hIWwodCkmJmUgaW4gdCx5PWU9PmwoZSkmJmVbdF18fG51bGwsaD0oZSx0PSEwKT0+e2Muc2V0KGUsdCl9LHc9KGUsdCxyKT0+e2NvbnN0IG89W10scz1uZXcgV2Vha1NldCxjPShlLGwpPT57aWYocy5oYXMoZSkpcmV0dXJuO2YoZSkmJnMuYWRkKGUpO2NvbnN0IGk9ZihlKSYmdC5nZXQodShlKSk7aWYoaSl7dmFyIGEscDtpZihudWxsPT0oYT1pLmgpfHxhLmZvckVhY2goZT0+e2NvbnN0IHQ9YDpoYXMoJHtTdHJpbmcoZSl9KWA7by5wdXNoKGw/Wy4uLmwsdF06W3RdKX0pLCEwPT09aVtuXSl7Y29uc3QgZT1cIjpvd25LZXlzXCI7by5wdXNoKGw/Wy4uLmwsZV06W2VdKX1lbHNle3ZhciBnO251bGw9PShnPWkubyl8fGcuZm9yRWFjaChlPT57Y29uc3QgdD1gOmhhc093bigke1N0cmluZyhlKX0pYDtvLnB1c2gobD9bLi4ubCx0XTpbdF0pfSl9bnVsbD09KHA9aS5rKXx8cC5mb3JFYWNoKHQ9PntyJiYhKFwidmFsdWVcImluKE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoZSx0KXx8e30pKXx8YyhlW3RdLGw/Wy4uLmwsdF06W3RdKX0pfWVsc2UgbCYmby5wdXNoKGwpfTtyZXR1cm4gYyhlKSxvfSxPPWU9PntvPWV9O2V4cG9ydHt3IGFzIGFmZmVjdGVkVG9QYXRoTGlzdCxhIGFzIGNyZWF0ZVByb3h5LHkgYXMgZ2V0VW50cmFja2VkLHAgYXMgaXNDaGFuZ2VkLGggYXMgbWFya1RvVHJhY2ssTyBhcyByZXBsYWNlTmV3UHJveHksZyBhcyB0cmFja01lbW99O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXgubW9kZXJuLm1qcy5tYXBcbiJdLCJuYW1lcyI6WyJlIiwiU3ltYm9sIiwidCIsInIiLCJuIiwibyIsIlByb3h5IiwicyIsIk9iamVjdCIsImdldFByb3RvdHlwZU9mIiwiYyIsIldlYWtNYXAiLCJsIiwiaGFzIiwiZ2V0IiwicHJvdG90eXBlIiwiQXJyYXkiLCJmIiwiaSIsImlzQXJyYXkiLCJmcm9tIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyIsInZhbHVlcyIsImZvckVhY2giLCJjb25maWd1cmFibGUiLCJjcmVhdGUiLCJ1IiwiYSIsInAiLCJnIiwic29tZSIsIndyaXRhYmxlIiwic2V0IiwieSIsImgiLCJ3IiwiU2V0IiwiYWRkIiwiUmVmbGVjdCIsImRlbGV0ZSIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsIm93bktleXMiLCJkZWxldGVQcm9wZXJ0eSIsImlzIiwibGVuZ3RoIiwiayIsIldlYWtTZXQiLCJTdHJpbmciLCJwdXNoIiwiTyIsImFmZmVjdGVkVG9QYXRoTGlzdCIsImNyZWF0ZVByb3h5IiwiZ2V0VW50cmFja2VkIiwiaXNDaGFuZ2VkIiwibWFya1RvVHJhY2siLCJyZXBsYWNlTmV3UHJveHkiLCJ0cmFja01lbW8iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/proxy-compare@2.5.1/node_modules/proxy-compare/dist/index.modern.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/@walletconnect+modal-core@2.6.2_@types+react@18.2.56_react@18.2.0/node_modules/@walletconnect/modal-core/dist/index.js":
/*!***************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@walletconnect+modal-core@2.6.2_@types+react@18.2.56_react@18.2.0/node_modules/@walletconnect/modal-core/dist/index.js ***!
  \***************************************************************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ConfigCtrl: function() { return /* binding */ y; },\n/* harmony export */   CoreUtil: function() { return /* binding */ a; },\n/* harmony export */   EventsCtrl: function() { return /* binding */ R; },\n/* harmony export */   ExplorerCtrl: function() { return /* binding */ te; },\n/* harmony export */   ModalCtrl: function() { return /* binding */ se; },\n/* harmony export */   OptionsCtrl: function() { return /* binding */ p; },\n/* harmony export */   RouterCtrl: function() { return /* binding */ T; },\n/* harmony export */   ThemeCtrl: function() { return /* binding */ ne; },\n/* harmony export */   ToastCtrl: function() { return /* binding */ oe; }\n/* harmony export */ });\n/* harmony import */ var valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! valtio/vanilla */ \"(app-pages-browser)/./node_modules/.pnpm/valtio@1.11.2_@types+react@18.2.56_react@18.2.0/node_modules/valtio/esm/vanilla.mjs\");\n\nconst o = (0,valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__.proxy)({\n    history: [\n        \"ConnectWallet\"\n    ],\n    view: \"ConnectWallet\",\n    data: void 0\n}), T = {\n    state: o,\n    subscribe (e) {\n        return (0,valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__.subscribe)(o, ()=>e(o));\n    },\n    push (e, t) {\n        e !== o.view && (o.view = e, t && (o.data = t), o.history.push(e));\n    },\n    reset (e) {\n        o.view = e, o.history = [\n            e\n        ];\n    },\n    replace (e) {\n        o.history.length > 1 && (o.history[o.history.length - 1] = e, o.view = e);\n    },\n    goBack () {\n        if (o.history.length > 1) {\n            o.history.pop();\n            const [e] = o.history.slice(-1);\n            o.view = e;\n        }\n    },\n    setData (e) {\n        o.data = e;\n    }\n}, a = {\n    WALLETCONNECT_DEEPLINK_CHOICE: \"WALLETCONNECT_DEEPLINK_CHOICE\",\n    WCM_VERSION: \"WCM_VERSION\",\n    RECOMMENDED_WALLET_AMOUNT: 9,\n    isMobile () {\n        return  true ? Boolean(window.matchMedia(\"(pointer:coarse)\").matches || /Android|webOS|iPhone|iPad|iPod|BlackBerry|Opera Mini/u.test(navigator.userAgent)) : 0;\n    },\n    isAndroid () {\n        return a.isMobile() && navigator.userAgent.toLowerCase().includes(\"android\");\n    },\n    isIos () {\n        const e = navigator.userAgent.toLowerCase();\n        return a.isMobile() && (e.includes(\"iphone\") || e.includes(\"ipad\"));\n    },\n    isHttpUrl (e) {\n        return e.startsWith(\"http://\") || e.startsWith(\"https://\");\n    },\n    isArray (e) {\n        return Array.isArray(e) && e.length > 0;\n    },\n    formatNativeUrl (e, t, s) {\n        if (a.isHttpUrl(e)) return this.formatUniversalUrl(e, t, s);\n        let n = e;\n        n.includes(\"://\") || (n = e.replaceAll(\"/\", \"\").replaceAll(\":\", \"\"), n = \"\".concat(n, \"://\")), n.endsWith(\"/\") || (n = \"\".concat(n, \"/\")), this.setWalletConnectDeepLink(n, s);\n        const i = encodeURIComponent(t);\n        return \"\".concat(n, \"wc?uri=\").concat(i);\n    },\n    formatUniversalUrl (e, t, s) {\n        if (!a.isHttpUrl(e)) return this.formatNativeUrl(e, t, s);\n        let n = e;\n        n.endsWith(\"/\") || (n = \"\".concat(n, \"/\")), this.setWalletConnectDeepLink(n, s);\n        const i = encodeURIComponent(t);\n        return \"\".concat(n, \"wc?uri=\").concat(i);\n    },\n    async wait (e) {\n        return new Promise((t)=>{\n            setTimeout(t, e);\n        });\n    },\n    openHref (e, t) {\n        window.open(e, t, \"noreferrer noopener\");\n    },\n    setWalletConnectDeepLink (e, t) {\n        try {\n            localStorage.setItem(a.WALLETCONNECT_DEEPLINK_CHOICE, JSON.stringify({\n                href: e,\n                name: t\n            }));\n        } catch (e) {\n            console.info(\"Unable to set WalletConnect deep link\");\n        }\n    },\n    setWalletConnectAndroidDeepLink (e) {\n        try {\n            const [t] = e.split(\"?\");\n            localStorage.setItem(a.WALLETCONNECT_DEEPLINK_CHOICE, JSON.stringify({\n                href: t,\n                name: \"Android\"\n            }));\n        } catch (e) {\n            console.info(\"Unable to set WalletConnect android deep link\");\n        }\n    },\n    removeWalletConnectDeepLink () {\n        try {\n            localStorage.removeItem(a.WALLETCONNECT_DEEPLINK_CHOICE);\n        } catch (e) {\n            console.info(\"Unable to remove WalletConnect deep link\");\n        }\n    },\n    setModalVersionInStorage () {\n        try {\n            typeof localStorage < \"u\" && localStorage.setItem(a.WCM_VERSION, \"2.6.2\");\n        } catch (e) {\n            console.info(\"Unable to set Web3Modal version in storage\");\n        }\n    },\n    getWalletRouterData () {\n        var e;\n        const t = (e = T.state.data) == null ? void 0 : e.Wallet;\n        if (!t) throw new Error('Missing \"Wallet\" view data');\n        return t;\n    }\n}, _ = typeof location < \"u\" && (location.hostname.includes(\"localhost\") || location.protocol.includes(\"https\")), r = (0,valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__.proxy)({\n    enabled: _,\n    userSessionId: \"\",\n    events: [],\n    connectedWalletId: void 0\n}), R = {\n    state: r,\n    subscribe (e) {\n        return (0,valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__.subscribe)(r.events, ()=>e((0,valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__.snapshot)(r.events[r.events.length - 1])));\n    },\n    initialize () {\n        r.enabled && typeof (crypto == null ? void 0 : crypto.randomUUID) < \"u\" && (r.userSessionId = crypto.randomUUID());\n    },\n    setConnectedWalletId (e) {\n        r.connectedWalletId = e;\n    },\n    click (e) {\n        if (r.enabled) {\n            const t = {\n                type: \"CLICK\",\n                name: e.name,\n                userSessionId: r.userSessionId,\n                timestamp: Date.now(),\n                data: e\n            };\n            r.events.push(t);\n        }\n    },\n    track (e) {\n        if (r.enabled) {\n            const t = {\n                type: \"TRACK\",\n                name: e.name,\n                userSessionId: r.userSessionId,\n                timestamp: Date.now(),\n                data: e\n            };\n            r.events.push(t);\n        }\n    },\n    view (e) {\n        if (r.enabled) {\n            const t = {\n                type: \"VIEW\",\n                name: e.name,\n                userSessionId: r.userSessionId,\n                timestamp: Date.now(),\n                data: e\n            };\n            r.events.push(t);\n        }\n    }\n}, c = (0,valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__.proxy)({\n    chains: void 0,\n    walletConnectUri: void 0,\n    isAuth: !1,\n    isCustomDesktop: !1,\n    isCustomMobile: !1,\n    isDataLoaded: !1,\n    isUiLoaded: !1\n}), p = {\n    state: c,\n    subscribe (e) {\n        return (0,valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__.subscribe)(c, ()=>e(c));\n    },\n    setChains (e) {\n        c.chains = e;\n    },\n    setWalletConnectUri (e) {\n        c.walletConnectUri = e;\n    },\n    setIsCustomDesktop (e) {\n        c.isCustomDesktop = e;\n    },\n    setIsCustomMobile (e) {\n        c.isCustomMobile = e;\n    },\n    setIsDataLoaded (e) {\n        c.isDataLoaded = e;\n    },\n    setIsUiLoaded (e) {\n        c.isUiLoaded = e;\n    },\n    setIsAuth (e) {\n        c.isAuth = e;\n    }\n}, W = (0,valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__.proxy)({\n    projectId: \"\",\n    mobileWallets: void 0,\n    desktopWallets: void 0,\n    walletImages: void 0,\n    chains: void 0,\n    enableAuthMode: !1,\n    enableExplorer: !0,\n    explorerExcludedWalletIds: void 0,\n    explorerRecommendedWalletIds: void 0,\n    termsOfServiceUrl: void 0,\n    privacyPolicyUrl: void 0\n}), y = {\n    state: W,\n    subscribe (e) {\n        return (0,valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__.subscribe)(W, ()=>e(W));\n    },\n    setConfig (e) {\n        var t, s;\n        R.initialize(), p.setChains(e.chains), p.setIsAuth(Boolean(e.enableAuthMode)), p.setIsCustomMobile(Boolean((t = e.mobileWallets) == null ? void 0 : t.length)), p.setIsCustomDesktop(Boolean((s = e.desktopWallets) == null ? void 0 : s.length)), a.setModalVersionInStorage(), Object.assign(W, e);\n    }\n};\nvar V = Object.defineProperty, D = Object.getOwnPropertySymbols, H = Object.prototype.hasOwnProperty, B = Object.prototype.propertyIsEnumerable, M = (e, t, s)=>t in e ? V(e, t, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: s\n    }) : e[t] = s, K = (e, t)=>{\n    for(var s in t || (t = {}))H.call(t, s) && M(e, s, t[s]);\n    if (D) for (var s of D(t))B.call(t, s) && M(e, s, t[s]);\n    return e;\n};\nconst L = \"https://explorer-api.walletconnect.com\", E = \"wcm\", O = \"js-2.6.2\";\nasync function w(e, t) {\n    const s = K({\n        sdkType: E,\n        sdkVersion: O\n    }, t), n = new URL(e, L);\n    return n.searchParams.append(\"projectId\", y.state.projectId), Object.entries(s).forEach((param)=>{\n        let [i, l] = param;\n        l && n.searchParams.append(i, String(l));\n    }), (await fetch(n)).json();\n}\nconst m = {\n    async getDesktopListings (e) {\n        return w(\"/w3m/v1/getDesktopListings\", e);\n    },\n    async getMobileListings (e) {\n        return w(\"/w3m/v1/getMobileListings\", e);\n    },\n    async getInjectedListings (e) {\n        return w(\"/w3m/v1/getInjectedListings\", e);\n    },\n    async getAllListings (e) {\n        return w(\"/w3m/v1/getAllListings\", e);\n    },\n    getWalletImageUrl (e) {\n        return \"\".concat(L, \"/w3m/v1/getWalletImage/\").concat(e, \"?projectId=\").concat(y.state.projectId, \"&sdkType=\").concat(E, \"&sdkVersion=\").concat(O);\n    },\n    getAssetImageUrl (e) {\n        return \"\".concat(L, \"/w3m/v1/getAssetImage/\").concat(e, \"?projectId=\").concat(y.state.projectId, \"&sdkType=\").concat(E, \"&sdkVersion=\").concat(O);\n    }\n};\nvar z = Object.defineProperty, j = Object.getOwnPropertySymbols, J = Object.prototype.hasOwnProperty, q = Object.prototype.propertyIsEnumerable, k = (e, t, s)=>t in e ? z(e, t, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: s\n    }) : e[t] = s, F = (e, t)=>{\n    for(var s in t || (t = {}))J.call(t, s) && k(e, s, t[s]);\n    if (j) for (var s of j(t))q.call(t, s) && k(e, s, t[s]);\n    return e;\n};\nconst N = a.isMobile(), d = (0,valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__.proxy)({\n    wallets: {\n        listings: [],\n        total: 0,\n        page: 1\n    },\n    search: {\n        listings: [],\n        total: 0,\n        page: 1\n    },\n    recomendedWallets: []\n}), te = {\n    state: d,\n    async getRecomendedWallets () {\n        const { explorerRecommendedWalletIds: e, explorerExcludedWalletIds: t } = y.state;\n        if (e === \"NONE\" || t === \"ALL\" && !e) return d.recomendedWallets;\n        if (a.isArray(e)) {\n            const s = {\n                recommendedIds: e.join(\",\")\n            }, { listings: n } = await m.getAllListings(s), i = Object.values(n);\n            i.sort((l, v)=>{\n                const b = e.indexOf(l.id), f = e.indexOf(v.id);\n                return b - f;\n            }), d.recomendedWallets = i;\n        } else {\n            const { chains: s, isAuth: n } = p.state, i = s === null || s === void 0 ? void 0 : s.join(\",\"), l = a.isArray(t), v = {\n                page: 1,\n                sdks: n ? \"auth_v1\" : void 0,\n                entries: a.RECOMMENDED_WALLET_AMOUNT,\n                chains: i,\n                version: 2,\n                excludedIds: l ? t.join(\",\") : void 0\n            }, { listings: b } = N ? await m.getMobileListings(v) : await m.getDesktopListings(v);\n            d.recomendedWallets = Object.values(b);\n        }\n        return d.recomendedWallets;\n    },\n    async getWallets (e) {\n        const t = F({}, e), { explorerRecommendedWalletIds: s, explorerExcludedWalletIds: n } = y.state, { recomendedWallets: i } = d;\n        if (n === \"ALL\") return d.wallets;\n        i.length ? t.excludedIds = i.map((x)=>x.id).join(\",\") : a.isArray(s) && (t.excludedIds = s.join(\",\")), a.isArray(n) && (t.excludedIds = [\n            t.excludedIds,\n            n\n        ].filter(Boolean).join(\",\")), p.state.isAuth && (t.sdks = \"auth_v1\");\n        const { page: l, search: v } = e, { listings: b, total: f } = N ? await m.getMobileListings(t) : await m.getDesktopListings(t), A = Object.values(b), U = v ? \"search\" : \"wallets\";\n        return d[U] = {\n            listings: [\n                ...d[U].listings,\n                ...A\n            ],\n            total: f,\n            page: l !== null && l !== void 0 ? l : 1\n        }, {\n            listings: A,\n            total: f\n        };\n    },\n    getWalletImageUrl (e) {\n        return m.getWalletImageUrl(e);\n    },\n    getAssetImageUrl (e) {\n        return m.getAssetImageUrl(e);\n    },\n    resetSearch () {\n        d.search = {\n            listings: [],\n            total: 0,\n            page: 1\n        };\n    }\n}, I = (0,valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__.proxy)({\n    open: !1\n}), se = {\n    state: I,\n    subscribe (e) {\n        return (0,valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__.subscribe)(I, ()=>e(I));\n    },\n    async open (e) {\n        return new Promise((t)=>{\n            const { isUiLoaded: s, isDataLoaded: n } = p.state;\n            if (a.removeWalletConnectDeepLink(), p.setWalletConnectUri(e === null || e === void 0 ? void 0 : e.uri), p.setChains(e === null || e === void 0 ? void 0 : e.chains), T.reset(\"ConnectWallet\"), s && n) I.open = !0, t();\n            else {\n                const i = setInterval(()=>{\n                    const l = p.state;\n                    l.isUiLoaded && l.isDataLoaded && (clearInterval(i), I.open = !0, t());\n                }, 200);\n            }\n        });\n    },\n    close () {\n        I.open = !1;\n    }\n};\nvar G = Object.defineProperty, $ = Object.getOwnPropertySymbols, Q = Object.prototype.hasOwnProperty, X = Object.prototype.propertyIsEnumerable, S = (e, t, s)=>t in e ? G(e, t, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: s\n    }) : e[t] = s, Y = (e, t)=>{\n    for(var s in t || (t = {}))Q.call(t, s) && S(e, s, t[s]);\n    if ($) for (var s of $(t))X.call(t, s) && S(e, s, t[s]);\n    return e;\n};\nfunction Z() {\n    return typeof matchMedia < \"u\" && matchMedia(\"(prefers-color-scheme: dark)\").matches;\n}\n_c = Z;\nconst C = (0,valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__.proxy)({\n    themeMode: Z() ? \"dark\" : \"light\"\n}), ne = {\n    state: C,\n    subscribe (e) {\n        return (0,valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__.subscribe)(C, ()=>e(C));\n    },\n    setThemeConfig (e) {\n        const { themeMode: t, themeVariables: s } = e;\n        t && (C.themeMode = t), s && (C.themeVariables = Y({}, s));\n    }\n}, g = (0,valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__.proxy)({\n    open: !1,\n    message: \"\",\n    variant: \"success\"\n}), oe = {\n    state: g,\n    subscribe (e) {\n        return (0,valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__.subscribe)(g, ()=>e(g));\n    },\n    openToast (e, t) {\n        g.open = !0, g.message = e, g.variant = t;\n    },\n    closeToast () {\n        g.open = !1;\n    }\n};\n //# sourceMappingURL=index.js.map\nvar _c;\n$RefreshReg$(_c, \"Z\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/@walletconnect+modal-core@2.6.2_@types+react@18.2.56_react@18.2.0/node_modules/@walletconnect/modal-core/dist/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/@walletconnect+modal@2.6.2_@types+react@18.2.56_react@18.2.0/node_modules/@walletconnect/modal/dist/index.js":
/*!*****************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@walletconnect+modal@2.6.2_@types+react@18.2.56_react@18.2.0/node_modules/@walletconnect/modal/dist/index.js ***!
  \*****************************************************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WalletConnectModal: function() { return /* binding */ d; }\n/* harmony export */ });\n/* harmony import */ var _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @walletconnect/modal-core */ \"(app-pages-browser)/./node_modules/.pnpm/@walletconnect+modal-core@2.6.2_@types+react@18.2.56_react@18.2.0/node_modules/@walletconnect/modal-core/dist/index.js\");\n\nclass d {\n    async initUi() {\n        if (true) {\n            await __webpack_require__.e(/*! import() */ \"_app-pages-browser_node_modules_pnpm_walletconnect_modal-ui_2_6_2__types_react_18_2_56_react_-4d06a4\").then(__webpack_require__.bind(__webpack_require__, /*! @walletconnect/modal-ui */ \"(app-pages-browser)/./node_modules/.pnpm/@walletconnect+modal-ui@2.6.2_@types+react@18.2.56_react@18.2.0/node_modules/@walletconnect/modal-ui/dist/index.js\"));\n            const e = document.createElement(\"wcm-modal\");\n            document.body.insertAdjacentElement(\"beforeend\", e), _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_0__.OptionsCtrl.setIsUiLoaded(!0);\n        }\n    }\n    constructor(e){\n        this.openModal = _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_0__.ModalCtrl.open, this.closeModal = _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_0__.ModalCtrl.close, this.subscribeModal = _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_0__.ModalCtrl.subscribe, this.setTheme = _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_0__.ThemeCtrl.setThemeConfig, _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_0__.ThemeCtrl.setThemeConfig(e), _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_0__.ConfigCtrl.setConfig(e), this.initUi();\n    }\n}\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9Ad2FsbGV0Y29ubmVjdCttb2RhbEAyLjYuMl9AdHlwZXMrcmVhY3RAMTguMi41Nl9yZWFjdEAxOC4yLjAvbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L21vZGFsL2Rpc3QvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBc0c7QUFBQSxNQUFNUTtJQUErSyxNQUFNQyxTQUFRO1FBQUMsSUFBRyxJQUFpQixFQUFDO1lBQUMsTUFBTSwrWEFBaUM7WUFBQyxNQUFNQyxJQUFFQyxTQUFTQyxhQUFhLENBQUM7WUFBYUQsU0FBU0UsSUFBSSxDQUFDQyxxQkFBcUIsQ0FBQyxhQUFZSixJQUFHSCxrRUFBQ0EsQ0FBQ1EsYUFBYSxDQUFDLENBQUM7UUFBRTtJQUFDO0lBQTdXQyxZQUFZTixDQUFDLENBQUM7UUFBQyxJQUFJLENBQUNPLFNBQVMsR0FBQ2hCLGdFQUFDQSxDQUFDaUIsSUFBSSxFQUFDLElBQUksQ0FBQ0MsVUFBVSxHQUFDbEIsZ0VBQUNBLENBQUNtQixLQUFLLEVBQUMsSUFBSSxDQUFDQyxjQUFjLEdBQUNwQixnRUFBQ0EsQ0FBQ3FCLFNBQVMsRUFBQyxJQUFJLENBQUNDLFFBQVEsR0FBQ3BCLGdFQUFDQSxDQUFDcUIsY0FBYyxFQUFDckIsZ0VBQUNBLENBQUNxQixjQUFjLENBQUNkLElBQUdMLGlFQUFDQSxDQUFDb0IsU0FBUyxDQUFDZixJQUFHLElBQUksQ0FBQ0QsTUFBTTtJQUFFO0FBQWtNO0FBQWlDLENBQzdmLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvLnBucG0vQHdhbGxldGNvbm5lY3QrbW9kYWxAMi42LjJfQHR5cGVzK3JlYWN0QDE4LjIuNTZfcmVhY3RAMTguMi4wL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9tb2RhbC9kaXN0L2luZGV4LmpzP2ExMzMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0e01vZGFsQ3RybCBhcyB0LFRoZW1lQ3RybCBhcyBvLENvbmZpZ0N0cmwgYXMgaSxPcHRpb25zQ3RybCBhcyBufWZyb21cIkB3YWxsZXRjb25uZWN0L21vZGFsLWNvcmVcIjtjbGFzcyBke2NvbnN0cnVjdG9yKGUpe3RoaXMub3Blbk1vZGFsPXQub3Blbix0aGlzLmNsb3NlTW9kYWw9dC5jbG9zZSx0aGlzLnN1YnNjcmliZU1vZGFsPXQuc3Vic2NyaWJlLHRoaXMuc2V0VGhlbWU9by5zZXRUaGVtZUNvbmZpZyxvLnNldFRoZW1lQ29uZmlnKGUpLGkuc2V0Q29uZmlnKGUpLHRoaXMuaW5pdFVpKCl9YXN5bmMgaW5pdFVpKCl7aWYodHlwZW9mIHdpbmRvdzxcInVcIil7YXdhaXQgaW1wb3J0KFwiQHdhbGxldGNvbm5lY3QvbW9kYWwtdWlcIik7Y29uc3QgZT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwid2NtLW1vZGFsXCIpO2RvY3VtZW50LmJvZHkuaW5zZXJ0QWRqYWNlbnRFbGVtZW50KFwiYmVmb3JlZW5kXCIsZSksbi5zZXRJc1VpTG9hZGVkKCEwKX19fWV4cG9ydHtkIGFzIFdhbGxldENvbm5lY3RNb2RhbH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXBcbiJdLCJuYW1lcyI6WyJNb2RhbEN0cmwiLCJ0IiwiVGhlbWVDdHJsIiwibyIsIkNvbmZpZ0N0cmwiLCJpIiwiT3B0aW9uc0N0cmwiLCJuIiwiZCIsImluaXRVaSIsImUiLCJkb2N1bWVudCIsImNyZWF0ZUVsZW1lbnQiLCJib2R5IiwiaW5zZXJ0QWRqYWNlbnRFbGVtZW50Iiwic2V0SXNVaUxvYWRlZCIsImNvbnN0cnVjdG9yIiwib3Blbk1vZGFsIiwib3BlbiIsImNsb3NlTW9kYWwiLCJjbG9zZSIsInN1YnNjcmliZU1vZGFsIiwic3Vic2NyaWJlIiwic2V0VGhlbWUiLCJzZXRUaGVtZUNvbmZpZyIsInNldENvbmZpZyIsIldhbGxldENvbm5lY3RNb2RhbCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/@walletconnect+modal@2.6.2_@types+react@18.2.56_react@18.2.0/node_modules/@walletconnect/modal/dist/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/valtio@1.11.2_@types+react@18.2.56_react@18.2.0/node_modules/valtio/esm/vanilla.mjs":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/valtio@1.11.2_@types+react@18.2.56_react@18.2.0/node_modules/valtio/esm/vanilla.mjs ***!
  \****************************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getVersion: function() { return /* binding */ getVersion; },\n/* harmony export */   proxy: function() { return /* binding */ proxy; },\n/* harmony export */   ref: function() { return /* binding */ ref; },\n/* harmony export */   snapshot: function() { return /* binding */ snapshot; },\n/* harmony export */   subscribe: function() { return /* binding */ subscribe; },\n/* harmony export */   unstable_buildProxyFunction: function() { return /* binding */ unstable_buildProxyFunction; }\n/* harmony export */ });\n/* harmony import */ var proxy_compare__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! proxy-compare */ \"(app-pages-browser)/./node_modules/.pnpm/proxy-compare@2.5.1/node_modules/proxy-compare/dist/index.modern.js\");\n\nconst isObject = (x)=>typeof x === \"object\" && x !== null;\nconst proxyStateMap = /* @__PURE__ */ new WeakMap();\nconst refSet = /* @__PURE__ */ new WeakSet();\nconst buildProxyFunction = function() {\n    let objectIs = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : Object.is, newProxy = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : (target, handler)=>new Proxy(target, handler), canProxy = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : (x)=>isObject(x) && !refSet.has(x) && (Array.isArray(x) || !(Symbol.iterator in x)) && !(x instanceof WeakMap) && !(x instanceof WeakSet) && !(x instanceof Error) && !(x instanceof Number) && !(x instanceof Date) && !(x instanceof String) && !(x instanceof RegExp) && !(x instanceof ArrayBuffer), defaultHandlePromise = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : (promise)=>{\n        switch(promise.status){\n            case \"fulfilled\":\n                return promise.value;\n            case \"rejected\":\n                throw promise.reason;\n            default:\n                throw promise;\n        }\n    }, snapCache = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : /* @__PURE__ */ new WeakMap(), createSnapshot = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : function(target, version) {\n        let handlePromise = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : defaultHandlePromise;\n        const cache = snapCache.get(target);\n        if ((cache == null ? void 0 : cache[0]) === version) {\n            return cache[1];\n        }\n        const snap = Array.isArray(target) ? [] : Object.create(Object.getPrototypeOf(target));\n        (0,proxy_compare__WEBPACK_IMPORTED_MODULE_0__.markToTrack)(snap, true);\n        snapCache.set(target, [\n            version,\n            snap\n        ]);\n        Reflect.ownKeys(target).forEach((key)=>{\n            if (Object.getOwnPropertyDescriptor(snap, key)) {\n                return;\n            }\n            const value = Reflect.get(target, key);\n            const desc = {\n                value,\n                enumerable: true,\n                // This is intentional to avoid copying with proxy-compare.\n                // It's still non-writable, so it avoids assigning a value.\n                configurable: true\n            };\n            if (refSet.has(value)) {\n                (0,proxy_compare__WEBPACK_IMPORTED_MODULE_0__.markToTrack)(value, false);\n            } else if (value instanceof Promise) {\n                delete desc.value;\n                desc.get = ()=>handlePromise(value);\n            } else if (proxyStateMap.has(value)) {\n                const [target2, ensureVersion] = proxyStateMap.get(value);\n                desc.value = createSnapshot(target2, ensureVersion(), handlePromise);\n            }\n            Object.defineProperty(snap, key, desc);\n        });\n        return Object.preventExtensions(snap);\n    }, proxyCache = arguments.length > 6 && arguments[6] !== void 0 ? arguments[6] : /* @__PURE__ */ new WeakMap(), versionHolder = arguments.length > 7 && arguments[7] !== void 0 ? arguments[7] : [\n        1,\n        1\n    ], proxyFunction = arguments.length > 8 && arguments[8] !== void 0 ? arguments[8] : (initialObject)=>{\n        if (!isObject(initialObject)) {\n            throw new Error(\"object required\");\n        }\n        const found = proxyCache.get(initialObject);\n        if (found) {\n            return found;\n        }\n        let version = versionHolder[0];\n        const listeners = /* @__PURE__ */ new Set();\n        const notifyUpdate = function(op) {\n            let nextVersion = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : ++versionHolder[0];\n            if (version !== nextVersion) {\n                version = nextVersion;\n                listeners.forEach((listener)=>listener(op, nextVersion));\n            }\n        };\n        let checkVersion = versionHolder[1];\n        const ensureVersion = function() {\n            let nextCheckVersion = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : ++versionHolder[1];\n            if (checkVersion !== nextCheckVersion && !listeners.size) {\n                checkVersion = nextCheckVersion;\n                propProxyStates.forEach((param)=>{\n                    let [propProxyState] = param;\n                    const propVersion = propProxyState[1](nextCheckVersion);\n                    if (propVersion > version) {\n                        version = propVersion;\n                    }\n                });\n            }\n            return version;\n        };\n        const createPropListener = (prop)=>(op, nextVersion)=>{\n                const newOp = [\n                    ...op\n                ];\n                newOp[1] = [\n                    prop,\n                    ...newOp[1]\n                ];\n                notifyUpdate(newOp, nextVersion);\n            };\n        const propProxyStates = /* @__PURE__ */ new Map();\n        const addPropListener = (prop, propProxyState)=>{\n            if (( false ? 0 : void 0) !== \"production\" && propProxyStates.has(prop)) {\n                throw new Error(\"prop listener already exists\");\n            }\n            if (listeners.size) {\n                const remove = propProxyState[3](createPropListener(prop));\n                propProxyStates.set(prop, [\n                    propProxyState,\n                    remove\n                ]);\n            } else {\n                propProxyStates.set(prop, [\n                    propProxyState\n                ]);\n            }\n        };\n        const removePropListener = (prop)=>{\n            var _a;\n            const entry = propProxyStates.get(prop);\n            if (entry) {\n                propProxyStates.delete(prop);\n                (_a = entry[1]) == null ? void 0 : _a.call(entry);\n            }\n        };\n        const addListener = (listener)=>{\n            listeners.add(listener);\n            if (listeners.size === 1) {\n                propProxyStates.forEach((param, prop)=>{\n                    let [propProxyState, prevRemove] = param;\n                    if (( false ? 0 : void 0) !== \"production\" && prevRemove) {\n                        throw new Error(\"remove already exists\");\n                    }\n                    const remove = propProxyState[3](createPropListener(prop));\n                    propProxyStates.set(prop, [\n                        propProxyState,\n                        remove\n                    ]);\n                });\n            }\n            const removeListener = ()=>{\n                listeners.delete(listener);\n                if (listeners.size === 0) {\n                    propProxyStates.forEach((param, prop)=>{\n                        let [propProxyState, remove] = param;\n                        if (remove) {\n                            remove();\n                            propProxyStates.set(prop, [\n                                propProxyState\n                            ]);\n                        }\n                    });\n                }\n            };\n            return removeListener;\n        };\n        const baseObject = Array.isArray(initialObject) ? [] : Object.create(Object.getPrototypeOf(initialObject));\n        const handler = {\n            deleteProperty (target, prop) {\n                const prevValue = Reflect.get(target, prop);\n                removePropListener(prop);\n                const deleted = Reflect.deleteProperty(target, prop);\n                if (deleted) {\n                    notifyUpdate([\n                        \"delete\",\n                        [\n                            prop\n                        ],\n                        prevValue\n                    ]);\n                }\n                return deleted;\n            },\n            set (target, prop, value, receiver) {\n                const hasPrevValue = Reflect.has(target, prop);\n                const prevValue = Reflect.get(target, prop, receiver);\n                if (hasPrevValue && (objectIs(prevValue, value) || proxyCache.has(value) && objectIs(prevValue, proxyCache.get(value)))) {\n                    return true;\n                }\n                removePropListener(prop);\n                if (isObject(value)) {\n                    value = (0,proxy_compare__WEBPACK_IMPORTED_MODULE_0__.getUntracked)(value) || value;\n                }\n                let nextValue = value;\n                if (value instanceof Promise) {\n                    value.then((v)=>{\n                        value.status = \"fulfilled\";\n                        value.value = v;\n                        notifyUpdate([\n                            \"resolve\",\n                            [\n                                prop\n                            ],\n                            v\n                        ]);\n                    }).catch((e)=>{\n                        value.status = \"rejected\";\n                        value.reason = e;\n                        notifyUpdate([\n                            \"reject\",\n                            [\n                                prop\n                            ],\n                            e\n                        ]);\n                    });\n                } else {\n                    if (!proxyStateMap.has(value) && canProxy(value)) {\n                        nextValue = proxyFunction(value);\n                    }\n                    const childProxyState = !refSet.has(nextValue) && proxyStateMap.get(nextValue);\n                    if (childProxyState) {\n                        addPropListener(prop, childProxyState);\n                    }\n                }\n                Reflect.set(target, prop, nextValue, receiver);\n                notifyUpdate([\n                    \"set\",\n                    [\n                        prop\n                    ],\n                    value,\n                    prevValue\n                ]);\n                return true;\n            }\n        };\n        const proxyObject = newProxy(baseObject, handler);\n        proxyCache.set(initialObject, proxyObject);\n        const proxyState = [\n            baseObject,\n            ensureVersion,\n            createSnapshot,\n            addListener\n        ];\n        proxyStateMap.set(proxyObject, proxyState);\n        Reflect.ownKeys(initialObject).forEach((key)=>{\n            const desc = Object.getOwnPropertyDescriptor(initialObject, key);\n            if (\"value\" in desc) {\n                proxyObject[key] = initialObject[key];\n                delete desc.value;\n                delete desc.writable;\n            }\n            Object.defineProperty(baseObject, key, desc);\n        });\n        return proxyObject;\n    };\n    return [\n        // public functions\n        proxyFunction,\n        // shared state\n        proxyStateMap,\n        refSet,\n        // internal things\n        objectIs,\n        newProxy,\n        canProxy,\n        defaultHandlePromise,\n        snapCache,\n        createSnapshot,\n        proxyCache,\n        versionHolder\n    ];\n};\nconst [defaultProxyFunction] = buildProxyFunction();\nfunction proxy() {\n    let initialObject = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return defaultProxyFunction(initialObject);\n}\nfunction getVersion(proxyObject) {\n    const proxyState = proxyStateMap.get(proxyObject);\n    return proxyState == null ? void 0 : proxyState[1]();\n}\nfunction subscribe(proxyObject, callback, notifyInSync) {\n    const proxyState = proxyStateMap.get(proxyObject);\n    if (( false ? 0 : void 0) !== \"production\" && !proxyState) {\n        console.warn(\"Please use proxy object\");\n    }\n    let promise;\n    const ops = [];\n    const addListener = proxyState[3];\n    let isListenerActive = false;\n    const listener = (op)=>{\n        ops.push(op);\n        if (notifyInSync) {\n            callback(ops.splice(0));\n            return;\n        }\n        if (!promise) {\n            promise = Promise.resolve().then(()=>{\n                promise = void 0;\n                if (isListenerActive) {\n                    callback(ops.splice(0));\n                }\n            });\n        }\n    };\n    const removeListener = addListener(listener);\n    isListenerActive = true;\n    return ()=>{\n        isListenerActive = false;\n        removeListener();\n    };\n}\nfunction snapshot(proxyObject, handlePromise) {\n    const proxyState = proxyStateMap.get(proxyObject);\n    if (( false ? 0 : void 0) !== \"production\" && !proxyState) {\n        console.warn(\"Please use proxy object\");\n    }\n    const [target, ensureVersion, createSnapshot] = proxyState;\n    return createSnapshot(target, ensureVersion(), handlePromise);\n}\nfunction ref(obj) {\n    refSet.add(obj);\n    return obj;\n}\nconst unstable_buildProxyFunction = buildProxyFunction;\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/valtio@1.11.2_@types+react@18.2.56_react@18.2.0/node_modules/valtio/esm/vanilla.mjs\n"));

/***/ })

}]);